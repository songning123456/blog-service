INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d08bf00140', '<div class=\"content\">\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/e62aba45.png\" alt></p>\n <p>你好，2019</p>\n <p>再见，2018</p>\n <p>又到了一年辞旧迎新的时候，大家应该也和美美一样，在忙着总结回顾和展望规划吧。</p>\n <p>按老惯例，我们该献上技术年货了。今年首先出场的，是我们的技术沙龙大套餐！</p>\n <p>美团技术沙龙是由美团技术团队和美团科协主办的线下技术活动，每期沙龙邀请美团和同行公司的技术专家分享来自一线的实践经验，覆盖前端、后台、系统、数据、算法、测试、运维等技术领域。目前已在北京、上海、厦门、成都等城市成功举办了48期，吸引了超过2万名工程师报名参会。除了现场亲密交流之外，大家还在会后继续进微信群里切磋问道。</p>\n <p>我们同时也定期举办线上沙龙，有更多的朋友已经在线收听或收看过我们的直播。</p>\n <p>过去的一年里，我们一共举办了19场线下沙龙，16次线上沙龙，包括99位讲师，85个演讲，70+小时分享。除美团的几十位专家之外，还邀请了百度、蚂蚁金服、去哪儿、京东等同行。主题既有最火的AI热点——深度学习、强化学习、知识图谱，新潮技术Go、Kotlin、Flutter的落地实践，也有大规模互联网平台不可或缺的稳定性保障、高可用架构、监控体系、持续集成，还有接地气的运营系统、数据平台、配送调度的经验，更少不了CAT、mpvue、EasyReact这些火爆的开源项目……</p>\n <p>我们整理了今年所有线上线下沙龙的演讲稿和视频，分享给大家，希望能帮助大家在技术之路上继续追求卓越。</p>\n <p>还没有关注美团技术团队公众号（meituantech）的同学，赶快关注哟。</p>\n <p>现在，大家请闭眼，大餐来了～～～</p>\n <h2 id=\"美团线下沙龙\">美团线下沙龙</h2>\n <p>任意点击标题，就能直接查看视频及演讲稿</p>\n <p><strong>Tech Salon 048：<a href=\"https://tech.meituan.com/salon/#/44602\">AI在复杂业务场景中的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|何仁清 美团研究员 2018/12/22</strong></p>\n <p><a href=\"http://dpurl.cn/1aGUjwA\">《深度强化学习技术在智能调度中的应用》</a>王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jtvI8lt\">《深度学习在物流配送舆情监控中的应用》</a>李超@京东物流NLP方向资深算法工程师</p>\n <p><a href=\"http://dpurl.cn/UxQxdqg\">《美团搜索中的深度学习实践》</a>周翔@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 047：<a href=\"https://tech.meituan.com/salon/#/44452\">运营效率系统架构演进之道</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|阳纯飞 美团高级技术专家 2018/12/08</strong></p>\n <p><a href=\"http://dpurl.cn/e5FWi1r\">《面向O2O大促活动的高效运营系统实践》</a>李力@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/umMxuem\">《京东物流实时数据平台性能优化实践》</a>杨国斌@京东技术专家</p>\n <p><a href=\"http://dpurl.cn/S9p9Rct\">《外卖商家菜品运营效率提升实践》</a>罗震@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/C0DTDPI\">《外卖商户数据化运营体系建设》</a>李觊@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 046：<a href=\"https://tech.meituan.com/salon/#/44246\">AI在外卖配送的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王兴星&amp;郝井华 美团研究员 2018/11/25</strong></p>\n <p><a href=\"http://dpurl.cn/OG1VITL\">《预估模型在外卖广告的演进》</a>谢乾龙@美团外卖广告算法专家</p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《即时配送中的运筹优化技术》</a>郝井华@美团配送智能调度平台负责人</p>\n <p><a href=\"http://dpurl.cn/b2demu3\">《即时配送中的机器学习技术》</a>何仁清@美团配送AI方向负责人</p>\n <hr>\n <p><strong>Tech Salon 045：<a href=\"https://tech.meituan.com/salon/#/44241\">如何构建高性能、稳定的后端服务系统</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 |方建平 美团技术总监 2018/11/24</strong></p>\n <p><a href=\"http://dpurl.cn/h2tSH0d\">《美团度假交易稳定性建设实践》</a>韩建起@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1eEmiJa\">《美团配送智能调度系统架构演进》</a>郑伟@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/mOM70TU\">《美团稳定性保障平台Rhino》</a>占军@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/36eUWw7\">《美团外卖LBS服务实践》</a>易奎@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 044：<a href=\"https://tech.meituan.com/salon/#/42521\">千万级日活App的质量保证</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|李永刚 美团研究员 2018/09/15</strong></p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《AI语音产品测试》</a>于海生@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/EkrvqQQ\">《美团外卖客户端 UI 自动化测试实践》</a>刘健@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9wTSjRP\">《客户端QA效率工具》</a>赵晔@美团测试开发架构师</p>\n <hr>\n <p><strong>Tech Salon 043：<a href=\"https://tech.meituan.com/salon/#/42318\">美团金融千万级交易系统质量保障之路</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|赫大龙 美团高级技术专家 2018/09/01</strong></p>\n <p><a href=\"http://dpurl.cn/WBj4g1R\">《智能支付稳定性测试实战》</a>范勋伟@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/S3QC9nw\">《去哪儿网服务端自动化测试体系》</a>郑希文@去哪儿</p>\n <p><a href=\"http://dpurl.cn/bxidDmT\">《线上支付SDK质量保证体系》</a>张朋飞@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/ICnY9EY\">《质量运营演变之道》</a>符欣@美团高级开发工程师</p>\n <hr>\n <p><strong>Tech Salon 042：<a href=\"https://tech.meituan.com/salon/#/42098\">高效率前端与架构实战</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王鹤 美团高级技术专家 2018/08/26</strong></p>\n <p><a href=\"http://dpurl.cn/4zd1g7v\">《EH — 用黑科技打造全新的 Hybrid 体验》</a> 陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/atWgFPm\">《mpvue小程序开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/uBGnNe7\">《美团金融前端工程化最佳实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/C21IwKR\">《前端架构师应该做的事——架构模型与技术实践》</a>王鹤@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 041：<a href=\"https://tech.meituan.com/salon/#/41922\">企业级前端开发360°实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/08/18</strong></p>\n <p><a href=\"http://dpurl.cn/6enzQ6K\">《浅谈流量劫持与防治》</a>刘洋河@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/wJLdbeB\">《前端高可用性保障实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/WvMgJ22\">《跨容器高性能的离线化方案在美团的实践和探索》</a>龙佳文@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/6ea1W3X\">《前端遇上Go: 静态资源增量更新的新实践》</a>杨义天@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 040：<a href=\"https://tech.meituan.com/salon/#/41406\">前端遇上黑科技，打造全新界面体验与效率</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 | 冯湧 美团研发总监 2018/08/04</strong></p>\n <p><a href=\"http://dpurl.cn/dcUUsv7\">《EH——用黑科技打造的全新的 Hybrid 体验》</a>陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/omiEOIh\">《Vix——如何打造一个高效的前端组件库》</a>张胜@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/eSbf7eY\">《委以重任的Node.js——百亿级访问实践》</a>迪波威@百度资深软件工程师</p>\n <p><a href=\"http://dpurl.cn/1NLlrH7\">《构建时预渲染——网页首帧优化实践》</a>尚寒阳@美团资深研发工程师</p>\n <hr>\n <p><strong>Tech Salon 039：<a href=\"https://tech.meituan.com/salon/#/41065\">新思路打造移动端高效研发体系</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|周辉 美团资深架构师 2018/07/21</strong></p>\n <p><a href=\"http://dpurl.cn/rtXsz0X\">《Picasso在大众点评首页的应用》</a>虞惠文@美团Android开发工程师</p>\n <p><a href=\"http://dpurl.cn/gJkC96U\">《移动前后端开发解耦》</a>林晨@美团后端技术专家</p>\n <p><a href=\"http://dpurl.cn/kcEERJD\">《打造稳定、灵活、高效的运营配置平台》</a>蒋国宝@美团后端技术架构师</p>\n <p><a href=\"http://dpurl.cn/GEdFow2\">《移动持续集成实践》</a>何智聪@美团iOS技术专家</p>\n <hr>\n <p><strong>Tech Salon 038：<a href=\"https://tech.meituan.com/salon/#/40348\">旅游电商架构攻略指南</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|金孟哲 美团高级技术专家 2018/07/07</strong></p>\n <p><a href=\"http://dpurl.cn/9NA3IDI\">《旅游度假预订系统架构演进实践》</a> 金孟哲@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/pdIQztt\">《旅游度假多要素动态打包实践》</a> 王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/1mx2Mhn\">《旅游度假商品中心架构演进》</a> 徐泼@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jUc9Krm\">《直连低可信系统，实现高可用服务实践》</a> 郑旭@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 037：<a href=\"https://tech.meituan.com/salon/#/39548\">美团外卖两千万日订单背后的客户端技术架构</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|吴凯 美团高级技术专家 2018/06/23</strong></p>\n <p><a href=\"http://dpurl.cn/9VqeRQP\">《美团外卖客户端技术架构演进》</a>朱瑞利@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/b4BhI2i\">《客户端监控体系建设》</a>冯天锡@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/0WglRb7\">《客户端多端复用架构》</a>郑金光@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/BN8S6uV\">《客户端容灾能力体系》</a>李富强@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 036：<a href=\"https://tech.meituan.com/salon/#/38188\">大前端的动态化与可用性建设</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|洪磊 美团高级技术专家 2018/06/02</strong></p>\n <p><a href=\"http://dpurl.cn/4x8m29f\">《大前端高可用性建设》</a>李富强@美团资深前端工程师</p>\n <p><a href=\"http://dpurl.cn/aK72uB3\">《React fiber漫谈》</a>覃俊文@蚂蚁金服前端技术专家</p>\n <p><a href=\"http://dpurl.cn/uLlIi3q\">《小程序开发的新姿势 -mpvue 的应用和实践》</a>胡成全@美团前端技术专家</p>\n <p><a href=\"http://dpurl.cn/0n9ANpz\">《ReactNative性能优化企业级应用》</a>赵宏罡@腾讯资深前端开发工程师</p>\n <hr>\n <p><strong>Tech Salon 035：<a href=\"https://tech.meituan.com/salon/#/35673\">前端热点技术的企业级实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/04/21</strong></p>\n <p><a href=\"http://dpurl.cn/X8hmGar\">《前端遇上 Go——静态资源增量更新的新实践》</a>刘洋河@美团高级前端工程师</p>\n <p><a href=\"http://dpurl.cn/c2j4URx\">《金融扫码付 H5 迁移小程序拓荒之旅》</a>陈瑶@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/8VE6Q70\">《小程序开发的新姿势 - mpvue 开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 034：<a href=\"https://tech.meituan.com/salon/#/35161\">聊聊酒店系统高可用架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|许关飞 美团研究员 2018/04/14</strong></p>\n <p><a href=\"http://dpurl.cn/KwRRM3V\">《高可用之中间件技术》</a>吴湘@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9XzOUnT\">《分布式开源监控系统CAT在美团点评演进》</a>尤勇@美团研究员</p>\n <p><a href=\"http://dpurl.cn/3FHVwpo\">《美团旅行住宿产品中心系统高可用实战》</a>槐国涛@美团酒店CRS商品负责人</p>\n <p><a href=\"http://dpurl.cn/Ynt6aVE\">《美团旅行酒店住宿订单系统高可用实战》</a>李磊@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/2gLXCnH\">《美团旅行直连系统高可用实战》</a>秦浏杰@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 033：<a href=\"https://tech.meituan.com/salon/#/31815\">企业信息化建设和安全管理</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|邓昀泽 美团企业平台研发负责人 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/2Cpj4tO\">《美团点评内部系统构建之路》</a>邓昀泽@美团企业平台研发部负责人</p>\n <p><a href=\"http://dpurl.cn/IGFzn0f\">《企业信息防护体系建设》</a>陆平@美亚柏科企业电子数据取证事业部副总</p>\n <p><a href=\"http://dpurl.cn/BTYUxbh\">《企业如何应对安全威胁》</a>游兴旺@美团企业平台研发高级总监</p>\n <hr>\n <p><strong>Tech Salon 032：<a href=\"https://tech.meituan.com/salon/#/31816\">移动开发热点技术—动态日志、监控、Hybrid、插件化</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|方锦涛 美团高级技术专家 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/hi6x3tX\">《线上问题排查体系构建：动态日志》</a> 陈潼@美团Android资深工程师</p>\n <p><a href=\"http://dpurl.cn/BsmtuwJ\">《混合应用工程化实践》</a> 李罡@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/xXexGwG\">《Caesium iOS启动时间监控》</a> 吴君阳@美团iOS工程师</p>\n <hr>\n <p><strong>Tech Salon 031：<a href=\"https://tech.meituan.com/salon/#/31470\">线下支付千万级订单服务—前后端架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/01/27</strong></p>\n <p><a href=\"http://dpurl.cn/83yGayf\">《扫码付前端可用性保障实践》</a> 田泱@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/uQv3mVL\">《业务系统的建设之路》</a>刘运@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1HxNpDH\">《Web离线化加载》</a> 于秋@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/tbNSxRx\">《基于WTL框架的Windows开发最佳实践》</a> 钱声鹏@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 030：<a href=\"https://tech.meituan.com/salon/#/30554\">餐饮生态高可用系统实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|温华剑 美团技术专家 2018/01/13</strong></p>\n <p><a href=\"http://dpurl.cn/i40jBTG\">《从“0”开始-美团收银客户端》</a>聂龙羽@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/8qoK8Fa\">《美团餐饮生态大数据架构实践》</a>牛江浩@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/u49UVD9\">《餐饮开放平台的高可用实践》</a>朱洋波@美团技术专家</p>\n <hr>\n <h2 id=\"美团线上沙龙\">美团线上沙龙</h2>\n <p>任意点击标题，就能在线观看视频或者文章</p>\n <p><strong>On-Line Salon 33：<a href=\"https://m.lizhiweike.com/classroom/10038952\">美团大脑 智享生活</a></strong> 分享人：王仲远 美团点评高级研究员</p>\n <p><strong>On-Line Salon 32：<a href=\"https://gitbook.cn/books/5bcf24b6211d0e68b1b788f0/index.html\">基于深度学习的计算机视觉技术在无人驾驶中的应用</a></strong> 分享人：刘宇达 美团点评资深算法工程师</p>\n <p><strong>On-Line Salon 31：<a href=\"https://m.lizhiweike.com/classroom/9363553\">利用响应式来解决客户端问题</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 30：<a href=\"https://gitbook.cn/books/5b927473780fdb5e97d2a3bc/index.html\">美团针对 Redis Rehash 机制的探索和实践</a></strong> 分享人：葛春林 美团点评资深工程师</p>\n <p><strong>On-Line Salon 29：<a href=\"https://m.lizhiweike.com/classroom/8660084\">Flutter 原理与实践</a></strong> 分享人：李少杰 美团点评资深工程师</p>\n <p><strong>On-Line Salon 28：<a href=\"https://gitbook.cn/books/5b8746c7ea7bc512755e4e36/index.html\">如何基于深度学习实现图像的智能审核</a></strong> 分享人：魏晓明 美团点评高级技术专家</p>\n <p><strong>On-Line Salon 27：<a href=\"https://gitbook.cn/books/5b7e5a44a63144311b8dbf2d/index.html\">美团客户端响应式框架 EasyReact 开源</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 26：<a href=\"https://gitbook.cn/books/5b752e45e8b81c0748e349e1/index.html\">移动持续集成在大众点评的实践</a></strong> 分享人：何智聪、邢轶 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 25：Kotlin <a href=\"https://gitbook.cn/books/5b6c28169f4dd1284bf82f99/index.html\">代码检查探索与实践</a></strong> 分享人：周佳 美团点评前端开发工程师</p>\n <p><strong>On-Line Salon 24：<a href=\"https://gitbook.cn/books/5b67bceca51b8d5f8ecbcf79/index.html\">静态资源增量更新的新实践</a></strong> 分享人：刘洋河 美团点评资深工程师</p>\n <p><strong>On-Line Salon 23：<a href=\"https://gitbook.cn/books/5b5ab5721642ed2ba79b6630/index.html\">点评侧用户行为检索系统</a></strong> 分享人：朱凯 美团点评资深工程师</p>\n <p><strong>On-Line Salon 22：<a href=\"https://gitbook.cn/books/5b43fc6316959658636f059e/index.html\">深度学习在美团搜索广告排序的应用实践</a></strong> 分享人：薛欢、梁玉林、王新 美团点评资深工程师</p>\n <p><strong>On-Line Salon 21：<a href=\"https://gitbook.cn/books/5ae9bcbeb02ff82d0d1b0517/index.html\">使用 Mpvue 开发微信小程序的最佳实践</a></strong> 分享人：胡成全 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 20：<a href=\"https://gitbook.cn/books/5ad4a60daf8f2f35290f46d5/index.html\">亿级用户个性化品类推荐实战解析</a></strong> 分享人：张晓宇 美团高级工程师</p>\n <p><strong>On-Line Salon 19：<a href=\"https://gitbook.cn/books/5ac2325c9e924a1dc029c6b7/index.html\">MVVM 在美团点评酒旅业务中的实践</a></strong> 分享人：吴卓 美团点评技术专家</p>\n <p><strong>On-Line Salon 18：<a href=\"https://gitbook.cn/books/5aa6850a9c3cf94d4915f97c/index.html\">深度学习在美团点评推荐业务中实践</a></strong> 分享人：陈文石 美团点评算法专家</p>\n <p>感恩！99位出品人和讲师，70多个小时的分享，感谢他们给我们带来一线的技术实践分享，感谢他们给我们2万多小伙伴送上技术的“饕餮盛宴”。除了美团技术团队的讲师们，我们还要特别感谢来自腾讯、蚂蚁金服、百度、京东、去哪儿、美亚柏科等公司的讲师们，感谢你们的付出和努力，我们期待新的一年会有更多的合作！</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/1df24ed2.png\" alt=\"2018全年出品人及讲师\"></p>\n</div>', '2019-07-24 15:09:48', 'JavaScript', '8790', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频0.45328043914133864', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频', '2019-07-24 15:09:48', ' 技术学院');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d08c640141', '<div class=\"content\">\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/e62aba45.png\" alt></p>\n <p>你好，2019</p>\n <p>再见，2018</p>\n <p>又到了一年辞旧迎新的时候，大家应该也和美美一样，在忙着总结回顾和展望规划吧。</p>\n <p>按老惯例，我们该献上技术年货了。今年首先出场的，是我们的技术沙龙大套餐！</p>\n <p>美团技术沙龙是由美团技术团队和美团科协主办的线下技术活动，每期沙龙邀请美团和同行公司的技术专家分享来自一线的实践经验，覆盖前端、后台、系统、数据、算法、测试、运维等技术领域。目前已在北京、上海、厦门、成都等城市成功举办了48期，吸引了超过2万名工程师报名参会。除了现场亲密交流之外，大家还在会后继续进微信群里切磋问道。</p>\n <p>我们同时也定期举办线上沙龙，有更多的朋友已经在线收听或收看过我们的直播。</p>\n <p>过去的一年里，我们一共举办了19场线下沙龙，16次线上沙龙，包括99位讲师，85个演讲，70+小时分享。除美团的几十位专家之外，还邀请了百度、蚂蚁金服、去哪儿、京东等同行。主题既有最火的AI热点——深度学习、强化学习、知识图谱，新潮技术Go、Kotlin、Flutter的落地实践，也有大规模互联网平台不可或缺的稳定性保障、高可用架构、监控体系、持续集成，还有接地气的运营系统、数据平台、配送调度的经验，更少不了CAT、mpvue、EasyReact这些火爆的开源项目……</p>\n <p>我们整理了今年所有线上线下沙龙的演讲稿和视频，分享给大家，希望能帮助大家在技术之路上继续追求卓越。</p>\n <p>还没有关注美团技术团队公众号（meituantech）的同学，赶快关注哟。</p>\n <p>现在，大家请闭眼，大餐来了～～～</p>\n <h2 id=\"美团线下沙龙\">美团线下沙龙</h2>\n <p>任意点击标题，就能直接查看视频及演讲稿</p>\n <p><strong>Tech Salon 048：<a href=\"https://tech.meituan.com/salon/#/44602\">AI在复杂业务场景中的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|何仁清 美团研究员 2018/12/22</strong></p>\n <p><a href=\"http://dpurl.cn/1aGUjwA\">《深度强化学习技术在智能调度中的应用》</a>王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jtvI8lt\">《深度学习在物流配送舆情监控中的应用》</a>李超@京东物流NLP方向资深算法工程师</p>\n <p><a href=\"http://dpurl.cn/UxQxdqg\">《美团搜索中的深度学习实践》</a>周翔@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 047：<a href=\"https://tech.meituan.com/salon/#/44452\">运营效率系统架构演进之道</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|阳纯飞 美团高级技术专家 2018/12/08</strong></p>\n <p><a href=\"http://dpurl.cn/e5FWi1r\">《面向O2O大促活动的高效运营系统实践》</a>李力@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/umMxuem\">《京东物流实时数据平台性能优化实践》</a>杨国斌@京东技术专家</p>\n <p><a href=\"http://dpurl.cn/S9p9Rct\">《外卖商家菜品运营效率提升实践》</a>罗震@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/C0DTDPI\">《外卖商户数据化运营体系建设》</a>李觊@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 046：<a href=\"https://tech.meituan.com/salon/#/44246\">AI在外卖配送的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王兴星&amp;郝井华 美团研究员 2018/11/25</strong></p>\n <p><a href=\"http://dpurl.cn/OG1VITL\">《预估模型在外卖广告的演进》</a>谢乾龙@美团外卖广告算法专家</p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《即时配送中的运筹优化技术》</a>郝井华@美团配送智能调度平台负责人</p>\n <p><a href=\"http://dpurl.cn/b2demu3\">《即时配送中的机器学习技术》</a>何仁清@美团配送AI方向负责人</p>\n <hr>\n <p><strong>Tech Salon 045：<a href=\"https://tech.meituan.com/salon/#/44241\">如何构建高性能、稳定的后端服务系统</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 |方建平 美团技术总监 2018/11/24</strong></p>\n <p><a href=\"http://dpurl.cn/h2tSH0d\">《美团度假交易稳定性建设实践》</a>韩建起@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1eEmiJa\">《美团配送智能调度系统架构演进》</a>郑伟@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/mOM70TU\">《美团稳定性保障平台Rhino》</a>占军@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/36eUWw7\">《美团外卖LBS服务实践》</a>易奎@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 044：<a href=\"https://tech.meituan.com/salon/#/42521\">千万级日活App的质量保证</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|李永刚 美团研究员 2018/09/15</strong></p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《AI语音产品测试》</a>于海生@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/EkrvqQQ\">《美团外卖客户端 UI 自动化测试实践》</a>刘健@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9wTSjRP\">《客户端QA效率工具》</a>赵晔@美团测试开发架构师</p>\n <hr>\n <p><strong>Tech Salon 043：<a href=\"https://tech.meituan.com/salon/#/42318\">美团金融千万级交易系统质量保障之路</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|赫大龙 美团高级技术专家 2018/09/01</strong></p>\n <p><a href=\"http://dpurl.cn/WBj4g1R\">《智能支付稳定性测试实战》</a>范勋伟@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/S3QC9nw\">《去哪儿网服务端自动化测试体系》</a>郑希文@去哪儿</p>\n <p><a href=\"http://dpurl.cn/bxidDmT\">《线上支付SDK质量保证体系》</a>张朋飞@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/ICnY9EY\">《质量运营演变之道》</a>符欣@美团高级开发工程师</p>\n <hr>\n <p><strong>Tech Salon 042：<a href=\"https://tech.meituan.com/salon/#/42098\">高效率前端与架构实战</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王鹤 美团高级技术专家 2018/08/26</strong></p>\n <p><a href=\"http://dpurl.cn/4zd1g7v\">《EH — 用黑科技打造全新的 Hybrid 体验》</a> 陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/atWgFPm\">《mpvue小程序开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/uBGnNe7\">《美团金融前端工程化最佳实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/C21IwKR\">《前端架构师应该做的事——架构模型与技术实践》</a>王鹤@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 041：<a href=\"https://tech.meituan.com/salon/#/41922\">企业级前端开发360°实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/08/18</strong></p>\n <p><a href=\"http://dpurl.cn/6enzQ6K\">《浅谈流量劫持与防治》</a>刘洋河@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/wJLdbeB\">《前端高可用性保障实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/WvMgJ22\">《跨容器高性能的离线化方案在美团的实践和探索》</a>龙佳文@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/6ea1W3X\">《前端遇上Go: 静态资源增量更新的新实践》</a>杨义天@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 040：<a href=\"https://tech.meituan.com/salon/#/41406\">前端遇上黑科技，打造全新界面体验与效率</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 | 冯湧 美团研发总监 2018/08/04</strong></p>\n <p><a href=\"http://dpurl.cn/dcUUsv7\">《EH——用黑科技打造的全新的 Hybrid 体验》</a>陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/omiEOIh\">《Vix——如何打造一个高效的前端组件库》</a>张胜@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/eSbf7eY\">《委以重任的Node.js——百亿级访问实践》</a>迪波威@百度资深软件工程师</p>\n <p><a href=\"http://dpurl.cn/1NLlrH7\">《构建时预渲染——网页首帧优化实践》</a>尚寒阳@美团资深研发工程师</p>\n <hr>\n <p><strong>Tech Salon 039：<a href=\"https://tech.meituan.com/salon/#/41065\">新思路打造移动端高效研发体系</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|周辉 美团资深架构师 2018/07/21</strong></p>\n <p><a href=\"http://dpurl.cn/rtXsz0X\">《Picasso在大众点评首页的应用》</a>虞惠文@美团Android开发工程师</p>\n <p><a href=\"http://dpurl.cn/gJkC96U\">《移动前后端开发解耦》</a>林晨@美团后端技术专家</p>\n <p><a href=\"http://dpurl.cn/kcEERJD\">《打造稳定、灵活、高效的运营配置平台》</a>蒋国宝@美团后端技术架构师</p>\n <p><a href=\"http://dpurl.cn/GEdFow2\">《移动持续集成实践》</a>何智聪@美团iOS技术专家</p>\n <hr>\n <p><strong>Tech Salon 038：<a href=\"https://tech.meituan.com/salon/#/40348\">旅游电商架构攻略指南</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|金孟哲 美团高级技术专家 2018/07/07</strong></p>\n <p><a href=\"http://dpurl.cn/9NA3IDI\">《旅游度假预订系统架构演进实践》</a> 金孟哲@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/pdIQztt\">《旅游度假多要素动态打包实践》</a> 王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/1mx2Mhn\">《旅游度假商品中心架构演进》</a> 徐泼@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jUc9Krm\">《直连低可信系统，实现高可用服务实践》</a> 郑旭@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 037：<a href=\"https://tech.meituan.com/salon/#/39548\">美团外卖两千万日订单背后的客户端技术架构</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|吴凯 美团高级技术专家 2018/06/23</strong></p>\n <p><a href=\"http://dpurl.cn/9VqeRQP\">《美团外卖客户端技术架构演进》</a>朱瑞利@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/b4BhI2i\">《客户端监控体系建设》</a>冯天锡@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/0WglRb7\">《客户端多端复用架构》</a>郑金光@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/BN8S6uV\">《客户端容灾能力体系》</a>李富强@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 036：<a href=\"https://tech.meituan.com/salon/#/38188\">大前端的动态化与可用性建设</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|洪磊 美团高级技术专家 2018/06/02</strong></p>\n <p><a href=\"http://dpurl.cn/4x8m29f\">《大前端高可用性建设》</a>李富强@美团资深前端工程师</p>\n <p><a href=\"http://dpurl.cn/aK72uB3\">《React fiber漫谈》</a>覃俊文@蚂蚁金服前端技术专家</p>\n <p><a href=\"http://dpurl.cn/uLlIi3q\">《小程序开发的新姿势 -mpvue 的应用和实践》</a>胡成全@美团前端技术专家</p>\n <p><a href=\"http://dpurl.cn/0n9ANpz\">《ReactNative性能优化企业级应用》</a>赵宏罡@腾讯资深前端开发工程师</p>\n <hr>\n <p><strong>Tech Salon 035：<a href=\"https://tech.meituan.com/salon/#/35673\">前端热点技术的企业级实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/04/21</strong></p>\n <p><a href=\"http://dpurl.cn/X8hmGar\">《前端遇上 Go——静态资源增量更新的新实践》</a>刘洋河@美团高级前端工程师</p>\n <p><a href=\"http://dpurl.cn/c2j4URx\">《金融扫码付 H5 迁移小程序拓荒之旅》</a>陈瑶@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/8VE6Q70\">《小程序开发的新姿势 - mpvue 开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 034：<a href=\"https://tech.meituan.com/salon/#/35161\">聊聊酒店系统高可用架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|许关飞 美团研究员 2018/04/14</strong></p>\n <p><a href=\"http://dpurl.cn/KwRRM3V\">《高可用之中间件技术》</a>吴湘@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9XzOUnT\">《分布式开源监控系统CAT在美团点评演进》</a>尤勇@美团研究员</p>\n <p><a href=\"http://dpurl.cn/3FHVwpo\">《美团旅行住宿产品中心系统高可用实战》</a>槐国涛@美团酒店CRS商品负责人</p>\n <p><a href=\"http://dpurl.cn/Ynt6aVE\">《美团旅行酒店住宿订单系统高可用实战》</a>李磊@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/2gLXCnH\">《美团旅行直连系统高可用实战》</a>秦浏杰@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 033：<a href=\"https://tech.meituan.com/salon/#/31815\">企业信息化建设和安全管理</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|邓昀泽 美团企业平台研发负责人 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/2Cpj4tO\">《美团点评内部系统构建之路》</a>邓昀泽@美团企业平台研发部负责人</p>\n <p><a href=\"http://dpurl.cn/IGFzn0f\">《企业信息防护体系建设》</a>陆平@美亚柏科企业电子数据取证事业部副总</p>\n <p><a href=\"http://dpurl.cn/BTYUxbh\">《企业如何应对安全威胁》</a>游兴旺@美团企业平台研发高级总监</p>\n <hr>\n <p><strong>Tech Salon 032：<a href=\"https://tech.meituan.com/salon/#/31816\">移动开发热点技术—动态日志、监控、Hybrid、插件化</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|方锦涛 美团高级技术专家 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/hi6x3tX\">《线上问题排查体系构建：动态日志》</a> 陈潼@美团Android资深工程师</p>\n <p><a href=\"http://dpurl.cn/BsmtuwJ\">《混合应用工程化实践》</a> 李罡@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/xXexGwG\">《Caesium iOS启动时间监控》</a> 吴君阳@美团iOS工程师</p>\n <hr>\n <p><strong>Tech Salon 031：<a href=\"https://tech.meituan.com/salon/#/31470\">线下支付千万级订单服务—前后端架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/01/27</strong></p>\n <p><a href=\"http://dpurl.cn/83yGayf\">《扫码付前端可用性保障实践》</a> 田泱@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/uQv3mVL\">《业务系统的建设之路》</a>刘运@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1HxNpDH\">《Web离线化加载》</a> 于秋@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/tbNSxRx\">《基于WTL框架的Windows开发最佳实践》</a> 钱声鹏@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 030：<a href=\"https://tech.meituan.com/salon/#/30554\">餐饮生态高可用系统实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|温华剑 美团技术专家 2018/01/13</strong></p>\n <p><a href=\"http://dpurl.cn/i40jBTG\">《从“0”开始-美团收银客户端》</a>聂龙羽@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/8qoK8Fa\">《美团餐饮生态大数据架构实践》</a>牛江浩@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/u49UVD9\">《餐饮开放平台的高可用实践》</a>朱洋波@美团技术专家</p>\n <hr>\n <h2 id=\"美团线上沙龙\">美团线上沙龙</h2>\n <p>任意点击标题，就能在线观看视频或者文章</p>\n <p><strong>On-Line Salon 33：<a href=\"https://m.lizhiweike.com/classroom/10038952\">美团大脑 智享生活</a></strong> 分享人：王仲远 美团点评高级研究员</p>\n <p><strong>On-Line Salon 32：<a href=\"https://gitbook.cn/books/5bcf24b6211d0e68b1b788f0/index.html\">基于深度学习的计算机视觉技术在无人驾驶中的应用</a></strong> 分享人：刘宇达 美团点评资深算法工程师</p>\n <p><strong>On-Line Salon 31：<a href=\"https://m.lizhiweike.com/classroom/9363553\">利用响应式来解决客户端问题</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 30：<a href=\"https://gitbook.cn/books/5b927473780fdb5e97d2a3bc/index.html\">美团针对 Redis Rehash 机制的探索和实践</a></strong> 分享人：葛春林 美团点评资深工程师</p>\n <p><strong>On-Line Salon 29：<a href=\"https://m.lizhiweike.com/classroom/8660084\">Flutter 原理与实践</a></strong> 分享人：李少杰 美团点评资深工程师</p>\n <p><strong>On-Line Salon 28：<a href=\"https://gitbook.cn/books/5b8746c7ea7bc512755e4e36/index.html\">如何基于深度学习实现图像的智能审核</a></strong> 分享人：魏晓明 美团点评高级技术专家</p>\n <p><strong>On-Line Salon 27：<a href=\"https://gitbook.cn/books/5b7e5a44a63144311b8dbf2d/index.html\">美团客户端响应式框架 EasyReact 开源</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 26：<a href=\"https://gitbook.cn/books/5b752e45e8b81c0748e349e1/index.html\">移动持续集成在大众点评的实践</a></strong> 分享人：何智聪、邢轶 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 25：Kotlin <a href=\"https://gitbook.cn/books/5b6c28169f4dd1284bf82f99/index.html\">代码检查探索与实践</a></strong> 分享人：周佳 美团点评前端开发工程师</p>\n <p><strong>On-Line Salon 24：<a href=\"https://gitbook.cn/books/5b67bceca51b8d5f8ecbcf79/index.html\">静态资源增量更新的新实践</a></strong> 分享人：刘洋河 美团点评资深工程师</p>\n <p><strong>On-Line Salon 23：<a href=\"https://gitbook.cn/books/5b5ab5721642ed2ba79b6630/index.html\">点评侧用户行为检索系统</a></strong> 分享人：朱凯 美团点评资深工程师</p>\n <p><strong>On-Line Salon 22：<a href=\"https://gitbook.cn/books/5b43fc6316959658636f059e/index.html\">深度学习在美团搜索广告排序的应用实践</a></strong> 分享人：薛欢、梁玉林、王新 美团点评资深工程师</p>\n <p><strong>On-Line Salon 21：<a href=\"https://gitbook.cn/books/5ae9bcbeb02ff82d0d1b0517/index.html\">使用 Mpvue 开发微信小程序的最佳实践</a></strong> 分享人：胡成全 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 20：<a href=\"https://gitbook.cn/books/5ad4a60daf8f2f35290f46d5/index.html\">亿级用户个性化品类推荐实战解析</a></strong> 分享人：张晓宇 美团高级工程师</p>\n <p><strong>On-Line Salon 19：<a href=\"https://gitbook.cn/books/5ac2325c9e924a1dc029c6b7/index.html\">MVVM 在美团点评酒旅业务中的实践</a></strong> 分享人：吴卓 美团点评技术专家</p>\n <p><strong>On-Line Salon 18：<a href=\"https://gitbook.cn/books/5aa6850a9c3cf94d4915f97c/index.html\">深度学习在美团点评推荐业务中实践</a></strong> 分享人：陈文石 美团点评算法专家</p>\n <p>感恩！99位出品人和讲师，70多个小时的分享，感谢他们给我们带来一线的技术实践分享，感谢他们给我们2万多小伙伴送上技术的“饕餮盛宴”。除了美团技术团队的讲师们，我们还要特别感谢来自腾讯、蚂蚁金服、百度、京东、去哪儿、美亚柏科等公司的讲师们，感谢你们的付出和努力，我们期待新的一年会有更多的合作！</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/1df24ed2.png\" alt=\"2018全年出品人及讲师\"></p>\n</div>', '2019-07-24 15:09:49', 'Java', '8790', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频0.9729033736041023', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频', '2019-07-24 15:09:49', ' 技术学院');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d08cb20142', '<div class=\"content\">\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/e62aba45.png\" alt></p>\n <p>你好，2019</p>\n <p>再见，2018</p>\n <p>又到了一年辞旧迎新的时候，大家应该也和美美一样，在忙着总结回顾和展望规划吧。</p>\n <p>按老惯例，我们该献上技术年货了。今年首先出场的，是我们的技术沙龙大套餐！</p>\n <p>美团技术沙龙是由美团技术团队和美团科协主办的线下技术活动，每期沙龙邀请美团和同行公司的技术专家分享来自一线的实践经验，覆盖前端、后台、系统、数据、算法、测试、运维等技术领域。目前已在北京、上海、厦门、成都等城市成功举办了48期，吸引了超过2万名工程师报名参会。除了现场亲密交流之外，大家还在会后继续进微信群里切磋问道。</p>\n <p>我们同时也定期举办线上沙龙，有更多的朋友已经在线收听或收看过我们的直播。</p>\n <p>过去的一年里，我们一共举办了19场线下沙龙，16次线上沙龙，包括99位讲师，85个演讲，70+小时分享。除美团的几十位专家之外，还邀请了百度、蚂蚁金服、去哪儿、京东等同行。主题既有最火的AI热点——深度学习、强化学习、知识图谱，新潮技术Go、Kotlin、Flutter的落地实践，也有大规模互联网平台不可或缺的稳定性保障、高可用架构、监控体系、持续集成，还有接地气的运营系统、数据平台、配送调度的经验，更少不了CAT、mpvue、EasyReact这些火爆的开源项目……</p>\n <p>我们整理了今年所有线上线下沙龙的演讲稿和视频，分享给大家，希望能帮助大家在技术之路上继续追求卓越。</p>\n <p>还没有关注美团技术团队公众号（meituantech）的同学，赶快关注哟。</p>\n <p>现在，大家请闭眼，大餐来了～～～</p>\n <h2 id=\"美团线下沙龙\">美团线下沙龙</h2>\n <p>任意点击标题，就能直接查看视频及演讲稿</p>\n <p><strong>Tech Salon 048：<a href=\"https://tech.meituan.com/salon/#/44602\">AI在复杂业务场景中的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|何仁清 美团研究员 2018/12/22</strong></p>\n <p><a href=\"http://dpurl.cn/1aGUjwA\">《深度强化学习技术在智能调度中的应用》</a>王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jtvI8lt\">《深度学习在物流配送舆情监控中的应用》</a>李超@京东物流NLP方向资深算法工程师</p>\n <p><a href=\"http://dpurl.cn/UxQxdqg\">《美团搜索中的深度学习实践》</a>周翔@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 047：<a href=\"https://tech.meituan.com/salon/#/44452\">运营效率系统架构演进之道</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|阳纯飞 美团高级技术专家 2018/12/08</strong></p>\n <p><a href=\"http://dpurl.cn/e5FWi1r\">《面向O2O大促活动的高效运营系统实践》</a>李力@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/umMxuem\">《京东物流实时数据平台性能优化实践》</a>杨国斌@京东技术专家</p>\n <p><a href=\"http://dpurl.cn/S9p9Rct\">《外卖商家菜品运营效率提升实践》</a>罗震@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/C0DTDPI\">《外卖商户数据化运营体系建设》</a>李觊@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 046：<a href=\"https://tech.meituan.com/salon/#/44246\">AI在外卖配送的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王兴星&amp;郝井华 美团研究员 2018/11/25</strong></p>\n <p><a href=\"http://dpurl.cn/OG1VITL\">《预估模型在外卖广告的演进》</a>谢乾龙@美团外卖广告算法专家</p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《即时配送中的运筹优化技术》</a>郝井华@美团配送智能调度平台负责人</p>\n <p><a href=\"http://dpurl.cn/b2demu3\">《即时配送中的机器学习技术》</a>何仁清@美团配送AI方向负责人</p>\n <hr>\n <p><strong>Tech Salon 045：<a href=\"https://tech.meituan.com/salon/#/44241\">如何构建高性能、稳定的后端服务系统</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 |方建平 美团技术总监 2018/11/24</strong></p>\n <p><a href=\"http://dpurl.cn/h2tSH0d\">《美团度假交易稳定性建设实践》</a>韩建起@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1eEmiJa\">《美团配送智能调度系统架构演进》</a>郑伟@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/mOM70TU\">《美团稳定性保障平台Rhino》</a>占军@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/36eUWw7\">《美团外卖LBS服务实践》</a>易奎@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 044：<a href=\"https://tech.meituan.com/salon/#/42521\">千万级日活App的质量保证</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|李永刚 美团研究员 2018/09/15</strong></p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《AI语音产品测试》</a>于海生@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/EkrvqQQ\">《美团外卖客户端 UI 自动化测试实践》</a>刘健@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9wTSjRP\">《客户端QA效率工具》</a>赵晔@美团测试开发架构师</p>\n <hr>\n <p><strong>Tech Salon 043：<a href=\"https://tech.meituan.com/salon/#/42318\">美团金融千万级交易系统质量保障之路</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|赫大龙 美团高级技术专家 2018/09/01</strong></p>\n <p><a href=\"http://dpurl.cn/WBj4g1R\">《智能支付稳定性测试实战》</a>范勋伟@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/S3QC9nw\">《去哪儿网服务端自动化测试体系》</a>郑希文@去哪儿</p>\n <p><a href=\"http://dpurl.cn/bxidDmT\">《线上支付SDK质量保证体系》</a>张朋飞@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/ICnY9EY\">《质量运营演变之道》</a>符欣@美团高级开发工程师</p>\n <hr>\n <p><strong>Tech Salon 042：<a href=\"https://tech.meituan.com/salon/#/42098\">高效率前端与架构实战</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王鹤 美团高级技术专家 2018/08/26</strong></p>\n <p><a href=\"http://dpurl.cn/4zd1g7v\">《EH — 用黑科技打造全新的 Hybrid 体验》</a> 陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/atWgFPm\">《mpvue小程序开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/uBGnNe7\">《美团金融前端工程化最佳实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/C21IwKR\">《前端架构师应该做的事——架构模型与技术实践》</a>王鹤@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 041：<a href=\"https://tech.meituan.com/salon/#/41922\">企业级前端开发360°实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/08/18</strong></p>\n <p><a href=\"http://dpurl.cn/6enzQ6K\">《浅谈流量劫持与防治》</a>刘洋河@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/wJLdbeB\">《前端高可用性保障实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/WvMgJ22\">《跨容器高性能的离线化方案在美团的实践和探索》</a>龙佳文@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/6ea1W3X\">《前端遇上Go: 静态资源增量更新的新实践》</a>杨义天@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 040：<a href=\"https://tech.meituan.com/salon/#/41406\">前端遇上黑科技，打造全新界面体验与效率</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 | 冯湧 美团研发总监 2018/08/04</strong></p>\n <p><a href=\"http://dpurl.cn/dcUUsv7\">《EH——用黑科技打造的全新的 Hybrid 体验》</a>陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/omiEOIh\">《Vix——如何打造一个高效的前端组件库》</a>张胜@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/eSbf7eY\">《委以重任的Node.js——百亿级访问实践》</a>迪波威@百度资深软件工程师</p>\n <p><a href=\"http://dpurl.cn/1NLlrH7\">《构建时预渲染——网页首帧优化实践》</a>尚寒阳@美团资深研发工程师</p>\n <hr>\n <p><strong>Tech Salon 039：<a href=\"https://tech.meituan.com/salon/#/41065\">新思路打造移动端高效研发体系</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|周辉 美团资深架构师 2018/07/21</strong></p>\n <p><a href=\"http://dpurl.cn/rtXsz0X\">《Picasso在大众点评首页的应用》</a>虞惠文@美团Android开发工程师</p>\n <p><a href=\"http://dpurl.cn/gJkC96U\">《移动前后端开发解耦》</a>林晨@美团后端技术专家</p>\n <p><a href=\"http://dpurl.cn/kcEERJD\">《打造稳定、灵活、高效的运营配置平台》</a>蒋国宝@美团后端技术架构师</p>\n <p><a href=\"http://dpurl.cn/GEdFow2\">《移动持续集成实践》</a>何智聪@美团iOS技术专家</p>\n <hr>\n <p><strong>Tech Salon 038：<a href=\"https://tech.meituan.com/salon/#/40348\">旅游电商架构攻略指南</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|金孟哲 美团高级技术专家 2018/07/07</strong></p>\n <p><a href=\"http://dpurl.cn/9NA3IDI\">《旅游度假预订系统架构演进实践》</a> 金孟哲@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/pdIQztt\">《旅游度假多要素动态打包实践》</a> 王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/1mx2Mhn\">《旅游度假商品中心架构演进》</a> 徐泼@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jUc9Krm\">《直连低可信系统，实现高可用服务实践》</a> 郑旭@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 037：<a href=\"https://tech.meituan.com/salon/#/39548\">美团外卖两千万日订单背后的客户端技术架构</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|吴凯 美团高级技术专家 2018/06/23</strong></p>\n <p><a href=\"http://dpurl.cn/9VqeRQP\">《美团外卖客户端技术架构演进》</a>朱瑞利@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/b4BhI2i\">《客户端监控体系建设》</a>冯天锡@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/0WglRb7\">《客户端多端复用架构》</a>郑金光@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/BN8S6uV\">《客户端容灾能力体系》</a>李富强@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 036：<a href=\"https://tech.meituan.com/salon/#/38188\">大前端的动态化与可用性建设</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|洪磊 美团高级技术专家 2018/06/02</strong></p>\n <p><a href=\"http://dpurl.cn/4x8m29f\">《大前端高可用性建设》</a>李富强@美团资深前端工程师</p>\n <p><a href=\"http://dpurl.cn/aK72uB3\">《React fiber漫谈》</a>覃俊文@蚂蚁金服前端技术专家</p>\n <p><a href=\"http://dpurl.cn/uLlIi3q\">《小程序开发的新姿势 -mpvue 的应用和实践》</a>胡成全@美团前端技术专家</p>\n <p><a href=\"http://dpurl.cn/0n9ANpz\">《ReactNative性能优化企业级应用》</a>赵宏罡@腾讯资深前端开发工程师</p>\n <hr>\n <p><strong>Tech Salon 035：<a href=\"https://tech.meituan.com/salon/#/35673\">前端热点技术的企业级实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/04/21</strong></p>\n <p><a href=\"http://dpurl.cn/X8hmGar\">《前端遇上 Go——静态资源增量更新的新实践》</a>刘洋河@美团高级前端工程师</p>\n <p><a href=\"http://dpurl.cn/c2j4URx\">《金融扫码付 H5 迁移小程序拓荒之旅》</a>陈瑶@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/8VE6Q70\">《小程序开发的新姿势 - mpvue 开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 034：<a href=\"https://tech.meituan.com/salon/#/35161\">聊聊酒店系统高可用架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|许关飞 美团研究员 2018/04/14</strong></p>\n <p><a href=\"http://dpurl.cn/KwRRM3V\">《高可用之中间件技术》</a>吴湘@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9XzOUnT\">《分布式开源监控系统CAT在美团点评演进》</a>尤勇@美团研究员</p>\n <p><a href=\"http://dpurl.cn/3FHVwpo\">《美团旅行住宿产品中心系统高可用实战》</a>槐国涛@美团酒店CRS商品负责人</p>\n <p><a href=\"http://dpurl.cn/Ynt6aVE\">《美团旅行酒店住宿订单系统高可用实战》</a>李磊@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/2gLXCnH\">《美团旅行直连系统高可用实战》</a>秦浏杰@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 033：<a href=\"https://tech.meituan.com/salon/#/31815\">企业信息化建设和安全管理</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|邓昀泽 美团企业平台研发负责人 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/2Cpj4tO\">《美团点评内部系统构建之路》</a>邓昀泽@美团企业平台研发部负责人</p>\n <p><a href=\"http://dpurl.cn/IGFzn0f\">《企业信息防护体系建设》</a>陆平@美亚柏科企业电子数据取证事业部副总</p>\n <p><a href=\"http://dpurl.cn/BTYUxbh\">《企业如何应对安全威胁》</a>游兴旺@美团企业平台研发高级总监</p>\n <hr>\n <p><strong>Tech Salon 032：<a href=\"https://tech.meituan.com/salon/#/31816\">移动开发热点技术—动态日志、监控、Hybrid、插件化</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|方锦涛 美团高级技术专家 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/hi6x3tX\">《线上问题排查体系构建：动态日志》</a> 陈潼@美团Android资深工程师</p>\n <p><a href=\"http://dpurl.cn/BsmtuwJ\">《混合应用工程化实践》</a> 李罡@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/xXexGwG\">《Caesium iOS启动时间监控》</a> 吴君阳@美团iOS工程师</p>\n <hr>\n <p><strong>Tech Salon 031：<a href=\"https://tech.meituan.com/salon/#/31470\">线下支付千万级订单服务—前后端架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/01/27</strong></p>\n <p><a href=\"http://dpurl.cn/83yGayf\">《扫码付前端可用性保障实践》</a> 田泱@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/uQv3mVL\">《业务系统的建设之路》</a>刘运@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1HxNpDH\">《Web离线化加载》</a> 于秋@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/tbNSxRx\">《基于WTL框架的Windows开发最佳实践》</a> 钱声鹏@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 030：<a href=\"https://tech.meituan.com/salon/#/30554\">餐饮生态高可用系统实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|温华剑 美团技术专家 2018/01/13</strong></p>\n <p><a href=\"http://dpurl.cn/i40jBTG\">《从“0”开始-美团收银客户端》</a>聂龙羽@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/8qoK8Fa\">《美团餐饮生态大数据架构实践》</a>牛江浩@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/u49UVD9\">《餐饮开放平台的高可用实践》</a>朱洋波@美团技术专家</p>\n <hr>\n <h2 id=\"美团线上沙龙\">美团线上沙龙</h2>\n <p>任意点击标题，就能在线观看视频或者文章</p>\n <p><strong>On-Line Salon 33：<a href=\"https://m.lizhiweike.com/classroom/10038952\">美团大脑 智享生活</a></strong> 分享人：王仲远 美团点评高级研究员</p>\n <p><strong>On-Line Salon 32：<a href=\"https://gitbook.cn/books/5bcf24b6211d0e68b1b788f0/index.html\">基于深度学习的计算机视觉技术在无人驾驶中的应用</a></strong> 分享人：刘宇达 美团点评资深算法工程师</p>\n <p><strong>On-Line Salon 31：<a href=\"https://m.lizhiweike.com/classroom/9363553\">利用响应式来解决客户端问题</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 30：<a href=\"https://gitbook.cn/books/5b927473780fdb5e97d2a3bc/index.html\">美团针对 Redis Rehash 机制的探索和实践</a></strong> 分享人：葛春林 美团点评资深工程师</p>\n <p><strong>On-Line Salon 29：<a href=\"https://m.lizhiweike.com/classroom/8660084\">Flutter 原理与实践</a></strong> 分享人：李少杰 美团点评资深工程师</p>\n <p><strong>On-Line Salon 28：<a href=\"https://gitbook.cn/books/5b8746c7ea7bc512755e4e36/index.html\">如何基于深度学习实现图像的智能审核</a></strong> 分享人：魏晓明 美团点评高级技术专家</p>\n <p><strong>On-Line Salon 27：<a href=\"https://gitbook.cn/books/5b7e5a44a63144311b8dbf2d/index.html\">美团客户端响应式框架 EasyReact 开源</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 26：<a href=\"https://gitbook.cn/books/5b752e45e8b81c0748e349e1/index.html\">移动持续集成在大众点评的实践</a></strong> 分享人：何智聪、邢轶 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 25：Kotlin <a href=\"https://gitbook.cn/books/5b6c28169f4dd1284bf82f99/index.html\">代码检查探索与实践</a></strong> 分享人：周佳 美团点评前端开发工程师</p>\n <p><strong>On-Line Salon 24：<a href=\"https://gitbook.cn/books/5b67bceca51b8d5f8ecbcf79/index.html\">静态资源增量更新的新实践</a></strong> 分享人：刘洋河 美团点评资深工程师</p>\n <p><strong>On-Line Salon 23：<a href=\"https://gitbook.cn/books/5b5ab5721642ed2ba79b6630/index.html\">点评侧用户行为检索系统</a></strong> 分享人：朱凯 美团点评资深工程师</p>\n <p><strong>On-Line Salon 22：<a href=\"https://gitbook.cn/books/5b43fc6316959658636f059e/index.html\">深度学习在美团搜索广告排序的应用实践</a></strong> 分享人：薛欢、梁玉林、王新 美团点评资深工程师</p>\n <p><strong>On-Line Salon 21：<a href=\"https://gitbook.cn/books/5ae9bcbeb02ff82d0d1b0517/index.html\">使用 Mpvue 开发微信小程序的最佳实践</a></strong> 分享人：胡成全 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 20：<a href=\"https://gitbook.cn/books/5ad4a60daf8f2f35290f46d5/index.html\">亿级用户个性化品类推荐实战解析</a></strong> 分享人：张晓宇 美团高级工程师</p>\n <p><strong>On-Line Salon 19：<a href=\"https://gitbook.cn/books/5ac2325c9e924a1dc029c6b7/index.html\">MVVM 在美团点评酒旅业务中的实践</a></strong> 分享人：吴卓 美团点评技术专家</p>\n <p><strong>On-Line Salon 18：<a href=\"https://gitbook.cn/books/5aa6850a9c3cf94d4915f97c/index.html\">深度学习在美团点评推荐业务中实践</a></strong> 分享人：陈文石 美团点评算法专家</p>\n <p>感恩！99位出品人和讲师，70多个小时的分享，感谢他们给我们带来一线的技术实践分享，感谢他们给我们2万多小伙伴送上技术的“饕餮盛宴”。除了美团技术团队的讲师们，我们还要特别感谢来自腾讯、蚂蚁金服、百度、京东、去哪儿、美亚柏科等公司的讲师们，感谢你们的付出和努力，我们期待新的一年会有更多的合作！</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/1df24ed2.png\" alt=\"2018全年出品人及讲师\"></p>\n</div>', '2019-07-24 15:09:49', '数据库', '8790', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频0.45309910783029617', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频', '2019-07-24 15:09:49', ' 技术学院');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d08d370143', '<div class=\"content\">\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/e62aba45.png\" alt></p>\n <p>你好，2019</p>\n <p>再见，2018</p>\n <p>又到了一年辞旧迎新的时候，大家应该也和美美一样，在忙着总结回顾和展望规划吧。</p>\n <p>按老惯例，我们该献上技术年货了。今年首先出场的，是我们的技术沙龙大套餐！</p>\n <p>美团技术沙龙是由美团技术团队和美团科协主办的线下技术活动，每期沙龙邀请美团和同行公司的技术专家分享来自一线的实践经验，覆盖前端、后台、系统、数据、算法、测试、运维等技术领域。目前已在北京、上海、厦门、成都等城市成功举办了48期，吸引了超过2万名工程师报名参会。除了现场亲密交流之外，大家还在会后继续进微信群里切磋问道。</p>\n <p>我们同时也定期举办线上沙龙，有更多的朋友已经在线收听或收看过我们的直播。</p>\n <p>过去的一年里，我们一共举办了19场线下沙龙，16次线上沙龙，包括99位讲师，85个演讲，70+小时分享。除美团的几十位专家之外，还邀请了百度、蚂蚁金服、去哪儿、京东等同行。主题既有最火的AI热点——深度学习、强化学习、知识图谱，新潮技术Go、Kotlin、Flutter的落地实践，也有大规模互联网平台不可或缺的稳定性保障、高可用架构、监控体系、持续集成，还有接地气的运营系统、数据平台、配送调度的经验，更少不了CAT、mpvue、EasyReact这些火爆的开源项目……</p>\n <p>我们整理了今年所有线上线下沙龙的演讲稿和视频，分享给大家，希望能帮助大家在技术之路上继续追求卓越。</p>\n <p>还没有关注美团技术团队公众号（meituantech）的同学，赶快关注哟。</p>\n <p>现在，大家请闭眼，大餐来了～～～</p>\n <h2 id=\"美团线下沙龙\">美团线下沙龙</h2>\n <p>任意点击标题，就能直接查看视频及演讲稿</p>\n <p><strong>Tech Salon 048：<a href=\"https://tech.meituan.com/salon/#/44602\">AI在复杂业务场景中的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|何仁清 美团研究员 2018/12/22</strong></p>\n <p><a href=\"http://dpurl.cn/1aGUjwA\">《深度强化学习技术在智能调度中的应用》</a>王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jtvI8lt\">《深度学习在物流配送舆情监控中的应用》</a>李超@京东物流NLP方向资深算法工程师</p>\n <p><a href=\"http://dpurl.cn/UxQxdqg\">《美团搜索中的深度学习实践》</a>周翔@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 047：<a href=\"https://tech.meituan.com/salon/#/44452\">运营效率系统架构演进之道</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|阳纯飞 美团高级技术专家 2018/12/08</strong></p>\n <p><a href=\"http://dpurl.cn/e5FWi1r\">《面向O2O大促活动的高效运营系统实践》</a>李力@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/umMxuem\">《京东物流实时数据平台性能优化实践》</a>杨国斌@京东技术专家</p>\n <p><a href=\"http://dpurl.cn/S9p9Rct\">《外卖商家菜品运营效率提升实践》</a>罗震@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/C0DTDPI\">《外卖商户数据化运营体系建设》</a>李觊@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 046：<a href=\"https://tech.meituan.com/salon/#/44246\">AI在外卖配送的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王兴星&amp;郝井华 美团研究员 2018/11/25</strong></p>\n <p><a href=\"http://dpurl.cn/OG1VITL\">《预估模型在外卖广告的演进》</a>谢乾龙@美团外卖广告算法专家</p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《即时配送中的运筹优化技术》</a>郝井华@美团配送智能调度平台负责人</p>\n <p><a href=\"http://dpurl.cn/b2demu3\">《即时配送中的机器学习技术》</a>何仁清@美团配送AI方向负责人</p>\n <hr>\n <p><strong>Tech Salon 045：<a href=\"https://tech.meituan.com/salon/#/44241\">如何构建高性能、稳定的后端服务系统</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 |方建平 美团技术总监 2018/11/24</strong></p>\n <p><a href=\"http://dpurl.cn/h2tSH0d\">《美团度假交易稳定性建设实践》</a>韩建起@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1eEmiJa\">《美团配送智能调度系统架构演进》</a>郑伟@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/mOM70TU\">《美团稳定性保障平台Rhino》</a>占军@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/36eUWw7\">《美团外卖LBS服务实践》</a>易奎@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 044：<a href=\"https://tech.meituan.com/salon/#/42521\">千万级日活App的质量保证</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|李永刚 美团研究员 2018/09/15</strong></p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《AI语音产品测试》</a>于海生@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/EkrvqQQ\">《美团外卖客户端 UI 自动化测试实践》</a>刘健@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9wTSjRP\">《客户端QA效率工具》</a>赵晔@美团测试开发架构师</p>\n <hr>\n <p><strong>Tech Salon 043：<a href=\"https://tech.meituan.com/salon/#/42318\">美团金融千万级交易系统质量保障之路</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|赫大龙 美团高级技术专家 2018/09/01</strong></p>\n <p><a href=\"http://dpurl.cn/WBj4g1R\">《智能支付稳定性测试实战》</a>范勋伟@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/S3QC9nw\">《去哪儿网服务端自动化测试体系》</a>郑希文@去哪儿</p>\n <p><a href=\"http://dpurl.cn/bxidDmT\">《线上支付SDK质量保证体系》</a>张朋飞@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/ICnY9EY\">《质量运营演变之道》</a>符欣@美团高级开发工程师</p>\n <hr>\n <p><strong>Tech Salon 042：<a href=\"https://tech.meituan.com/salon/#/42098\">高效率前端与架构实战</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王鹤 美团高级技术专家 2018/08/26</strong></p>\n <p><a href=\"http://dpurl.cn/4zd1g7v\">《EH — 用黑科技打造全新的 Hybrid 体验》</a> 陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/atWgFPm\">《mpvue小程序开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/uBGnNe7\">《美团金融前端工程化最佳实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/C21IwKR\">《前端架构师应该做的事——架构模型与技术实践》</a>王鹤@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 041：<a href=\"https://tech.meituan.com/salon/#/41922\">企业级前端开发360°实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/08/18</strong></p>\n <p><a href=\"http://dpurl.cn/6enzQ6K\">《浅谈流量劫持与防治》</a>刘洋河@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/wJLdbeB\">《前端高可用性保障实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/WvMgJ22\">《跨容器高性能的离线化方案在美团的实践和探索》</a>龙佳文@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/6ea1W3X\">《前端遇上Go: 静态资源增量更新的新实践》</a>杨义天@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 040：<a href=\"https://tech.meituan.com/salon/#/41406\">前端遇上黑科技，打造全新界面体验与效率</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 | 冯湧 美团研发总监 2018/08/04</strong></p>\n <p><a href=\"http://dpurl.cn/dcUUsv7\">《EH——用黑科技打造的全新的 Hybrid 体验》</a>陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/omiEOIh\">《Vix——如何打造一个高效的前端组件库》</a>张胜@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/eSbf7eY\">《委以重任的Node.js——百亿级访问实践》</a>迪波威@百度资深软件工程师</p>\n <p><a href=\"http://dpurl.cn/1NLlrH7\">《构建时预渲染——网页首帧优化实践》</a>尚寒阳@美团资深研发工程师</p>\n <hr>\n <p><strong>Tech Salon 039：<a href=\"https://tech.meituan.com/salon/#/41065\">新思路打造移动端高效研发体系</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|周辉 美团资深架构师 2018/07/21</strong></p>\n <p><a href=\"http://dpurl.cn/rtXsz0X\">《Picasso在大众点评首页的应用》</a>虞惠文@美团Android开发工程师</p>\n <p><a href=\"http://dpurl.cn/gJkC96U\">《移动前后端开发解耦》</a>林晨@美团后端技术专家</p>\n <p><a href=\"http://dpurl.cn/kcEERJD\">《打造稳定、灵活、高效的运营配置平台》</a>蒋国宝@美团后端技术架构师</p>\n <p><a href=\"http://dpurl.cn/GEdFow2\">《移动持续集成实践》</a>何智聪@美团iOS技术专家</p>\n <hr>\n <p><strong>Tech Salon 038：<a href=\"https://tech.meituan.com/salon/#/40348\">旅游电商架构攻略指南</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|金孟哲 美团高级技术专家 2018/07/07</strong></p>\n <p><a href=\"http://dpurl.cn/9NA3IDI\">《旅游度假预订系统架构演进实践》</a> 金孟哲@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/pdIQztt\">《旅游度假多要素动态打包实践》</a> 王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/1mx2Mhn\">《旅游度假商品中心架构演进》</a> 徐泼@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jUc9Krm\">《直连低可信系统，实现高可用服务实践》</a> 郑旭@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 037：<a href=\"https://tech.meituan.com/salon/#/39548\">美团外卖两千万日订单背后的客户端技术架构</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|吴凯 美团高级技术专家 2018/06/23</strong></p>\n <p><a href=\"http://dpurl.cn/9VqeRQP\">《美团外卖客户端技术架构演进》</a>朱瑞利@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/b4BhI2i\">《客户端监控体系建设》</a>冯天锡@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/0WglRb7\">《客户端多端复用架构》</a>郑金光@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/BN8S6uV\">《客户端容灾能力体系》</a>李富强@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 036：<a href=\"https://tech.meituan.com/salon/#/38188\">大前端的动态化与可用性建设</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|洪磊 美团高级技术专家 2018/06/02</strong></p>\n <p><a href=\"http://dpurl.cn/4x8m29f\">《大前端高可用性建设》</a>李富强@美团资深前端工程师</p>\n <p><a href=\"http://dpurl.cn/aK72uB3\">《React fiber漫谈》</a>覃俊文@蚂蚁金服前端技术专家</p>\n <p><a href=\"http://dpurl.cn/uLlIi3q\">《小程序开发的新姿势 -mpvue 的应用和实践》</a>胡成全@美团前端技术专家</p>\n <p><a href=\"http://dpurl.cn/0n9ANpz\">《ReactNative性能优化企业级应用》</a>赵宏罡@腾讯资深前端开发工程师</p>\n <hr>\n <p><strong>Tech Salon 035：<a href=\"https://tech.meituan.com/salon/#/35673\">前端热点技术的企业级实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/04/21</strong></p>\n <p><a href=\"http://dpurl.cn/X8hmGar\">《前端遇上 Go——静态资源增量更新的新实践》</a>刘洋河@美团高级前端工程师</p>\n <p><a href=\"http://dpurl.cn/c2j4URx\">《金融扫码付 H5 迁移小程序拓荒之旅》</a>陈瑶@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/8VE6Q70\">《小程序开发的新姿势 - mpvue 开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 034：<a href=\"https://tech.meituan.com/salon/#/35161\">聊聊酒店系统高可用架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|许关飞 美团研究员 2018/04/14</strong></p>\n <p><a href=\"http://dpurl.cn/KwRRM3V\">《高可用之中间件技术》</a>吴湘@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9XzOUnT\">《分布式开源监控系统CAT在美团点评演进》</a>尤勇@美团研究员</p>\n <p><a href=\"http://dpurl.cn/3FHVwpo\">《美团旅行住宿产品中心系统高可用实战》</a>槐国涛@美团酒店CRS商品负责人</p>\n <p><a href=\"http://dpurl.cn/Ynt6aVE\">《美团旅行酒店住宿订单系统高可用实战》</a>李磊@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/2gLXCnH\">《美团旅行直连系统高可用实战》</a>秦浏杰@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 033：<a href=\"https://tech.meituan.com/salon/#/31815\">企业信息化建设和安全管理</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|邓昀泽 美团企业平台研发负责人 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/2Cpj4tO\">《美团点评内部系统构建之路》</a>邓昀泽@美团企业平台研发部负责人</p>\n <p><a href=\"http://dpurl.cn/IGFzn0f\">《企业信息防护体系建设》</a>陆平@美亚柏科企业电子数据取证事业部副总</p>\n <p><a href=\"http://dpurl.cn/BTYUxbh\">《企业如何应对安全威胁》</a>游兴旺@美团企业平台研发高级总监</p>\n <hr>\n <p><strong>Tech Salon 032：<a href=\"https://tech.meituan.com/salon/#/31816\">移动开发热点技术—动态日志、监控、Hybrid、插件化</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|方锦涛 美团高级技术专家 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/hi6x3tX\">《线上问题排查体系构建：动态日志》</a> 陈潼@美团Android资深工程师</p>\n <p><a href=\"http://dpurl.cn/BsmtuwJ\">《混合应用工程化实践》</a> 李罡@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/xXexGwG\">《Caesium iOS启动时间监控》</a> 吴君阳@美团iOS工程师</p>\n <hr>\n <p><strong>Tech Salon 031：<a href=\"https://tech.meituan.com/salon/#/31470\">线下支付千万级订单服务—前后端架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/01/27</strong></p>\n <p><a href=\"http://dpurl.cn/83yGayf\">《扫码付前端可用性保障实践》</a> 田泱@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/uQv3mVL\">《业务系统的建设之路》</a>刘运@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1HxNpDH\">《Web离线化加载》</a> 于秋@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/tbNSxRx\">《基于WTL框架的Windows开发最佳实践》</a> 钱声鹏@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 030：<a href=\"https://tech.meituan.com/salon/#/30554\">餐饮生态高可用系统实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|温华剑 美团技术专家 2018/01/13</strong></p>\n <p><a href=\"http://dpurl.cn/i40jBTG\">《从“0”开始-美团收银客户端》</a>聂龙羽@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/8qoK8Fa\">《美团餐饮生态大数据架构实践》</a>牛江浩@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/u49UVD9\">《餐饮开放平台的高可用实践》</a>朱洋波@美团技术专家</p>\n <hr>\n <h2 id=\"美团线上沙龙\">美团线上沙龙</h2>\n <p>任意点击标题，就能在线观看视频或者文章</p>\n <p><strong>On-Line Salon 33：<a href=\"https://m.lizhiweike.com/classroom/10038952\">美团大脑 智享生活</a></strong> 分享人：王仲远 美团点评高级研究员</p>\n <p><strong>On-Line Salon 32：<a href=\"https://gitbook.cn/books/5bcf24b6211d0e68b1b788f0/index.html\">基于深度学习的计算机视觉技术在无人驾驶中的应用</a></strong> 分享人：刘宇达 美团点评资深算法工程师</p>\n <p><strong>On-Line Salon 31：<a href=\"https://m.lizhiweike.com/classroom/9363553\">利用响应式来解决客户端问题</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 30：<a href=\"https://gitbook.cn/books/5b927473780fdb5e97d2a3bc/index.html\">美团针对 Redis Rehash 机制的探索和实践</a></strong> 分享人：葛春林 美团点评资深工程师</p>\n <p><strong>On-Line Salon 29：<a href=\"https://m.lizhiweike.com/classroom/8660084\">Flutter 原理与实践</a></strong> 分享人：李少杰 美团点评资深工程师</p>\n <p><strong>On-Line Salon 28：<a href=\"https://gitbook.cn/books/5b8746c7ea7bc512755e4e36/index.html\">如何基于深度学习实现图像的智能审核</a></strong> 分享人：魏晓明 美团点评高级技术专家</p>\n <p><strong>On-Line Salon 27：<a href=\"https://gitbook.cn/books/5b7e5a44a63144311b8dbf2d/index.html\">美团客户端响应式框架 EasyReact 开源</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 26：<a href=\"https://gitbook.cn/books/5b752e45e8b81c0748e349e1/index.html\">移动持续集成在大众点评的实践</a></strong> 分享人：何智聪、邢轶 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 25：Kotlin <a href=\"https://gitbook.cn/books/5b6c28169f4dd1284bf82f99/index.html\">代码检查探索与实践</a></strong> 分享人：周佳 美团点评前端开发工程师</p>\n <p><strong>On-Line Salon 24：<a href=\"https://gitbook.cn/books/5b67bceca51b8d5f8ecbcf79/index.html\">静态资源增量更新的新实践</a></strong> 分享人：刘洋河 美团点评资深工程师</p>\n <p><strong>On-Line Salon 23：<a href=\"https://gitbook.cn/books/5b5ab5721642ed2ba79b6630/index.html\">点评侧用户行为检索系统</a></strong> 分享人：朱凯 美团点评资深工程师</p>\n <p><strong>On-Line Salon 22：<a href=\"https://gitbook.cn/books/5b43fc6316959658636f059e/index.html\">深度学习在美团搜索广告排序的应用实践</a></strong> 分享人：薛欢、梁玉林、王新 美团点评资深工程师</p>\n <p><strong>On-Line Salon 21：<a href=\"https://gitbook.cn/books/5ae9bcbeb02ff82d0d1b0517/index.html\">使用 Mpvue 开发微信小程序的最佳实践</a></strong> 分享人：胡成全 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 20：<a href=\"https://gitbook.cn/books/5ad4a60daf8f2f35290f46d5/index.html\">亿级用户个性化品类推荐实战解析</a></strong> 分享人：张晓宇 美团高级工程师</p>\n <p><strong>On-Line Salon 19：<a href=\"https://gitbook.cn/books/5ac2325c9e924a1dc029c6b7/index.html\">MVVM 在美团点评酒旅业务中的实践</a></strong> 分享人：吴卓 美团点评技术专家</p>\n <p><strong>On-Line Salon 18：<a href=\"https://gitbook.cn/books/5aa6850a9c3cf94d4915f97c/index.html\">深度学习在美团点评推荐业务中实践</a></strong> 分享人：陈文石 美团点评算法专家</p>\n <p>感恩！99位出品人和讲师，70多个小时的分享，感谢他们给我们带来一线的技术实践分享，感谢他们给我们2万多小伙伴送上技术的“饕餮盛宴”。除了美团技术团队的讲师们，我们还要特别感谢来自腾讯、蚂蚁金服、百度、京东、去哪儿、美亚柏科等公司的讲师们，感谢你们的付出和努力，我们期待新的一年会有更多的合作！</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/1df24ed2.png\" alt=\"2018全年出品人及讲师\"></p>\n</div>', '2019-07-24 15:09:49', 'Vuex', '8790', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频0.3237361376681126', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频', '2019-07-24 15:09:49', ' 技术学院');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d08d830144', '<div class=\"content\">\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/e62aba45.png\" alt></p>\n <p>你好，2019</p>\n <p>再见，2018</p>\n <p>又到了一年辞旧迎新的时候，大家应该也和美美一样，在忙着总结回顾和展望规划吧。</p>\n <p>按老惯例，我们该献上技术年货了。今年首先出场的，是我们的技术沙龙大套餐！</p>\n <p>美团技术沙龙是由美团技术团队和美团科协主办的线下技术活动，每期沙龙邀请美团和同行公司的技术专家分享来自一线的实践经验，覆盖前端、后台、系统、数据、算法、测试、运维等技术领域。目前已在北京、上海、厦门、成都等城市成功举办了48期，吸引了超过2万名工程师报名参会。除了现场亲密交流之外，大家还在会后继续进微信群里切磋问道。</p>\n <p>我们同时也定期举办线上沙龙，有更多的朋友已经在线收听或收看过我们的直播。</p>\n <p>过去的一年里，我们一共举办了19场线下沙龙，16次线上沙龙，包括99位讲师，85个演讲，70+小时分享。除美团的几十位专家之外，还邀请了百度、蚂蚁金服、去哪儿、京东等同行。主题既有最火的AI热点——深度学习、强化学习、知识图谱，新潮技术Go、Kotlin、Flutter的落地实践，也有大规模互联网平台不可或缺的稳定性保障、高可用架构、监控体系、持续集成，还有接地气的运营系统、数据平台、配送调度的经验，更少不了CAT、mpvue、EasyReact这些火爆的开源项目……</p>\n <p>我们整理了今年所有线上线下沙龙的演讲稿和视频，分享给大家，希望能帮助大家在技术之路上继续追求卓越。</p>\n <p>还没有关注美团技术团队公众号（meituantech）的同学，赶快关注哟。</p>\n <p>现在，大家请闭眼，大餐来了～～～</p>\n <h2 id=\"美团线下沙龙\">美团线下沙龙</h2>\n <p>任意点击标题，就能直接查看视频及演讲稿</p>\n <p><strong>Tech Salon 048：<a href=\"https://tech.meituan.com/salon/#/44602\">AI在复杂业务场景中的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|何仁清 美团研究员 2018/12/22</strong></p>\n <p><a href=\"http://dpurl.cn/1aGUjwA\">《深度强化学习技术在智能调度中的应用》</a>王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jtvI8lt\">《深度学习在物流配送舆情监控中的应用》</a>李超@京东物流NLP方向资深算法工程师</p>\n <p><a href=\"http://dpurl.cn/UxQxdqg\">《美团搜索中的深度学习实践》</a>周翔@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 047：<a href=\"https://tech.meituan.com/salon/#/44452\">运营效率系统架构演进之道</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|阳纯飞 美团高级技术专家 2018/12/08</strong></p>\n <p><a href=\"http://dpurl.cn/e5FWi1r\">《面向O2O大促活动的高效运营系统实践》</a>李力@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/umMxuem\">《京东物流实时数据平台性能优化实践》</a>杨国斌@京东技术专家</p>\n <p><a href=\"http://dpurl.cn/S9p9Rct\">《外卖商家菜品运营效率提升实践》</a>罗震@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/C0DTDPI\">《外卖商户数据化运营体系建设》</a>李觊@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 046：<a href=\"https://tech.meituan.com/salon/#/44246\">AI在外卖配送的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王兴星&amp;郝井华 美团研究员 2018/11/25</strong></p>\n <p><a href=\"http://dpurl.cn/OG1VITL\">《预估模型在外卖广告的演进》</a>谢乾龙@美团外卖广告算法专家</p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《即时配送中的运筹优化技术》</a>郝井华@美团配送智能调度平台负责人</p>\n <p><a href=\"http://dpurl.cn/b2demu3\">《即时配送中的机器学习技术》</a>何仁清@美团配送AI方向负责人</p>\n <hr>\n <p><strong>Tech Salon 045：<a href=\"https://tech.meituan.com/salon/#/44241\">如何构建高性能、稳定的后端服务系统</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 |方建平 美团技术总监 2018/11/24</strong></p>\n <p><a href=\"http://dpurl.cn/h2tSH0d\">《美团度假交易稳定性建设实践》</a>韩建起@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1eEmiJa\">《美团配送智能调度系统架构演进》</a>郑伟@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/mOM70TU\">《美团稳定性保障平台Rhino》</a>占军@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/36eUWw7\">《美团外卖LBS服务实践》</a>易奎@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 044：<a href=\"https://tech.meituan.com/salon/#/42521\">千万级日活App的质量保证</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|李永刚 美团研究员 2018/09/15</strong></p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《AI语音产品测试》</a>于海生@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/EkrvqQQ\">《美团外卖客户端 UI 自动化测试实践》</a>刘健@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9wTSjRP\">《客户端QA效率工具》</a>赵晔@美团测试开发架构师</p>\n <hr>\n <p><strong>Tech Salon 043：<a href=\"https://tech.meituan.com/salon/#/42318\">美团金融千万级交易系统质量保障之路</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|赫大龙 美团高级技术专家 2018/09/01</strong></p>\n <p><a href=\"http://dpurl.cn/WBj4g1R\">《智能支付稳定性测试实战》</a>范勋伟@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/S3QC9nw\">《去哪儿网服务端自动化测试体系》</a>郑希文@去哪儿</p>\n <p><a href=\"http://dpurl.cn/bxidDmT\">《线上支付SDK质量保证体系》</a>张朋飞@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/ICnY9EY\">《质量运营演变之道》</a>符欣@美团高级开发工程师</p>\n <hr>\n <p><strong>Tech Salon 042：<a href=\"https://tech.meituan.com/salon/#/42098\">高效率前端与架构实战</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王鹤 美团高级技术专家 2018/08/26</strong></p>\n <p><a href=\"http://dpurl.cn/4zd1g7v\">《EH — 用黑科技打造全新的 Hybrid 体验》</a> 陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/atWgFPm\">《mpvue小程序开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/uBGnNe7\">《美团金融前端工程化最佳实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/C21IwKR\">《前端架构师应该做的事——架构模型与技术实践》</a>王鹤@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 041：<a href=\"https://tech.meituan.com/salon/#/41922\">企业级前端开发360°实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/08/18</strong></p>\n <p><a href=\"http://dpurl.cn/6enzQ6K\">《浅谈流量劫持与防治》</a>刘洋河@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/wJLdbeB\">《前端高可用性保障实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/WvMgJ22\">《跨容器高性能的离线化方案在美团的实践和探索》</a>龙佳文@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/6ea1W3X\">《前端遇上Go: 静态资源增量更新的新实践》</a>杨义天@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 040：<a href=\"https://tech.meituan.com/salon/#/41406\">前端遇上黑科技，打造全新界面体验与效率</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 | 冯湧 美团研发总监 2018/08/04</strong></p>\n <p><a href=\"http://dpurl.cn/dcUUsv7\">《EH——用黑科技打造的全新的 Hybrid 体验》</a>陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/omiEOIh\">《Vix——如何打造一个高效的前端组件库》</a>张胜@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/eSbf7eY\">《委以重任的Node.js——百亿级访问实践》</a>迪波威@百度资深软件工程师</p>\n <p><a href=\"http://dpurl.cn/1NLlrH7\">《构建时预渲染——网页首帧优化实践》</a>尚寒阳@美团资深研发工程师</p>\n <hr>\n <p><strong>Tech Salon 039：<a href=\"https://tech.meituan.com/salon/#/41065\">新思路打造移动端高效研发体系</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|周辉 美团资深架构师 2018/07/21</strong></p>\n <p><a href=\"http://dpurl.cn/rtXsz0X\">《Picasso在大众点评首页的应用》</a>虞惠文@美团Android开发工程师</p>\n <p><a href=\"http://dpurl.cn/gJkC96U\">《移动前后端开发解耦》</a>林晨@美团后端技术专家</p>\n <p><a href=\"http://dpurl.cn/kcEERJD\">《打造稳定、灵活、高效的运营配置平台》</a>蒋国宝@美团后端技术架构师</p>\n <p><a href=\"http://dpurl.cn/GEdFow2\">《移动持续集成实践》</a>何智聪@美团iOS技术专家</p>\n <hr>\n <p><strong>Tech Salon 038：<a href=\"https://tech.meituan.com/salon/#/40348\">旅游电商架构攻略指南</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|金孟哲 美团高级技术专家 2018/07/07</strong></p>\n <p><a href=\"http://dpurl.cn/9NA3IDI\">《旅游度假预订系统架构演进实践》</a> 金孟哲@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/pdIQztt\">《旅游度假多要素动态打包实践》</a> 王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/1mx2Mhn\">《旅游度假商品中心架构演进》</a> 徐泼@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jUc9Krm\">《直连低可信系统，实现高可用服务实践》</a> 郑旭@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 037：<a href=\"https://tech.meituan.com/salon/#/39548\">美团外卖两千万日订单背后的客户端技术架构</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|吴凯 美团高级技术专家 2018/06/23</strong></p>\n <p><a href=\"http://dpurl.cn/9VqeRQP\">《美团外卖客户端技术架构演进》</a>朱瑞利@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/b4BhI2i\">《客户端监控体系建设》</a>冯天锡@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/0WglRb7\">《客户端多端复用架构》</a>郑金光@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/BN8S6uV\">《客户端容灾能力体系》</a>李富强@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 036：<a href=\"https://tech.meituan.com/salon/#/38188\">大前端的动态化与可用性建设</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|洪磊 美团高级技术专家 2018/06/02</strong></p>\n <p><a href=\"http://dpurl.cn/4x8m29f\">《大前端高可用性建设》</a>李富强@美团资深前端工程师</p>\n <p><a href=\"http://dpurl.cn/aK72uB3\">《React fiber漫谈》</a>覃俊文@蚂蚁金服前端技术专家</p>\n <p><a href=\"http://dpurl.cn/uLlIi3q\">《小程序开发的新姿势 -mpvue 的应用和实践》</a>胡成全@美团前端技术专家</p>\n <p><a href=\"http://dpurl.cn/0n9ANpz\">《ReactNative性能优化企业级应用》</a>赵宏罡@腾讯资深前端开发工程师</p>\n <hr>\n <p><strong>Tech Salon 035：<a href=\"https://tech.meituan.com/salon/#/35673\">前端热点技术的企业级实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/04/21</strong></p>\n <p><a href=\"http://dpurl.cn/X8hmGar\">《前端遇上 Go——静态资源增量更新的新实践》</a>刘洋河@美团高级前端工程师</p>\n <p><a href=\"http://dpurl.cn/c2j4URx\">《金融扫码付 H5 迁移小程序拓荒之旅》</a>陈瑶@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/8VE6Q70\">《小程序开发的新姿势 - mpvue 开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 034：<a href=\"https://tech.meituan.com/salon/#/35161\">聊聊酒店系统高可用架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|许关飞 美团研究员 2018/04/14</strong></p>\n <p><a href=\"http://dpurl.cn/KwRRM3V\">《高可用之中间件技术》</a>吴湘@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9XzOUnT\">《分布式开源监控系统CAT在美团点评演进》</a>尤勇@美团研究员</p>\n <p><a href=\"http://dpurl.cn/3FHVwpo\">《美团旅行住宿产品中心系统高可用实战》</a>槐国涛@美团酒店CRS商品负责人</p>\n <p><a href=\"http://dpurl.cn/Ynt6aVE\">《美团旅行酒店住宿订单系统高可用实战》</a>李磊@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/2gLXCnH\">《美团旅行直连系统高可用实战》</a>秦浏杰@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 033：<a href=\"https://tech.meituan.com/salon/#/31815\">企业信息化建设和安全管理</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|邓昀泽 美团企业平台研发负责人 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/2Cpj4tO\">《美团点评内部系统构建之路》</a>邓昀泽@美团企业平台研发部负责人</p>\n <p><a href=\"http://dpurl.cn/IGFzn0f\">《企业信息防护体系建设》</a>陆平@美亚柏科企业电子数据取证事业部副总</p>\n <p><a href=\"http://dpurl.cn/BTYUxbh\">《企业如何应对安全威胁》</a>游兴旺@美团企业平台研发高级总监</p>\n <hr>\n <p><strong>Tech Salon 032：<a href=\"https://tech.meituan.com/salon/#/31816\">移动开发热点技术—动态日志、监控、Hybrid、插件化</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|方锦涛 美团高级技术专家 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/hi6x3tX\">《线上问题排查体系构建：动态日志》</a> 陈潼@美团Android资深工程师</p>\n <p><a href=\"http://dpurl.cn/BsmtuwJ\">《混合应用工程化实践》</a> 李罡@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/xXexGwG\">《Caesium iOS启动时间监控》</a> 吴君阳@美团iOS工程师</p>\n <hr>\n <p><strong>Tech Salon 031：<a href=\"https://tech.meituan.com/salon/#/31470\">线下支付千万级订单服务—前后端架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/01/27</strong></p>\n <p><a href=\"http://dpurl.cn/83yGayf\">《扫码付前端可用性保障实践》</a> 田泱@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/uQv3mVL\">《业务系统的建设之路》</a>刘运@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1HxNpDH\">《Web离线化加载》</a> 于秋@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/tbNSxRx\">《基于WTL框架的Windows开发最佳实践》</a> 钱声鹏@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 030：<a href=\"https://tech.meituan.com/salon/#/30554\">餐饮生态高可用系统实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|温华剑 美团技术专家 2018/01/13</strong></p>\n <p><a href=\"http://dpurl.cn/i40jBTG\">《从“0”开始-美团收银客户端》</a>聂龙羽@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/8qoK8Fa\">《美团餐饮生态大数据架构实践》</a>牛江浩@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/u49UVD9\">《餐饮开放平台的高可用实践》</a>朱洋波@美团技术专家</p>\n <hr>\n <h2 id=\"美团线上沙龙\">美团线上沙龙</h2>\n <p>任意点击标题，就能在线观看视频或者文章</p>\n <p><strong>On-Line Salon 33：<a href=\"https://m.lizhiweike.com/classroom/10038952\">美团大脑 智享生活</a></strong> 分享人：王仲远 美团点评高级研究员</p>\n <p><strong>On-Line Salon 32：<a href=\"https://gitbook.cn/books/5bcf24b6211d0e68b1b788f0/index.html\">基于深度学习的计算机视觉技术在无人驾驶中的应用</a></strong> 分享人：刘宇达 美团点评资深算法工程师</p>\n <p><strong>On-Line Salon 31：<a href=\"https://m.lizhiweike.com/classroom/9363553\">利用响应式来解决客户端问题</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 30：<a href=\"https://gitbook.cn/books/5b927473780fdb5e97d2a3bc/index.html\">美团针对 Redis Rehash 机制的探索和实践</a></strong> 分享人：葛春林 美团点评资深工程师</p>\n <p><strong>On-Line Salon 29：<a href=\"https://m.lizhiweike.com/classroom/8660084\">Flutter 原理与实践</a></strong> 分享人：李少杰 美团点评资深工程师</p>\n <p><strong>On-Line Salon 28：<a href=\"https://gitbook.cn/books/5b8746c7ea7bc512755e4e36/index.html\">如何基于深度学习实现图像的智能审核</a></strong> 分享人：魏晓明 美团点评高级技术专家</p>\n <p><strong>On-Line Salon 27：<a href=\"https://gitbook.cn/books/5b7e5a44a63144311b8dbf2d/index.html\">美团客户端响应式框架 EasyReact 开源</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 26：<a href=\"https://gitbook.cn/books/5b752e45e8b81c0748e349e1/index.html\">移动持续集成在大众点评的实践</a></strong> 分享人：何智聪、邢轶 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 25：Kotlin <a href=\"https://gitbook.cn/books/5b6c28169f4dd1284bf82f99/index.html\">代码检查探索与实践</a></strong> 分享人：周佳 美团点评前端开发工程师</p>\n <p><strong>On-Line Salon 24：<a href=\"https://gitbook.cn/books/5b67bceca51b8d5f8ecbcf79/index.html\">静态资源增量更新的新实践</a></strong> 分享人：刘洋河 美团点评资深工程师</p>\n <p><strong>On-Line Salon 23：<a href=\"https://gitbook.cn/books/5b5ab5721642ed2ba79b6630/index.html\">点评侧用户行为检索系统</a></strong> 分享人：朱凯 美团点评资深工程师</p>\n <p><strong>On-Line Salon 22：<a href=\"https://gitbook.cn/books/5b43fc6316959658636f059e/index.html\">深度学习在美团搜索广告排序的应用实践</a></strong> 分享人：薛欢、梁玉林、王新 美团点评资深工程师</p>\n <p><strong>On-Line Salon 21：<a href=\"https://gitbook.cn/books/5ae9bcbeb02ff82d0d1b0517/index.html\">使用 Mpvue 开发微信小程序的最佳实践</a></strong> 分享人：胡成全 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 20：<a href=\"https://gitbook.cn/books/5ad4a60daf8f2f35290f46d5/index.html\">亿级用户个性化品类推荐实战解析</a></strong> 分享人：张晓宇 美团高级工程师</p>\n <p><strong>On-Line Salon 19：<a href=\"https://gitbook.cn/books/5ac2325c9e924a1dc029c6b7/index.html\">MVVM 在美团点评酒旅业务中的实践</a></strong> 分享人：吴卓 美团点评技术专家</p>\n <p><strong>On-Line Salon 18：<a href=\"https://gitbook.cn/books/5aa6850a9c3cf94d4915f97c/index.html\">深度学习在美团点评推荐业务中实践</a></strong> 分享人：陈文石 美团点评算法专家</p>\n <p>感恩！99位出品人和讲师，70多个小时的分享，感谢他们给我们带来一线的技术实践分享，感谢他们给我们2万多小伙伴送上技术的“饕餮盛宴”。除了美团技术团队的讲师们，我们还要特别感谢来自腾讯、蚂蚁金服、百度、京东、去哪儿、美亚柏科等公司的讲师们，感谢你们的付出和努力，我们期待新的一年会有更多的合作！</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/1df24ed2.png\" alt=\"2018全年出品人及讲师\"></p>\n</div>', '2019-07-24 15:09:49', 'jQuery', '8790', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频0.2994160969069035', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频', '2019-07-24 15:09:49', ' 技术学院');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d08dc70145', '<div class=\"content\">\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/e62aba45.png\" alt></p>\n <p>你好，2019</p>\n <p>再见，2018</p>\n <p>又到了一年辞旧迎新的时候，大家应该也和美美一样，在忙着总结回顾和展望规划吧。</p>\n <p>按老惯例，我们该献上技术年货了。今年首先出场的，是我们的技术沙龙大套餐！</p>\n <p>美团技术沙龙是由美团技术团队和美团科协主办的线下技术活动，每期沙龙邀请美团和同行公司的技术专家分享来自一线的实践经验，覆盖前端、后台、系统、数据、算法、测试、运维等技术领域。目前已在北京、上海、厦门、成都等城市成功举办了48期，吸引了超过2万名工程师报名参会。除了现场亲密交流之外，大家还在会后继续进微信群里切磋问道。</p>\n <p>我们同时也定期举办线上沙龙，有更多的朋友已经在线收听或收看过我们的直播。</p>\n <p>过去的一年里，我们一共举办了19场线下沙龙，16次线上沙龙，包括99位讲师，85个演讲，70+小时分享。除美团的几十位专家之外，还邀请了百度、蚂蚁金服、去哪儿、京东等同行。主题既有最火的AI热点——深度学习、强化学习、知识图谱，新潮技术Go、Kotlin、Flutter的落地实践，也有大规模互联网平台不可或缺的稳定性保障、高可用架构、监控体系、持续集成，还有接地气的运营系统、数据平台、配送调度的经验，更少不了CAT、mpvue、EasyReact这些火爆的开源项目……</p>\n <p>我们整理了今年所有线上线下沙龙的演讲稿和视频，分享给大家，希望能帮助大家在技术之路上继续追求卓越。</p>\n <p>还没有关注美团技术团队公众号（meituantech）的同学，赶快关注哟。</p>\n <p>现在，大家请闭眼，大餐来了～～～</p>\n <h2 id=\"美团线下沙龙\">美团线下沙龙</h2>\n <p>任意点击标题，就能直接查看视频及演讲稿</p>\n <p><strong>Tech Salon 048：<a href=\"https://tech.meituan.com/salon/#/44602\">AI在复杂业务场景中的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|何仁清 美团研究员 2018/12/22</strong></p>\n <p><a href=\"http://dpurl.cn/1aGUjwA\">《深度强化学习技术在智能调度中的应用》</a>王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jtvI8lt\">《深度学习在物流配送舆情监控中的应用》</a>李超@京东物流NLP方向资深算法工程师</p>\n <p><a href=\"http://dpurl.cn/UxQxdqg\">《美团搜索中的深度学习实践》</a>周翔@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 047：<a href=\"https://tech.meituan.com/salon/#/44452\">运营效率系统架构演进之道</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|阳纯飞 美团高级技术专家 2018/12/08</strong></p>\n <p><a href=\"http://dpurl.cn/e5FWi1r\">《面向O2O大促活动的高效运营系统实践》</a>李力@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/umMxuem\">《京东物流实时数据平台性能优化实践》</a>杨国斌@京东技术专家</p>\n <p><a href=\"http://dpurl.cn/S9p9Rct\">《外卖商家菜品运营效率提升实践》</a>罗震@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/C0DTDPI\">《外卖商户数据化运营体系建设》</a>李觊@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 046：<a href=\"https://tech.meituan.com/salon/#/44246\">AI在外卖配送的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王兴星&amp;郝井华 美团研究员 2018/11/25</strong></p>\n <p><a href=\"http://dpurl.cn/OG1VITL\">《预估模型在外卖广告的演进》</a>谢乾龙@美团外卖广告算法专家</p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《即时配送中的运筹优化技术》</a>郝井华@美团配送智能调度平台负责人</p>\n <p><a href=\"http://dpurl.cn/b2demu3\">《即时配送中的机器学习技术》</a>何仁清@美团配送AI方向负责人</p>\n <hr>\n <p><strong>Tech Salon 045：<a href=\"https://tech.meituan.com/salon/#/44241\">如何构建高性能、稳定的后端服务系统</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 |方建平 美团技术总监 2018/11/24</strong></p>\n <p><a href=\"http://dpurl.cn/h2tSH0d\">《美团度假交易稳定性建设实践》</a>韩建起@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1eEmiJa\">《美团配送智能调度系统架构演进》</a>郑伟@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/mOM70TU\">《美团稳定性保障平台Rhino》</a>占军@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/36eUWw7\">《美团外卖LBS服务实践》</a>易奎@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 044：<a href=\"https://tech.meituan.com/salon/#/42521\">千万级日活App的质量保证</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|李永刚 美团研究员 2018/09/15</strong></p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《AI语音产品测试》</a>于海生@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/EkrvqQQ\">《美团外卖客户端 UI 自动化测试实践》</a>刘健@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9wTSjRP\">《客户端QA效率工具》</a>赵晔@美团测试开发架构师</p>\n <hr>\n <p><strong>Tech Salon 043：<a href=\"https://tech.meituan.com/salon/#/42318\">美团金融千万级交易系统质量保障之路</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|赫大龙 美团高级技术专家 2018/09/01</strong></p>\n <p><a href=\"http://dpurl.cn/WBj4g1R\">《智能支付稳定性测试实战》</a>范勋伟@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/S3QC9nw\">《去哪儿网服务端自动化测试体系》</a>郑希文@去哪儿</p>\n <p><a href=\"http://dpurl.cn/bxidDmT\">《线上支付SDK质量保证体系》</a>张朋飞@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/ICnY9EY\">《质量运营演变之道》</a>符欣@美团高级开发工程师</p>\n <hr>\n <p><strong>Tech Salon 042：<a href=\"https://tech.meituan.com/salon/#/42098\">高效率前端与架构实战</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王鹤 美团高级技术专家 2018/08/26</strong></p>\n <p><a href=\"http://dpurl.cn/4zd1g7v\">《EH — 用黑科技打造全新的 Hybrid 体验》</a> 陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/atWgFPm\">《mpvue小程序开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/uBGnNe7\">《美团金融前端工程化最佳实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/C21IwKR\">《前端架构师应该做的事——架构模型与技术实践》</a>王鹤@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 041：<a href=\"https://tech.meituan.com/salon/#/41922\">企业级前端开发360°实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/08/18</strong></p>\n <p><a href=\"http://dpurl.cn/6enzQ6K\">《浅谈流量劫持与防治》</a>刘洋河@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/wJLdbeB\">《前端高可用性保障实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/WvMgJ22\">《跨容器高性能的离线化方案在美团的实践和探索》</a>龙佳文@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/6ea1W3X\">《前端遇上Go: 静态资源增量更新的新实践》</a>杨义天@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 040：<a href=\"https://tech.meituan.com/salon/#/41406\">前端遇上黑科技，打造全新界面体验与效率</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 | 冯湧 美团研发总监 2018/08/04</strong></p>\n <p><a href=\"http://dpurl.cn/dcUUsv7\">《EH——用黑科技打造的全新的 Hybrid 体验》</a>陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/omiEOIh\">《Vix——如何打造一个高效的前端组件库》</a>张胜@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/eSbf7eY\">《委以重任的Node.js——百亿级访问实践》</a>迪波威@百度资深软件工程师</p>\n <p><a href=\"http://dpurl.cn/1NLlrH7\">《构建时预渲染——网页首帧优化实践》</a>尚寒阳@美团资深研发工程师</p>\n <hr>\n <p><strong>Tech Salon 039：<a href=\"https://tech.meituan.com/salon/#/41065\">新思路打造移动端高效研发体系</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|周辉 美团资深架构师 2018/07/21</strong></p>\n <p><a href=\"http://dpurl.cn/rtXsz0X\">《Picasso在大众点评首页的应用》</a>虞惠文@美团Android开发工程师</p>\n <p><a href=\"http://dpurl.cn/gJkC96U\">《移动前后端开发解耦》</a>林晨@美团后端技术专家</p>\n <p><a href=\"http://dpurl.cn/kcEERJD\">《打造稳定、灵活、高效的运营配置平台》</a>蒋国宝@美团后端技术架构师</p>\n <p><a href=\"http://dpurl.cn/GEdFow2\">《移动持续集成实践》</a>何智聪@美团iOS技术专家</p>\n <hr>\n <p><strong>Tech Salon 038：<a href=\"https://tech.meituan.com/salon/#/40348\">旅游电商架构攻略指南</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|金孟哲 美团高级技术专家 2018/07/07</strong></p>\n <p><a href=\"http://dpurl.cn/9NA3IDI\">《旅游度假预订系统架构演进实践》</a> 金孟哲@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/pdIQztt\">《旅游度假多要素动态打包实践》</a> 王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/1mx2Mhn\">《旅游度假商品中心架构演进》</a> 徐泼@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jUc9Krm\">《直连低可信系统，实现高可用服务实践》</a> 郑旭@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 037：<a href=\"https://tech.meituan.com/salon/#/39548\">美团外卖两千万日订单背后的客户端技术架构</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|吴凯 美团高级技术专家 2018/06/23</strong></p>\n <p><a href=\"http://dpurl.cn/9VqeRQP\">《美团外卖客户端技术架构演进》</a>朱瑞利@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/b4BhI2i\">《客户端监控体系建设》</a>冯天锡@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/0WglRb7\">《客户端多端复用架构》</a>郑金光@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/BN8S6uV\">《客户端容灾能力体系》</a>李富强@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 036：<a href=\"https://tech.meituan.com/salon/#/38188\">大前端的动态化与可用性建设</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|洪磊 美团高级技术专家 2018/06/02</strong></p>\n <p><a href=\"http://dpurl.cn/4x8m29f\">《大前端高可用性建设》</a>李富强@美团资深前端工程师</p>\n <p><a href=\"http://dpurl.cn/aK72uB3\">《React fiber漫谈》</a>覃俊文@蚂蚁金服前端技术专家</p>\n <p><a href=\"http://dpurl.cn/uLlIi3q\">《小程序开发的新姿势 -mpvue 的应用和实践》</a>胡成全@美团前端技术专家</p>\n <p><a href=\"http://dpurl.cn/0n9ANpz\">《ReactNative性能优化企业级应用》</a>赵宏罡@腾讯资深前端开发工程师</p>\n <hr>\n <p><strong>Tech Salon 035：<a href=\"https://tech.meituan.com/salon/#/35673\">前端热点技术的企业级实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/04/21</strong></p>\n <p><a href=\"http://dpurl.cn/X8hmGar\">《前端遇上 Go——静态资源增量更新的新实践》</a>刘洋河@美团高级前端工程师</p>\n <p><a href=\"http://dpurl.cn/c2j4URx\">《金融扫码付 H5 迁移小程序拓荒之旅》</a>陈瑶@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/8VE6Q70\">《小程序开发的新姿势 - mpvue 开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 034：<a href=\"https://tech.meituan.com/salon/#/35161\">聊聊酒店系统高可用架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|许关飞 美团研究员 2018/04/14</strong></p>\n <p><a href=\"http://dpurl.cn/KwRRM3V\">《高可用之中间件技术》</a>吴湘@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9XzOUnT\">《分布式开源监控系统CAT在美团点评演进》</a>尤勇@美团研究员</p>\n <p><a href=\"http://dpurl.cn/3FHVwpo\">《美团旅行住宿产品中心系统高可用实战》</a>槐国涛@美团酒店CRS商品负责人</p>\n <p><a href=\"http://dpurl.cn/Ynt6aVE\">《美团旅行酒店住宿订单系统高可用实战》</a>李磊@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/2gLXCnH\">《美团旅行直连系统高可用实战》</a>秦浏杰@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 033：<a href=\"https://tech.meituan.com/salon/#/31815\">企业信息化建设和安全管理</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|邓昀泽 美团企业平台研发负责人 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/2Cpj4tO\">《美团点评内部系统构建之路》</a>邓昀泽@美团企业平台研发部负责人</p>\n <p><a href=\"http://dpurl.cn/IGFzn0f\">《企业信息防护体系建设》</a>陆平@美亚柏科企业电子数据取证事业部副总</p>\n <p><a href=\"http://dpurl.cn/BTYUxbh\">《企业如何应对安全威胁》</a>游兴旺@美团企业平台研发高级总监</p>\n <hr>\n <p><strong>Tech Salon 032：<a href=\"https://tech.meituan.com/salon/#/31816\">移动开发热点技术—动态日志、监控、Hybrid、插件化</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|方锦涛 美团高级技术专家 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/hi6x3tX\">《线上问题排查体系构建：动态日志》</a> 陈潼@美团Android资深工程师</p>\n <p><a href=\"http://dpurl.cn/BsmtuwJ\">《混合应用工程化实践》</a> 李罡@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/xXexGwG\">《Caesium iOS启动时间监控》</a> 吴君阳@美团iOS工程师</p>\n <hr>\n <p><strong>Tech Salon 031：<a href=\"https://tech.meituan.com/salon/#/31470\">线下支付千万级订单服务—前后端架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/01/27</strong></p>\n <p><a href=\"http://dpurl.cn/83yGayf\">《扫码付前端可用性保障实践》</a> 田泱@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/uQv3mVL\">《业务系统的建设之路》</a>刘运@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1HxNpDH\">《Web离线化加载》</a> 于秋@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/tbNSxRx\">《基于WTL框架的Windows开发最佳实践》</a> 钱声鹏@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 030：<a href=\"https://tech.meituan.com/salon/#/30554\">餐饮生态高可用系统实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|温华剑 美团技术专家 2018/01/13</strong></p>\n <p><a href=\"http://dpurl.cn/i40jBTG\">《从“0”开始-美团收银客户端》</a>聂龙羽@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/8qoK8Fa\">《美团餐饮生态大数据架构实践》</a>牛江浩@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/u49UVD9\">《餐饮开放平台的高可用实践》</a>朱洋波@美团技术专家</p>\n <hr>\n <h2 id=\"美团线上沙龙\">美团线上沙龙</h2>\n <p>任意点击标题，就能在线观看视频或者文章</p>\n <p><strong>On-Line Salon 33：<a href=\"https://m.lizhiweike.com/classroom/10038952\">美团大脑 智享生活</a></strong> 分享人：王仲远 美团点评高级研究员</p>\n <p><strong>On-Line Salon 32：<a href=\"https://gitbook.cn/books/5bcf24b6211d0e68b1b788f0/index.html\">基于深度学习的计算机视觉技术在无人驾驶中的应用</a></strong> 分享人：刘宇达 美团点评资深算法工程师</p>\n <p><strong>On-Line Salon 31：<a href=\"https://m.lizhiweike.com/classroom/9363553\">利用响应式来解决客户端问题</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 30：<a href=\"https://gitbook.cn/books/5b927473780fdb5e97d2a3bc/index.html\">美团针对 Redis Rehash 机制的探索和实践</a></strong> 分享人：葛春林 美团点评资深工程师</p>\n <p><strong>On-Line Salon 29：<a href=\"https://m.lizhiweike.com/classroom/8660084\">Flutter 原理与实践</a></strong> 分享人：李少杰 美团点评资深工程师</p>\n <p><strong>On-Line Salon 28：<a href=\"https://gitbook.cn/books/5b8746c7ea7bc512755e4e36/index.html\">如何基于深度学习实现图像的智能审核</a></strong> 分享人：魏晓明 美团点评高级技术专家</p>\n <p><strong>On-Line Salon 27：<a href=\"https://gitbook.cn/books/5b7e5a44a63144311b8dbf2d/index.html\">美团客户端响应式框架 EasyReact 开源</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 26：<a href=\"https://gitbook.cn/books/5b752e45e8b81c0748e349e1/index.html\">移动持续集成在大众点评的实践</a></strong> 分享人：何智聪、邢轶 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 25：Kotlin <a href=\"https://gitbook.cn/books/5b6c28169f4dd1284bf82f99/index.html\">代码检查探索与实践</a></strong> 分享人：周佳 美团点评前端开发工程师</p>\n <p><strong>On-Line Salon 24：<a href=\"https://gitbook.cn/books/5b67bceca51b8d5f8ecbcf79/index.html\">静态资源增量更新的新实践</a></strong> 分享人：刘洋河 美团点评资深工程师</p>\n <p><strong>On-Line Salon 23：<a href=\"https://gitbook.cn/books/5b5ab5721642ed2ba79b6630/index.html\">点评侧用户行为检索系统</a></strong> 分享人：朱凯 美团点评资深工程师</p>\n <p><strong>On-Line Salon 22：<a href=\"https://gitbook.cn/books/5b43fc6316959658636f059e/index.html\">深度学习在美团搜索广告排序的应用实践</a></strong> 分享人：薛欢、梁玉林、王新 美团点评资深工程师</p>\n <p><strong>On-Line Salon 21：<a href=\"https://gitbook.cn/books/5ae9bcbeb02ff82d0d1b0517/index.html\">使用 Mpvue 开发微信小程序的最佳实践</a></strong> 分享人：胡成全 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 20：<a href=\"https://gitbook.cn/books/5ad4a60daf8f2f35290f46d5/index.html\">亿级用户个性化品类推荐实战解析</a></strong> 分享人：张晓宇 美团高级工程师</p>\n <p><strong>On-Line Salon 19：<a href=\"https://gitbook.cn/books/5ac2325c9e924a1dc029c6b7/index.html\">MVVM 在美团点评酒旅业务中的实践</a></strong> 分享人：吴卓 美团点评技术专家</p>\n <p><strong>On-Line Salon 18：<a href=\"https://gitbook.cn/books/5aa6850a9c3cf94d4915f97c/index.html\">深度学习在美团点评推荐业务中实践</a></strong> 分享人：陈文石 美团点评算法专家</p>\n <p>感恩！99位出品人和讲师，70多个小时的分享，感谢他们给我们带来一线的技术实践分享，感谢他们给我们2万多小伙伴送上技术的“饕餮盛宴”。除了美团技术团队的讲师们，我们还要特别感谢来自腾讯、蚂蚁金服、百度、京东、去哪儿、美亚柏科等公司的讲师们，感谢你们的付出和努力，我们期待新的一年会有更多的合作！</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/1df24ed2.png\" alt=\"2018全年出品人及讲师\"></p>\n</div>', '2019-07-24 15:09:49', 'JavaScript', '8790', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频0.5042725950444172', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频', '2019-07-24 15:09:49', ' 技术学院');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d08e0f0146', '<div class=\"content\">\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/e62aba45.png\" alt></p>\n <p>你好，2019</p>\n <p>再见，2018</p>\n <p>又到了一年辞旧迎新的时候，大家应该也和美美一样，在忙着总结回顾和展望规划吧。</p>\n <p>按老惯例，我们该献上技术年货了。今年首先出场的，是我们的技术沙龙大套餐！</p>\n <p>美团技术沙龙是由美团技术团队和美团科协主办的线下技术活动，每期沙龙邀请美团和同行公司的技术专家分享来自一线的实践经验，覆盖前端、后台、系统、数据、算法、测试、运维等技术领域。目前已在北京、上海、厦门、成都等城市成功举办了48期，吸引了超过2万名工程师报名参会。除了现场亲密交流之外，大家还在会后继续进微信群里切磋问道。</p>\n <p>我们同时也定期举办线上沙龙，有更多的朋友已经在线收听或收看过我们的直播。</p>\n <p>过去的一年里，我们一共举办了19场线下沙龙，16次线上沙龙，包括99位讲师，85个演讲，70+小时分享。除美团的几十位专家之外，还邀请了百度、蚂蚁金服、去哪儿、京东等同行。主题既有最火的AI热点——深度学习、强化学习、知识图谱，新潮技术Go、Kotlin、Flutter的落地实践，也有大规模互联网平台不可或缺的稳定性保障、高可用架构、监控体系、持续集成，还有接地气的运营系统、数据平台、配送调度的经验，更少不了CAT、mpvue、EasyReact这些火爆的开源项目……</p>\n <p>我们整理了今年所有线上线下沙龙的演讲稿和视频，分享给大家，希望能帮助大家在技术之路上继续追求卓越。</p>\n <p>还没有关注美团技术团队公众号（meituantech）的同学，赶快关注哟。</p>\n <p>现在，大家请闭眼，大餐来了～～～</p>\n <h2 id=\"美团线下沙龙\">美团线下沙龙</h2>\n <p>任意点击标题，就能直接查看视频及演讲稿</p>\n <p><strong>Tech Salon 048：<a href=\"https://tech.meituan.com/salon/#/44602\">AI在复杂业务场景中的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|何仁清 美团研究员 2018/12/22</strong></p>\n <p><a href=\"http://dpurl.cn/1aGUjwA\">《深度强化学习技术在智能调度中的应用》</a>王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jtvI8lt\">《深度学习在物流配送舆情监控中的应用》</a>李超@京东物流NLP方向资深算法工程师</p>\n <p><a href=\"http://dpurl.cn/UxQxdqg\">《美团搜索中的深度学习实践》</a>周翔@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 047：<a href=\"https://tech.meituan.com/salon/#/44452\">运营效率系统架构演进之道</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|阳纯飞 美团高级技术专家 2018/12/08</strong></p>\n <p><a href=\"http://dpurl.cn/e5FWi1r\">《面向O2O大促活动的高效运营系统实践》</a>李力@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/umMxuem\">《京东物流实时数据平台性能优化实践》</a>杨国斌@京东技术专家</p>\n <p><a href=\"http://dpurl.cn/S9p9Rct\">《外卖商家菜品运营效率提升实践》</a>罗震@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/C0DTDPI\">《外卖商户数据化运营体系建设》</a>李觊@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 046：<a href=\"https://tech.meituan.com/salon/#/44246\">AI在外卖配送的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王兴星&amp;郝井华 美团研究员 2018/11/25</strong></p>\n <p><a href=\"http://dpurl.cn/OG1VITL\">《预估模型在外卖广告的演进》</a>谢乾龙@美团外卖广告算法专家</p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《即时配送中的运筹优化技术》</a>郝井华@美团配送智能调度平台负责人</p>\n <p><a href=\"http://dpurl.cn/b2demu3\">《即时配送中的机器学习技术》</a>何仁清@美团配送AI方向负责人</p>\n <hr>\n <p><strong>Tech Salon 045：<a href=\"https://tech.meituan.com/salon/#/44241\">如何构建高性能、稳定的后端服务系统</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 |方建平 美团技术总监 2018/11/24</strong></p>\n <p><a href=\"http://dpurl.cn/h2tSH0d\">《美团度假交易稳定性建设实践》</a>韩建起@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1eEmiJa\">《美团配送智能调度系统架构演进》</a>郑伟@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/mOM70TU\">《美团稳定性保障平台Rhino》</a>占军@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/36eUWw7\">《美团外卖LBS服务实践》</a>易奎@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 044：<a href=\"https://tech.meituan.com/salon/#/42521\">千万级日活App的质量保证</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|李永刚 美团研究员 2018/09/15</strong></p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《AI语音产品测试》</a>于海生@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/EkrvqQQ\">《美团外卖客户端 UI 自动化测试实践》</a>刘健@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9wTSjRP\">《客户端QA效率工具》</a>赵晔@美团测试开发架构师</p>\n <hr>\n <p><strong>Tech Salon 043：<a href=\"https://tech.meituan.com/salon/#/42318\">美团金融千万级交易系统质量保障之路</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|赫大龙 美团高级技术专家 2018/09/01</strong></p>\n <p><a href=\"http://dpurl.cn/WBj4g1R\">《智能支付稳定性测试实战》</a>范勋伟@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/S3QC9nw\">《去哪儿网服务端自动化测试体系》</a>郑希文@去哪儿</p>\n <p><a href=\"http://dpurl.cn/bxidDmT\">《线上支付SDK质量保证体系》</a>张朋飞@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/ICnY9EY\">《质量运营演变之道》</a>符欣@美团高级开发工程师</p>\n <hr>\n <p><strong>Tech Salon 042：<a href=\"https://tech.meituan.com/salon/#/42098\">高效率前端与架构实战</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王鹤 美团高级技术专家 2018/08/26</strong></p>\n <p><a href=\"http://dpurl.cn/4zd1g7v\">《EH — 用黑科技打造全新的 Hybrid 体验》</a> 陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/atWgFPm\">《mpvue小程序开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/uBGnNe7\">《美团金融前端工程化最佳实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/C21IwKR\">《前端架构师应该做的事——架构模型与技术实践》</a>王鹤@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 041：<a href=\"https://tech.meituan.com/salon/#/41922\">企业级前端开发360°实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/08/18</strong></p>\n <p><a href=\"http://dpurl.cn/6enzQ6K\">《浅谈流量劫持与防治》</a>刘洋河@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/wJLdbeB\">《前端高可用性保障实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/WvMgJ22\">《跨容器高性能的离线化方案在美团的实践和探索》</a>龙佳文@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/6ea1W3X\">《前端遇上Go: 静态资源增量更新的新实践》</a>杨义天@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 040：<a href=\"https://tech.meituan.com/salon/#/41406\">前端遇上黑科技，打造全新界面体验与效率</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 | 冯湧 美团研发总监 2018/08/04</strong></p>\n <p><a href=\"http://dpurl.cn/dcUUsv7\">《EH——用黑科技打造的全新的 Hybrid 体验》</a>陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/omiEOIh\">《Vix——如何打造一个高效的前端组件库》</a>张胜@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/eSbf7eY\">《委以重任的Node.js——百亿级访问实践》</a>迪波威@百度资深软件工程师</p>\n <p><a href=\"http://dpurl.cn/1NLlrH7\">《构建时预渲染——网页首帧优化实践》</a>尚寒阳@美团资深研发工程师</p>\n <hr>\n <p><strong>Tech Salon 039：<a href=\"https://tech.meituan.com/salon/#/41065\">新思路打造移动端高效研发体系</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|周辉 美团资深架构师 2018/07/21</strong></p>\n <p><a href=\"http://dpurl.cn/rtXsz0X\">《Picasso在大众点评首页的应用》</a>虞惠文@美团Android开发工程师</p>\n <p><a href=\"http://dpurl.cn/gJkC96U\">《移动前后端开发解耦》</a>林晨@美团后端技术专家</p>\n <p><a href=\"http://dpurl.cn/kcEERJD\">《打造稳定、灵活、高效的运营配置平台》</a>蒋国宝@美团后端技术架构师</p>\n <p><a href=\"http://dpurl.cn/GEdFow2\">《移动持续集成实践》</a>何智聪@美团iOS技术专家</p>\n <hr>\n <p><strong>Tech Salon 038：<a href=\"https://tech.meituan.com/salon/#/40348\">旅游电商架构攻略指南</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|金孟哲 美团高级技术专家 2018/07/07</strong></p>\n <p><a href=\"http://dpurl.cn/9NA3IDI\">《旅游度假预订系统架构演进实践》</a> 金孟哲@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/pdIQztt\">《旅游度假多要素动态打包实践》</a> 王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/1mx2Mhn\">《旅游度假商品中心架构演进》</a> 徐泼@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jUc9Krm\">《直连低可信系统，实现高可用服务实践》</a> 郑旭@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 037：<a href=\"https://tech.meituan.com/salon/#/39548\">美团外卖两千万日订单背后的客户端技术架构</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|吴凯 美团高级技术专家 2018/06/23</strong></p>\n <p><a href=\"http://dpurl.cn/9VqeRQP\">《美团外卖客户端技术架构演进》</a>朱瑞利@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/b4BhI2i\">《客户端监控体系建设》</a>冯天锡@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/0WglRb7\">《客户端多端复用架构》</a>郑金光@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/BN8S6uV\">《客户端容灾能力体系》</a>李富强@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 036：<a href=\"https://tech.meituan.com/salon/#/38188\">大前端的动态化与可用性建设</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|洪磊 美团高级技术专家 2018/06/02</strong></p>\n <p><a href=\"http://dpurl.cn/4x8m29f\">《大前端高可用性建设》</a>李富强@美团资深前端工程师</p>\n <p><a href=\"http://dpurl.cn/aK72uB3\">《React fiber漫谈》</a>覃俊文@蚂蚁金服前端技术专家</p>\n <p><a href=\"http://dpurl.cn/uLlIi3q\">《小程序开发的新姿势 -mpvue 的应用和实践》</a>胡成全@美团前端技术专家</p>\n <p><a href=\"http://dpurl.cn/0n9ANpz\">《ReactNative性能优化企业级应用》</a>赵宏罡@腾讯资深前端开发工程师</p>\n <hr>\n <p><strong>Tech Salon 035：<a href=\"https://tech.meituan.com/salon/#/35673\">前端热点技术的企业级实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/04/21</strong></p>\n <p><a href=\"http://dpurl.cn/X8hmGar\">《前端遇上 Go——静态资源增量更新的新实践》</a>刘洋河@美团高级前端工程师</p>\n <p><a href=\"http://dpurl.cn/c2j4URx\">《金融扫码付 H5 迁移小程序拓荒之旅》</a>陈瑶@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/8VE6Q70\">《小程序开发的新姿势 - mpvue 开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 034：<a href=\"https://tech.meituan.com/salon/#/35161\">聊聊酒店系统高可用架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|许关飞 美团研究员 2018/04/14</strong></p>\n <p><a href=\"http://dpurl.cn/KwRRM3V\">《高可用之中间件技术》</a>吴湘@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9XzOUnT\">《分布式开源监控系统CAT在美团点评演进》</a>尤勇@美团研究员</p>\n <p><a href=\"http://dpurl.cn/3FHVwpo\">《美团旅行住宿产品中心系统高可用实战》</a>槐国涛@美团酒店CRS商品负责人</p>\n <p><a href=\"http://dpurl.cn/Ynt6aVE\">《美团旅行酒店住宿订单系统高可用实战》</a>李磊@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/2gLXCnH\">《美团旅行直连系统高可用实战》</a>秦浏杰@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 033：<a href=\"https://tech.meituan.com/salon/#/31815\">企业信息化建设和安全管理</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|邓昀泽 美团企业平台研发负责人 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/2Cpj4tO\">《美团点评内部系统构建之路》</a>邓昀泽@美团企业平台研发部负责人</p>\n <p><a href=\"http://dpurl.cn/IGFzn0f\">《企业信息防护体系建设》</a>陆平@美亚柏科企业电子数据取证事业部副总</p>\n <p><a href=\"http://dpurl.cn/BTYUxbh\">《企业如何应对安全威胁》</a>游兴旺@美团企业平台研发高级总监</p>\n <hr>\n <p><strong>Tech Salon 032：<a href=\"https://tech.meituan.com/salon/#/31816\">移动开发热点技术—动态日志、监控、Hybrid、插件化</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|方锦涛 美团高级技术专家 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/hi6x3tX\">《线上问题排查体系构建：动态日志》</a> 陈潼@美团Android资深工程师</p>\n <p><a href=\"http://dpurl.cn/BsmtuwJ\">《混合应用工程化实践》</a> 李罡@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/xXexGwG\">《Caesium iOS启动时间监控》</a> 吴君阳@美团iOS工程师</p>\n <hr>\n <p><strong>Tech Salon 031：<a href=\"https://tech.meituan.com/salon/#/31470\">线下支付千万级订单服务—前后端架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/01/27</strong></p>\n <p><a href=\"http://dpurl.cn/83yGayf\">《扫码付前端可用性保障实践》</a> 田泱@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/uQv3mVL\">《业务系统的建设之路》</a>刘运@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1HxNpDH\">《Web离线化加载》</a> 于秋@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/tbNSxRx\">《基于WTL框架的Windows开发最佳实践》</a> 钱声鹏@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 030：<a href=\"https://tech.meituan.com/salon/#/30554\">餐饮生态高可用系统实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|温华剑 美团技术专家 2018/01/13</strong></p>\n <p><a href=\"http://dpurl.cn/i40jBTG\">《从“0”开始-美团收银客户端》</a>聂龙羽@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/8qoK8Fa\">《美团餐饮生态大数据架构实践》</a>牛江浩@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/u49UVD9\">《餐饮开放平台的高可用实践》</a>朱洋波@美团技术专家</p>\n <hr>\n <h2 id=\"美团线上沙龙\">美团线上沙龙</h2>\n <p>任意点击标题，就能在线观看视频或者文章</p>\n <p><strong>On-Line Salon 33：<a href=\"https://m.lizhiweike.com/classroom/10038952\">美团大脑 智享生活</a></strong> 分享人：王仲远 美团点评高级研究员</p>\n <p><strong>On-Line Salon 32：<a href=\"https://gitbook.cn/books/5bcf24b6211d0e68b1b788f0/index.html\">基于深度学习的计算机视觉技术在无人驾驶中的应用</a></strong> 分享人：刘宇达 美团点评资深算法工程师</p>\n <p><strong>On-Line Salon 31：<a href=\"https://m.lizhiweike.com/classroom/9363553\">利用响应式来解决客户端问题</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 30：<a href=\"https://gitbook.cn/books/5b927473780fdb5e97d2a3bc/index.html\">美团针对 Redis Rehash 机制的探索和实践</a></strong> 分享人：葛春林 美团点评资深工程师</p>\n <p><strong>On-Line Salon 29：<a href=\"https://m.lizhiweike.com/classroom/8660084\">Flutter 原理与实践</a></strong> 分享人：李少杰 美团点评资深工程师</p>\n <p><strong>On-Line Salon 28：<a href=\"https://gitbook.cn/books/5b8746c7ea7bc512755e4e36/index.html\">如何基于深度学习实现图像的智能审核</a></strong> 分享人：魏晓明 美团点评高级技术专家</p>\n <p><strong>On-Line Salon 27：<a href=\"https://gitbook.cn/books/5b7e5a44a63144311b8dbf2d/index.html\">美团客户端响应式框架 EasyReact 开源</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 26：<a href=\"https://gitbook.cn/books/5b752e45e8b81c0748e349e1/index.html\">移动持续集成在大众点评的实践</a></strong> 分享人：何智聪、邢轶 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 25：Kotlin <a href=\"https://gitbook.cn/books/5b6c28169f4dd1284bf82f99/index.html\">代码检查探索与实践</a></strong> 分享人：周佳 美团点评前端开发工程师</p>\n <p><strong>On-Line Salon 24：<a href=\"https://gitbook.cn/books/5b67bceca51b8d5f8ecbcf79/index.html\">静态资源增量更新的新实践</a></strong> 分享人：刘洋河 美团点评资深工程师</p>\n <p><strong>On-Line Salon 23：<a href=\"https://gitbook.cn/books/5b5ab5721642ed2ba79b6630/index.html\">点评侧用户行为检索系统</a></strong> 分享人：朱凯 美团点评资深工程师</p>\n <p><strong>On-Line Salon 22：<a href=\"https://gitbook.cn/books/5b43fc6316959658636f059e/index.html\">深度学习在美团搜索广告排序的应用实践</a></strong> 分享人：薛欢、梁玉林、王新 美团点评资深工程师</p>\n <p><strong>On-Line Salon 21：<a href=\"https://gitbook.cn/books/5ae9bcbeb02ff82d0d1b0517/index.html\">使用 Mpvue 开发微信小程序的最佳实践</a></strong> 分享人：胡成全 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 20：<a href=\"https://gitbook.cn/books/5ad4a60daf8f2f35290f46d5/index.html\">亿级用户个性化品类推荐实战解析</a></strong> 分享人：张晓宇 美团高级工程师</p>\n <p><strong>On-Line Salon 19：<a href=\"https://gitbook.cn/books/5ac2325c9e924a1dc029c6b7/index.html\">MVVM 在美团点评酒旅业务中的实践</a></strong> 分享人：吴卓 美团点评技术专家</p>\n <p><strong>On-Line Salon 18：<a href=\"https://gitbook.cn/books/5aa6850a9c3cf94d4915f97c/index.html\">深度学习在美团点评推荐业务中实践</a></strong> 分享人：陈文石 美团点评算法专家</p>\n <p>感恩！99位出品人和讲师，70多个小时的分享，感谢他们给我们带来一线的技术实践分享，感谢他们给我们2万多小伙伴送上技术的“饕餮盛宴”。除了美团技术团队的讲师们，我们还要特别感谢来自腾讯、蚂蚁金服、百度、京东、去哪儿、美亚柏科等公司的讲师们，感谢你们的付出和努力，我们期待新的一年会有更多的合作！</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/1df24ed2.png\" alt=\"2018全年出品人及讲师\"></p>\n</div>', '2019-07-24 15:09:49', 'Java', '8790', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频0.912236158247845', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频', '2019-07-24 15:09:49', ' 技术学院');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d08e550147', '<div class=\"content\">\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/e62aba45.png\" alt></p>\n <p>你好，2019</p>\n <p>再见，2018</p>\n <p>又到了一年辞旧迎新的时候，大家应该也和美美一样，在忙着总结回顾和展望规划吧。</p>\n <p>按老惯例，我们该献上技术年货了。今年首先出场的，是我们的技术沙龙大套餐！</p>\n <p>美团技术沙龙是由美团技术团队和美团科协主办的线下技术活动，每期沙龙邀请美团和同行公司的技术专家分享来自一线的实践经验，覆盖前端、后台、系统、数据、算法、测试、运维等技术领域。目前已在北京、上海、厦门、成都等城市成功举办了48期，吸引了超过2万名工程师报名参会。除了现场亲密交流之外，大家还在会后继续进微信群里切磋问道。</p>\n <p>我们同时也定期举办线上沙龙，有更多的朋友已经在线收听或收看过我们的直播。</p>\n <p>过去的一年里，我们一共举办了19场线下沙龙，16次线上沙龙，包括99位讲师，85个演讲，70+小时分享。除美团的几十位专家之外，还邀请了百度、蚂蚁金服、去哪儿、京东等同行。主题既有最火的AI热点——深度学习、强化学习、知识图谱，新潮技术Go、Kotlin、Flutter的落地实践，也有大规模互联网平台不可或缺的稳定性保障、高可用架构、监控体系、持续集成，还有接地气的运营系统、数据平台、配送调度的经验，更少不了CAT、mpvue、EasyReact这些火爆的开源项目……</p>\n <p>我们整理了今年所有线上线下沙龙的演讲稿和视频，分享给大家，希望能帮助大家在技术之路上继续追求卓越。</p>\n <p>还没有关注美团技术团队公众号（meituantech）的同学，赶快关注哟。</p>\n <p>现在，大家请闭眼，大餐来了～～～</p>\n <h2 id=\"美团线下沙龙\">美团线下沙龙</h2>\n <p>任意点击标题，就能直接查看视频及演讲稿</p>\n <p><strong>Tech Salon 048：<a href=\"https://tech.meituan.com/salon/#/44602\">AI在复杂业务场景中的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|何仁清 美团研究员 2018/12/22</strong></p>\n <p><a href=\"http://dpurl.cn/1aGUjwA\">《深度强化学习技术在智能调度中的应用》</a>王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jtvI8lt\">《深度学习在物流配送舆情监控中的应用》</a>李超@京东物流NLP方向资深算法工程师</p>\n <p><a href=\"http://dpurl.cn/UxQxdqg\">《美团搜索中的深度学习实践》</a>周翔@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 047：<a href=\"https://tech.meituan.com/salon/#/44452\">运营效率系统架构演进之道</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|阳纯飞 美团高级技术专家 2018/12/08</strong></p>\n <p><a href=\"http://dpurl.cn/e5FWi1r\">《面向O2O大促活动的高效运营系统实践》</a>李力@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/umMxuem\">《京东物流实时数据平台性能优化实践》</a>杨国斌@京东技术专家</p>\n <p><a href=\"http://dpurl.cn/S9p9Rct\">《外卖商家菜品运营效率提升实践》</a>罗震@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/C0DTDPI\">《外卖商户数据化运营体系建设》</a>李觊@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 046：<a href=\"https://tech.meituan.com/salon/#/44246\">AI在外卖配送的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王兴星&amp;郝井华 美团研究员 2018/11/25</strong></p>\n <p><a href=\"http://dpurl.cn/OG1VITL\">《预估模型在外卖广告的演进》</a>谢乾龙@美团外卖广告算法专家</p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《即时配送中的运筹优化技术》</a>郝井华@美团配送智能调度平台负责人</p>\n <p><a href=\"http://dpurl.cn/b2demu3\">《即时配送中的机器学习技术》</a>何仁清@美团配送AI方向负责人</p>\n <hr>\n <p><strong>Tech Salon 045：<a href=\"https://tech.meituan.com/salon/#/44241\">如何构建高性能、稳定的后端服务系统</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 |方建平 美团技术总监 2018/11/24</strong></p>\n <p><a href=\"http://dpurl.cn/h2tSH0d\">《美团度假交易稳定性建设实践》</a>韩建起@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1eEmiJa\">《美团配送智能调度系统架构演进》</a>郑伟@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/mOM70TU\">《美团稳定性保障平台Rhino》</a>占军@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/36eUWw7\">《美团外卖LBS服务实践》</a>易奎@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 044：<a href=\"https://tech.meituan.com/salon/#/42521\">千万级日活App的质量保证</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|李永刚 美团研究员 2018/09/15</strong></p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《AI语音产品测试》</a>于海生@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/EkrvqQQ\">《美团外卖客户端 UI 自动化测试实践》</a>刘健@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9wTSjRP\">《客户端QA效率工具》</a>赵晔@美团测试开发架构师</p>\n <hr>\n <p><strong>Tech Salon 043：<a href=\"https://tech.meituan.com/salon/#/42318\">美团金融千万级交易系统质量保障之路</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|赫大龙 美团高级技术专家 2018/09/01</strong></p>\n <p><a href=\"http://dpurl.cn/WBj4g1R\">《智能支付稳定性测试实战》</a>范勋伟@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/S3QC9nw\">《去哪儿网服务端自动化测试体系》</a>郑希文@去哪儿</p>\n <p><a href=\"http://dpurl.cn/bxidDmT\">《线上支付SDK质量保证体系》</a>张朋飞@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/ICnY9EY\">《质量运营演变之道》</a>符欣@美团高级开发工程师</p>\n <hr>\n <p><strong>Tech Salon 042：<a href=\"https://tech.meituan.com/salon/#/42098\">高效率前端与架构实战</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王鹤 美团高级技术专家 2018/08/26</strong></p>\n <p><a href=\"http://dpurl.cn/4zd1g7v\">《EH — 用黑科技打造全新的 Hybrid 体验》</a> 陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/atWgFPm\">《mpvue小程序开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/uBGnNe7\">《美团金融前端工程化最佳实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/C21IwKR\">《前端架构师应该做的事——架构模型与技术实践》</a>王鹤@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 041：<a href=\"https://tech.meituan.com/salon/#/41922\">企业级前端开发360°实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/08/18</strong></p>\n <p><a href=\"http://dpurl.cn/6enzQ6K\">《浅谈流量劫持与防治》</a>刘洋河@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/wJLdbeB\">《前端高可用性保障实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/WvMgJ22\">《跨容器高性能的离线化方案在美团的实践和探索》</a>龙佳文@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/6ea1W3X\">《前端遇上Go: 静态资源增量更新的新实践》</a>杨义天@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 040：<a href=\"https://tech.meituan.com/salon/#/41406\">前端遇上黑科技，打造全新界面体验与效率</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 | 冯湧 美团研发总监 2018/08/04</strong></p>\n <p><a href=\"http://dpurl.cn/dcUUsv7\">《EH——用黑科技打造的全新的 Hybrid 体验》</a>陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/omiEOIh\">《Vix——如何打造一个高效的前端组件库》</a>张胜@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/eSbf7eY\">《委以重任的Node.js——百亿级访问实践》</a>迪波威@百度资深软件工程师</p>\n <p><a href=\"http://dpurl.cn/1NLlrH7\">《构建时预渲染——网页首帧优化实践》</a>尚寒阳@美团资深研发工程师</p>\n <hr>\n <p><strong>Tech Salon 039：<a href=\"https://tech.meituan.com/salon/#/41065\">新思路打造移动端高效研发体系</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|周辉 美团资深架构师 2018/07/21</strong></p>\n <p><a href=\"http://dpurl.cn/rtXsz0X\">《Picasso在大众点评首页的应用》</a>虞惠文@美团Android开发工程师</p>\n <p><a href=\"http://dpurl.cn/gJkC96U\">《移动前后端开发解耦》</a>林晨@美团后端技术专家</p>\n <p><a href=\"http://dpurl.cn/kcEERJD\">《打造稳定、灵活、高效的运营配置平台》</a>蒋国宝@美团后端技术架构师</p>\n <p><a href=\"http://dpurl.cn/GEdFow2\">《移动持续集成实践》</a>何智聪@美团iOS技术专家</p>\n <hr>\n <p><strong>Tech Salon 038：<a href=\"https://tech.meituan.com/salon/#/40348\">旅游电商架构攻略指南</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|金孟哲 美团高级技术专家 2018/07/07</strong></p>\n <p><a href=\"http://dpurl.cn/9NA3IDI\">《旅游度假预订系统架构演进实践》</a> 金孟哲@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/pdIQztt\">《旅游度假多要素动态打包实践》</a> 王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/1mx2Mhn\">《旅游度假商品中心架构演进》</a> 徐泼@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jUc9Krm\">《直连低可信系统，实现高可用服务实践》</a> 郑旭@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 037：<a href=\"https://tech.meituan.com/salon/#/39548\">美团外卖两千万日订单背后的客户端技术架构</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|吴凯 美团高级技术专家 2018/06/23</strong></p>\n <p><a href=\"http://dpurl.cn/9VqeRQP\">《美团外卖客户端技术架构演进》</a>朱瑞利@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/b4BhI2i\">《客户端监控体系建设》</a>冯天锡@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/0WglRb7\">《客户端多端复用架构》</a>郑金光@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/BN8S6uV\">《客户端容灾能力体系》</a>李富强@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 036：<a href=\"https://tech.meituan.com/salon/#/38188\">大前端的动态化与可用性建设</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|洪磊 美团高级技术专家 2018/06/02</strong></p>\n <p><a href=\"http://dpurl.cn/4x8m29f\">《大前端高可用性建设》</a>李富强@美团资深前端工程师</p>\n <p><a href=\"http://dpurl.cn/aK72uB3\">《React fiber漫谈》</a>覃俊文@蚂蚁金服前端技术专家</p>\n <p><a href=\"http://dpurl.cn/uLlIi3q\">《小程序开发的新姿势 -mpvue 的应用和实践》</a>胡成全@美团前端技术专家</p>\n <p><a href=\"http://dpurl.cn/0n9ANpz\">《ReactNative性能优化企业级应用》</a>赵宏罡@腾讯资深前端开发工程师</p>\n <hr>\n <p><strong>Tech Salon 035：<a href=\"https://tech.meituan.com/salon/#/35673\">前端热点技术的企业级实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/04/21</strong></p>\n <p><a href=\"http://dpurl.cn/X8hmGar\">《前端遇上 Go——静态资源增量更新的新实践》</a>刘洋河@美团高级前端工程师</p>\n <p><a href=\"http://dpurl.cn/c2j4URx\">《金融扫码付 H5 迁移小程序拓荒之旅》</a>陈瑶@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/8VE6Q70\">《小程序开发的新姿势 - mpvue 开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 034：<a href=\"https://tech.meituan.com/salon/#/35161\">聊聊酒店系统高可用架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|许关飞 美团研究员 2018/04/14</strong></p>\n <p><a href=\"http://dpurl.cn/KwRRM3V\">《高可用之中间件技术》</a>吴湘@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9XzOUnT\">《分布式开源监控系统CAT在美团点评演进》</a>尤勇@美团研究员</p>\n <p><a href=\"http://dpurl.cn/3FHVwpo\">《美团旅行住宿产品中心系统高可用实战》</a>槐国涛@美团酒店CRS商品负责人</p>\n <p><a href=\"http://dpurl.cn/Ynt6aVE\">《美团旅行酒店住宿订单系统高可用实战》</a>李磊@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/2gLXCnH\">《美团旅行直连系统高可用实战》</a>秦浏杰@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 033：<a href=\"https://tech.meituan.com/salon/#/31815\">企业信息化建设和安全管理</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|邓昀泽 美团企业平台研发负责人 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/2Cpj4tO\">《美团点评内部系统构建之路》</a>邓昀泽@美团企业平台研发部负责人</p>\n <p><a href=\"http://dpurl.cn/IGFzn0f\">《企业信息防护体系建设》</a>陆平@美亚柏科企业电子数据取证事业部副总</p>\n <p><a href=\"http://dpurl.cn/BTYUxbh\">《企业如何应对安全威胁》</a>游兴旺@美团企业平台研发高级总监</p>\n <hr>\n <p><strong>Tech Salon 032：<a href=\"https://tech.meituan.com/salon/#/31816\">移动开发热点技术—动态日志、监控、Hybrid、插件化</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|方锦涛 美团高级技术专家 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/hi6x3tX\">《线上问题排查体系构建：动态日志》</a> 陈潼@美团Android资深工程师</p>\n <p><a href=\"http://dpurl.cn/BsmtuwJ\">《混合应用工程化实践》</a> 李罡@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/xXexGwG\">《Caesium iOS启动时间监控》</a> 吴君阳@美团iOS工程师</p>\n <hr>\n <p><strong>Tech Salon 031：<a href=\"https://tech.meituan.com/salon/#/31470\">线下支付千万级订单服务—前后端架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/01/27</strong></p>\n <p><a href=\"http://dpurl.cn/83yGayf\">《扫码付前端可用性保障实践》</a> 田泱@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/uQv3mVL\">《业务系统的建设之路》</a>刘运@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1HxNpDH\">《Web离线化加载》</a> 于秋@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/tbNSxRx\">《基于WTL框架的Windows开发最佳实践》</a> 钱声鹏@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 030：<a href=\"https://tech.meituan.com/salon/#/30554\">餐饮生态高可用系统实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|温华剑 美团技术专家 2018/01/13</strong></p>\n <p><a href=\"http://dpurl.cn/i40jBTG\">《从“0”开始-美团收银客户端》</a>聂龙羽@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/8qoK8Fa\">《美团餐饮生态大数据架构实践》</a>牛江浩@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/u49UVD9\">《餐饮开放平台的高可用实践》</a>朱洋波@美团技术专家</p>\n <hr>\n <h2 id=\"美团线上沙龙\">美团线上沙龙</h2>\n <p>任意点击标题，就能在线观看视频或者文章</p>\n <p><strong>On-Line Salon 33：<a href=\"https://m.lizhiweike.com/classroom/10038952\">美团大脑 智享生活</a></strong> 分享人：王仲远 美团点评高级研究员</p>\n <p><strong>On-Line Salon 32：<a href=\"https://gitbook.cn/books/5bcf24b6211d0e68b1b788f0/index.html\">基于深度学习的计算机视觉技术在无人驾驶中的应用</a></strong> 分享人：刘宇达 美团点评资深算法工程师</p>\n <p><strong>On-Line Salon 31：<a href=\"https://m.lizhiweike.com/classroom/9363553\">利用响应式来解决客户端问题</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 30：<a href=\"https://gitbook.cn/books/5b927473780fdb5e97d2a3bc/index.html\">美团针对 Redis Rehash 机制的探索和实践</a></strong> 分享人：葛春林 美团点评资深工程师</p>\n <p><strong>On-Line Salon 29：<a href=\"https://m.lizhiweike.com/classroom/8660084\">Flutter 原理与实践</a></strong> 分享人：李少杰 美团点评资深工程师</p>\n <p><strong>On-Line Salon 28：<a href=\"https://gitbook.cn/books/5b8746c7ea7bc512755e4e36/index.html\">如何基于深度学习实现图像的智能审核</a></strong> 分享人：魏晓明 美团点评高级技术专家</p>\n <p><strong>On-Line Salon 27：<a href=\"https://gitbook.cn/books/5b7e5a44a63144311b8dbf2d/index.html\">美团客户端响应式框架 EasyReact 开源</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 26：<a href=\"https://gitbook.cn/books/5b752e45e8b81c0748e349e1/index.html\">移动持续集成在大众点评的实践</a></strong> 分享人：何智聪、邢轶 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 25：Kotlin <a href=\"https://gitbook.cn/books/5b6c28169f4dd1284bf82f99/index.html\">代码检查探索与实践</a></strong> 分享人：周佳 美团点评前端开发工程师</p>\n <p><strong>On-Line Salon 24：<a href=\"https://gitbook.cn/books/5b67bceca51b8d5f8ecbcf79/index.html\">静态资源增量更新的新实践</a></strong> 分享人：刘洋河 美团点评资深工程师</p>\n <p><strong>On-Line Salon 23：<a href=\"https://gitbook.cn/books/5b5ab5721642ed2ba79b6630/index.html\">点评侧用户行为检索系统</a></strong> 分享人：朱凯 美团点评资深工程师</p>\n <p><strong>On-Line Salon 22：<a href=\"https://gitbook.cn/books/5b43fc6316959658636f059e/index.html\">深度学习在美团搜索广告排序的应用实践</a></strong> 分享人：薛欢、梁玉林、王新 美团点评资深工程师</p>\n <p><strong>On-Line Salon 21：<a href=\"https://gitbook.cn/books/5ae9bcbeb02ff82d0d1b0517/index.html\">使用 Mpvue 开发微信小程序的最佳实践</a></strong> 分享人：胡成全 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 20：<a href=\"https://gitbook.cn/books/5ad4a60daf8f2f35290f46d5/index.html\">亿级用户个性化品类推荐实战解析</a></strong> 分享人：张晓宇 美团高级工程师</p>\n <p><strong>On-Line Salon 19：<a href=\"https://gitbook.cn/books/5ac2325c9e924a1dc029c6b7/index.html\">MVVM 在美团点评酒旅业务中的实践</a></strong> 分享人：吴卓 美团点评技术专家</p>\n <p><strong>On-Line Salon 18：<a href=\"https://gitbook.cn/books/5aa6850a9c3cf94d4915f97c/index.html\">深度学习在美团点评推荐业务中实践</a></strong> 分享人：陈文石 美团点评算法专家</p>\n <p>感恩！99位出品人和讲师，70多个小时的分享，感谢他们给我们带来一线的技术实践分享，感谢他们给我们2万多小伙伴送上技术的“饕餮盛宴”。除了美团技术团队的讲师们，我们还要特别感谢来自腾讯、蚂蚁金服、百度、京东、去哪儿、美亚柏科等公司的讲师们，感谢你们的付出和努力，我们期待新的一年会有更多的合作！</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/1df24ed2.png\" alt=\"2018全年出品人及讲师\"></p>\n</div>', '2019-07-24 15:09:49', '数据库', '8790', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频0.9047220946821278', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频', '2019-07-24 15:09:49', ' 技术学院');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d08e9b0148', '<div class=\"content\">\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/e62aba45.png\" alt></p>\n <p>你好，2019</p>\n <p>再见，2018</p>\n <p>又到了一年辞旧迎新的时候，大家应该也和美美一样，在忙着总结回顾和展望规划吧。</p>\n <p>按老惯例，我们该献上技术年货了。今年首先出场的，是我们的技术沙龙大套餐！</p>\n <p>美团技术沙龙是由美团技术团队和美团科协主办的线下技术活动，每期沙龙邀请美团和同行公司的技术专家分享来自一线的实践经验，覆盖前端、后台、系统、数据、算法、测试、运维等技术领域。目前已在北京、上海、厦门、成都等城市成功举办了48期，吸引了超过2万名工程师报名参会。除了现场亲密交流之外，大家还在会后继续进微信群里切磋问道。</p>\n <p>我们同时也定期举办线上沙龙，有更多的朋友已经在线收听或收看过我们的直播。</p>\n <p>过去的一年里，我们一共举办了19场线下沙龙，16次线上沙龙，包括99位讲师，85个演讲，70+小时分享。除美团的几十位专家之外，还邀请了百度、蚂蚁金服、去哪儿、京东等同行。主题既有最火的AI热点——深度学习、强化学习、知识图谱，新潮技术Go、Kotlin、Flutter的落地实践，也有大规模互联网平台不可或缺的稳定性保障、高可用架构、监控体系、持续集成，还有接地气的运营系统、数据平台、配送调度的经验，更少不了CAT、mpvue、EasyReact这些火爆的开源项目……</p>\n <p>我们整理了今年所有线上线下沙龙的演讲稿和视频，分享给大家，希望能帮助大家在技术之路上继续追求卓越。</p>\n <p>还没有关注美团技术团队公众号（meituantech）的同学，赶快关注哟。</p>\n <p>现在，大家请闭眼，大餐来了～～～</p>\n <h2 id=\"美团线下沙龙\">美团线下沙龙</h2>\n <p>任意点击标题，就能直接查看视频及演讲稿</p>\n <p><strong>Tech Salon 048：<a href=\"https://tech.meituan.com/salon/#/44602\">AI在复杂业务场景中的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|何仁清 美团研究员 2018/12/22</strong></p>\n <p><a href=\"http://dpurl.cn/1aGUjwA\">《深度强化学习技术在智能调度中的应用》</a>王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jtvI8lt\">《深度学习在物流配送舆情监控中的应用》</a>李超@京东物流NLP方向资深算法工程师</p>\n <p><a href=\"http://dpurl.cn/UxQxdqg\">《美团搜索中的深度学习实践》</a>周翔@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 047：<a href=\"https://tech.meituan.com/salon/#/44452\">运营效率系统架构演进之道</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|阳纯飞 美团高级技术专家 2018/12/08</strong></p>\n <p><a href=\"http://dpurl.cn/e5FWi1r\">《面向O2O大促活动的高效运营系统实践》</a>李力@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/umMxuem\">《京东物流实时数据平台性能优化实践》</a>杨国斌@京东技术专家</p>\n <p><a href=\"http://dpurl.cn/S9p9Rct\">《外卖商家菜品运营效率提升实践》</a>罗震@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/C0DTDPI\">《外卖商户数据化运营体系建设》</a>李觊@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 046：<a href=\"https://tech.meituan.com/salon/#/44246\">AI在外卖配送的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王兴星&amp;郝井华 美团研究员 2018/11/25</strong></p>\n <p><a href=\"http://dpurl.cn/OG1VITL\">《预估模型在外卖广告的演进》</a>谢乾龙@美团外卖广告算法专家</p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《即时配送中的运筹优化技术》</a>郝井华@美团配送智能调度平台负责人</p>\n <p><a href=\"http://dpurl.cn/b2demu3\">《即时配送中的机器学习技术》</a>何仁清@美团配送AI方向负责人</p>\n <hr>\n <p><strong>Tech Salon 045：<a href=\"https://tech.meituan.com/salon/#/44241\">如何构建高性能、稳定的后端服务系统</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 |方建平 美团技术总监 2018/11/24</strong></p>\n <p><a href=\"http://dpurl.cn/h2tSH0d\">《美团度假交易稳定性建设实践》</a>韩建起@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1eEmiJa\">《美团配送智能调度系统架构演进》</a>郑伟@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/mOM70TU\">《美团稳定性保障平台Rhino》</a>占军@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/36eUWw7\">《美团外卖LBS服务实践》</a>易奎@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 044：<a href=\"https://tech.meituan.com/salon/#/42521\">千万级日活App的质量保证</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|李永刚 美团研究员 2018/09/15</strong></p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《AI语音产品测试》</a>于海生@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/EkrvqQQ\">《美团外卖客户端 UI 自动化测试实践》</a>刘健@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9wTSjRP\">《客户端QA效率工具》</a>赵晔@美团测试开发架构师</p>\n <hr>\n <p><strong>Tech Salon 043：<a href=\"https://tech.meituan.com/salon/#/42318\">美团金融千万级交易系统质量保障之路</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|赫大龙 美团高级技术专家 2018/09/01</strong></p>\n <p><a href=\"http://dpurl.cn/WBj4g1R\">《智能支付稳定性测试实战》</a>范勋伟@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/S3QC9nw\">《去哪儿网服务端自动化测试体系》</a>郑希文@去哪儿</p>\n <p><a href=\"http://dpurl.cn/bxidDmT\">《线上支付SDK质量保证体系》</a>张朋飞@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/ICnY9EY\">《质量运营演变之道》</a>符欣@美团高级开发工程师</p>\n <hr>\n <p><strong>Tech Salon 042：<a href=\"https://tech.meituan.com/salon/#/42098\">高效率前端与架构实战</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王鹤 美团高级技术专家 2018/08/26</strong></p>\n <p><a href=\"http://dpurl.cn/4zd1g7v\">《EH — 用黑科技打造全新的 Hybrid 体验》</a> 陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/atWgFPm\">《mpvue小程序开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/uBGnNe7\">《美团金融前端工程化最佳实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/C21IwKR\">《前端架构师应该做的事——架构模型与技术实践》</a>王鹤@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 041：<a href=\"https://tech.meituan.com/salon/#/41922\">企业级前端开发360°实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/08/18</strong></p>\n <p><a href=\"http://dpurl.cn/6enzQ6K\">《浅谈流量劫持与防治》</a>刘洋河@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/wJLdbeB\">《前端高可用性保障实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/WvMgJ22\">《跨容器高性能的离线化方案在美团的实践和探索》</a>龙佳文@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/6ea1W3X\">《前端遇上Go: 静态资源增量更新的新实践》</a>杨义天@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 040：<a href=\"https://tech.meituan.com/salon/#/41406\">前端遇上黑科技，打造全新界面体验与效率</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 | 冯湧 美团研发总监 2018/08/04</strong></p>\n <p><a href=\"http://dpurl.cn/dcUUsv7\">《EH——用黑科技打造的全新的 Hybrid 体验》</a>陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/omiEOIh\">《Vix——如何打造一个高效的前端组件库》</a>张胜@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/eSbf7eY\">《委以重任的Node.js——百亿级访问实践》</a>迪波威@百度资深软件工程师</p>\n <p><a href=\"http://dpurl.cn/1NLlrH7\">《构建时预渲染——网页首帧优化实践》</a>尚寒阳@美团资深研发工程师</p>\n <hr>\n <p><strong>Tech Salon 039：<a href=\"https://tech.meituan.com/salon/#/41065\">新思路打造移动端高效研发体系</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|周辉 美团资深架构师 2018/07/21</strong></p>\n <p><a href=\"http://dpurl.cn/rtXsz0X\">《Picasso在大众点评首页的应用》</a>虞惠文@美团Android开发工程师</p>\n <p><a href=\"http://dpurl.cn/gJkC96U\">《移动前后端开发解耦》</a>林晨@美团后端技术专家</p>\n <p><a href=\"http://dpurl.cn/kcEERJD\">《打造稳定、灵活、高效的运营配置平台》</a>蒋国宝@美团后端技术架构师</p>\n <p><a href=\"http://dpurl.cn/GEdFow2\">《移动持续集成实践》</a>何智聪@美团iOS技术专家</p>\n <hr>\n <p><strong>Tech Salon 038：<a href=\"https://tech.meituan.com/salon/#/40348\">旅游电商架构攻略指南</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|金孟哲 美团高级技术专家 2018/07/07</strong></p>\n <p><a href=\"http://dpurl.cn/9NA3IDI\">《旅游度假预订系统架构演进实践》</a> 金孟哲@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/pdIQztt\">《旅游度假多要素动态打包实践》</a> 王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/1mx2Mhn\">《旅游度假商品中心架构演进》</a> 徐泼@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jUc9Krm\">《直连低可信系统，实现高可用服务实践》</a> 郑旭@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 037：<a href=\"https://tech.meituan.com/salon/#/39548\">美团外卖两千万日订单背后的客户端技术架构</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|吴凯 美团高级技术专家 2018/06/23</strong></p>\n <p><a href=\"http://dpurl.cn/9VqeRQP\">《美团外卖客户端技术架构演进》</a>朱瑞利@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/b4BhI2i\">《客户端监控体系建设》</a>冯天锡@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/0WglRb7\">《客户端多端复用架构》</a>郑金光@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/BN8S6uV\">《客户端容灾能力体系》</a>李富强@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 036：<a href=\"https://tech.meituan.com/salon/#/38188\">大前端的动态化与可用性建设</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|洪磊 美团高级技术专家 2018/06/02</strong></p>\n <p><a href=\"http://dpurl.cn/4x8m29f\">《大前端高可用性建设》</a>李富强@美团资深前端工程师</p>\n <p><a href=\"http://dpurl.cn/aK72uB3\">《React fiber漫谈》</a>覃俊文@蚂蚁金服前端技术专家</p>\n <p><a href=\"http://dpurl.cn/uLlIi3q\">《小程序开发的新姿势 -mpvue 的应用和实践》</a>胡成全@美团前端技术专家</p>\n <p><a href=\"http://dpurl.cn/0n9ANpz\">《ReactNative性能优化企业级应用》</a>赵宏罡@腾讯资深前端开发工程师</p>\n <hr>\n <p><strong>Tech Salon 035：<a href=\"https://tech.meituan.com/salon/#/35673\">前端热点技术的企业级实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/04/21</strong></p>\n <p><a href=\"http://dpurl.cn/X8hmGar\">《前端遇上 Go——静态资源增量更新的新实践》</a>刘洋河@美团高级前端工程师</p>\n <p><a href=\"http://dpurl.cn/c2j4URx\">《金融扫码付 H5 迁移小程序拓荒之旅》</a>陈瑶@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/8VE6Q70\">《小程序开发的新姿势 - mpvue 开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 034：<a href=\"https://tech.meituan.com/salon/#/35161\">聊聊酒店系统高可用架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|许关飞 美团研究员 2018/04/14</strong></p>\n <p><a href=\"http://dpurl.cn/KwRRM3V\">《高可用之中间件技术》</a>吴湘@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9XzOUnT\">《分布式开源监控系统CAT在美团点评演进》</a>尤勇@美团研究员</p>\n <p><a href=\"http://dpurl.cn/3FHVwpo\">《美团旅行住宿产品中心系统高可用实战》</a>槐国涛@美团酒店CRS商品负责人</p>\n <p><a href=\"http://dpurl.cn/Ynt6aVE\">《美团旅行酒店住宿订单系统高可用实战》</a>李磊@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/2gLXCnH\">《美团旅行直连系统高可用实战》</a>秦浏杰@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 033：<a href=\"https://tech.meituan.com/salon/#/31815\">企业信息化建设和安全管理</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|邓昀泽 美团企业平台研发负责人 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/2Cpj4tO\">《美团点评内部系统构建之路》</a>邓昀泽@美团企业平台研发部负责人</p>\n <p><a href=\"http://dpurl.cn/IGFzn0f\">《企业信息防护体系建设》</a>陆平@美亚柏科企业电子数据取证事业部副总</p>\n <p><a href=\"http://dpurl.cn/BTYUxbh\">《企业如何应对安全威胁》</a>游兴旺@美团企业平台研发高级总监</p>\n <hr>\n <p><strong>Tech Salon 032：<a href=\"https://tech.meituan.com/salon/#/31816\">移动开发热点技术—动态日志、监控、Hybrid、插件化</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|方锦涛 美团高级技术专家 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/hi6x3tX\">《线上问题排查体系构建：动态日志》</a> 陈潼@美团Android资深工程师</p>\n <p><a href=\"http://dpurl.cn/BsmtuwJ\">《混合应用工程化实践》</a> 李罡@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/xXexGwG\">《Caesium iOS启动时间监控》</a> 吴君阳@美团iOS工程师</p>\n <hr>\n <p><strong>Tech Salon 031：<a href=\"https://tech.meituan.com/salon/#/31470\">线下支付千万级订单服务—前后端架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/01/27</strong></p>\n <p><a href=\"http://dpurl.cn/83yGayf\">《扫码付前端可用性保障实践》</a> 田泱@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/uQv3mVL\">《业务系统的建设之路》</a>刘运@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1HxNpDH\">《Web离线化加载》</a> 于秋@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/tbNSxRx\">《基于WTL框架的Windows开发最佳实践》</a> 钱声鹏@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 030：<a href=\"https://tech.meituan.com/salon/#/30554\">餐饮生态高可用系统实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|温华剑 美团技术专家 2018/01/13</strong></p>\n <p><a href=\"http://dpurl.cn/i40jBTG\">《从“0”开始-美团收银客户端》</a>聂龙羽@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/8qoK8Fa\">《美团餐饮生态大数据架构实践》</a>牛江浩@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/u49UVD9\">《餐饮开放平台的高可用实践》</a>朱洋波@美团技术专家</p>\n <hr>\n <h2 id=\"美团线上沙龙\">美团线上沙龙</h2>\n <p>任意点击标题，就能在线观看视频或者文章</p>\n <p><strong>On-Line Salon 33：<a href=\"https://m.lizhiweike.com/classroom/10038952\">美团大脑 智享生活</a></strong> 分享人：王仲远 美团点评高级研究员</p>\n <p><strong>On-Line Salon 32：<a href=\"https://gitbook.cn/books/5bcf24b6211d0e68b1b788f0/index.html\">基于深度学习的计算机视觉技术在无人驾驶中的应用</a></strong> 分享人：刘宇达 美团点评资深算法工程师</p>\n <p><strong>On-Line Salon 31：<a href=\"https://m.lizhiweike.com/classroom/9363553\">利用响应式来解决客户端问题</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 30：<a href=\"https://gitbook.cn/books/5b927473780fdb5e97d2a3bc/index.html\">美团针对 Redis Rehash 机制的探索和实践</a></strong> 分享人：葛春林 美团点评资深工程师</p>\n <p><strong>On-Line Salon 29：<a href=\"https://m.lizhiweike.com/classroom/8660084\">Flutter 原理与实践</a></strong> 分享人：李少杰 美团点评资深工程师</p>\n <p><strong>On-Line Salon 28：<a href=\"https://gitbook.cn/books/5b8746c7ea7bc512755e4e36/index.html\">如何基于深度学习实现图像的智能审核</a></strong> 分享人：魏晓明 美团点评高级技术专家</p>\n <p><strong>On-Line Salon 27：<a href=\"https://gitbook.cn/books/5b7e5a44a63144311b8dbf2d/index.html\">美团客户端响应式框架 EasyReact 开源</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 26：<a href=\"https://gitbook.cn/books/5b752e45e8b81c0748e349e1/index.html\">移动持续集成在大众点评的实践</a></strong> 分享人：何智聪、邢轶 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 25：Kotlin <a href=\"https://gitbook.cn/books/5b6c28169f4dd1284bf82f99/index.html\">代码检查探索与实践</a></strong> 分享人：周佳 美团点评前端开发工程师</p>\n <p><strong>On-Line Salon 24：<a href=\"https://gitbook.cn/books/5b67bceca51b8d5f8ecbcf79/index.html\">静态资源增量更新的新实践</a></strong> 分享人：刘洋河 美团点评资深工程师</p>\n <p><strong>On-Line Salon 23：<a href=\"https://gitbook.cn/books/5b5ab5721642ed2ba79b6630/index.html\">点评侧用户行为检索系统</a></strong> 分享人：朱凯 美团点评资深工程师</p>\n <p><strong>On-Line Salon 22：<a href=\"https://gitbook.cn/books/5b43fc6316959658636f059e/index.html\">深度学习在美团搜索广告排序的应用实践</a></strong> 分享人：薛欢、梁玉林、王新 美团点评资深工程师</p>\n <p><strong>On-Line Salon 21：<a href=\"https://gitbook.cn/books/5ae9bcbeb02ff82d0d1b0517/index.html\">使用 Mpvue 开发微信小程序的最佳实践</a></strong> 分享人：胡成全 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 20：<a href=\"https://gitbook.cn/books/5ad4a60daf8f2f35290f46d5/index.html\">亿级用户个性化品类推荐实战解析</a></strong> 分享人：张晓宇 美团高级工程师</p>\n <p><strong>On-Line Salon 19：<a href=\"https://gitbook.cn/books/5ac2325c9e924a1dc029c6b7/index.html\">MVVM 在美团点评酒旅业务中的实践</a></strong> 分享人：吴卓 美团点评技术专家</p>\n <p><strong>On-Line Salon 18：<a href=\"https://gitbook.cn/books/5aa6850a9c3cf94d4915f97c/index.html\">深度学习在美团点评推荐业务中实践</a></strong> 分享人：陈文石 美团点评算法专家</p>\n <p>感恩！99位出品人和讲师，70多个小时的分享，感谢他们给我们带来一线的技术实践分享，感谢他们给我们2万多小伙伴送上技术的“饕餮盛宴”。除了美团技术团队的讲师们，我们还要特别感谢来自腾讯、蚂蚁金服、百度、京东、去哪儿、美亚柏科等公司的讲师们，感谢你们的付出和努力，我们期待新的一年会有更多的合作！</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/1df24ed2.png\" alt=\"2018全年出品人及讲师\"></p>\n</div>', '2019-07-24 15:09:49', 'Vuex', '8790', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频0.4997340419563281', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频', '2019-07-24 15:09:49', ' 技术学院');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d08ef00149', '<div class=\"content\">\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/e62aba45.png\" alt></p>\n <p>你好，2019</p>\n <p>再见，2018</p>\n <p>又到了一年辞旧迎新的时候，大家应该也和美美一样，在忙着总结回顾和展望规划吧。</p>\n <p>按老惯例，我们该献上技术年货了。今年首先出场的，是我们的技术沙龙大套餐！</p>\n <p>美团技术沙龙是由美团技术团队和美团科协主办的线下技术活动，每期沙龙邀请美团和同行公司的技术专家分享来自一线的实践经验，覆盖前端、后台、系统、数据、算法、测试、运维等技术领域。目前已在北京、上海、厦门、成都等城市成功举办了48期，吸引了超过2万名工程师报名参会。除了现场亲密交流之外，大家还在会后继续进微信群里切磋问道。</p>\n <p>我们同时也定期举办线上沙龙，有更多的朋友已经在线收听或收看过我们的直播。</p>\n <p>过去的一年里，我们一共举办了19场线下沙龙，16次线上沙龙，包括99位讲师，85个演讲，70+小时分享。除美团的几十位专家之外，还邀请了百度、蚂蚁金服、去哪儿、京东等同行。主题既有最火的AI热点——深度学习、强化学习、知识图谱，新潮技术Go、Kotlin、Flutter的落地实践，也有大规模互联网平台不可或缺的稳定性保障、高可用架构、监控体系、持续集成，还有接地气的运营系统、数据平台、配送调度的经验，更少不了CAT、mpvue、EasyReact这些火爆的开源项目……</p>\n <p>我们整理了今年所有线上线下沙龙的演讲稿和视频，分享给大家，希望能帮助大家在技术之路上继续追求卓越。</p>\n <p>还没有关注美团技术团队公众号（meituantech）的同学，赶快关注哟。</p>\n <p>现在，大家请闭眼，大餐来了～～～</p>\n <h2 id=\"美团线下沙龙\">美团线下沙龙</h2>\n <p>任意点击标题，就能直接查看视频及演讲稿</p>\n <p><strong>Tech Salon 048：<a href=\"https://tech.meituan.com/salon/#/44602\">AI在复杂业务场景中的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|何仁清 美团研究员 2018/12/22</strong></p>\n <p><a href=\"http://dpurl.cn/1aGUjwA\">《深度强化学习技术在智能调度中的应用》</a>王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jtvI8lt\">《深度学习在物流配送舆情监控中的应用》</a>李超@京东物流NLP方向资深算法工程师</p>\n <p><a href=\"http://dpurl.cn/UxQxdqg\">《美团搜索中的深度学习实践》</a>周翔@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 047：<a href=\"https://tech.meituan.com/salon/#/44452\">运营效率系统架构演进之道</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|阳纯飞 美团高级技术专家 2018/12/08</strong></p>\n <p><a href=\"http://dpurl.cn/e5FWi1r\">《面向O2O大促活动的高效运营系统实践》</a>李力@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/umMxuem\">《京东物流实时数据平台性能优化实践》</a>杨国斌@京东技术专家</p>\n <p><a href=\"http://dpurl.cn/S9p9Rct\">《外卖商家菜品运营效率提升实践》</a>罗震@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/C0DTDPI\">《外卖商户数据化运营体系建设》</a>李觊@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 046：<a href=\"https://tech.meituan.com/salon/#/44246\">AI在外卖配送的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王兴星&amp;郝井华 美团研究员 2018/11/25</strong></p>\n <p><a href=\"http://dpurl.cn/OG1VITL\">《预估模型在外卖广告的演进》</a>谢乾龙@美团外卖广告算法专家</p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《即时配送中的运筹优化技术》</a>郝井华@美团配送智能调度平台负责人</p>\n <p><a href=\"http://dpurl.cn/b2demu3\">《即时配送中的机器学习技术》</a>何仁清@美团配送AI方向负责人</p>\n <hr>\n <p><strong>Tech Salon 045：<a href=\"https://tech.meituan.com/salon/#/44241\">如何构建高性能、稳定的后端服务系统</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 |方建平 美团技术总监 2018/11/24</strong></p>\n <p><a href=\"http://dpurl.cn/h2tSH0d\">《美团度假交易稳定性建设实践》</a>韩建起@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1eEmiJa\">《美团配送智能调度系统架构演进》</a>郑伟@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/mOM70TU\">《美团稳定性保障平台Rhino》</a>占军@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/36eUWw7\">《美团外卖LBS服务实践》</a>易奎@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 044：<a href=\"https://tech.meituan.com/salon/#/42521\">千万级日活App的质量保证</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|李永刚 美团研究员 2018/09/15</strong></p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《AI语音产品测试》</a>于海生@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/EkrvqQQ\">《美团外卖客户端 UI 自动化测试实践》</a>刘健@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9wTSjRP\">《客户端QA效率工具》</a>赵晔@美团测试开发架构师</p>\n <hr>\n <p><strong>Tech Salon 043：<a href=\"https://tech.meituan.com/salon/#/42318\">美团金融千万级交易系统质量保障之路</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|赫大龙 美团高级技术专家 2018/09/01</strong></p>\n <p><a href=\"http://dpurl.cn/WBj4g1R\">《智能支付稳定性测试实战》</a>范勋伟@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/S3QC9nw\">《去哪儿网服务端自动化测试体系》</a>郑希文@去哪儿</p>\n <p><a href=\"http://dpurl.cn/bxidDmT\">《线上支付SDK质量保证体系》</a>张朋飞@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/ICnY9EY\">《质量运营演变之道》</a>符欣@美团高级开发工程师</p>\n <hr>\n <p><strong>Tech Salon 042：<a href=\"https://tech.meituan.com/salon/#/42098\">高效率前端与架构实战</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王鹤 美团高级技术专家 2018/08/26</strong></p>\n <p><a href=\"http://dpurl.cn/4zd1g7v\">《EH — 用黑科技打造全新的 Hybrid 体验》</a> 陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/atWgFPm\">《mpvue小程序开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/uBGnNe7\">《美团金融前端工程化最佳实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/C21IwKR\">《前端架构师应该做的事——架构模型与技术实践》</a>王鹤@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 041：<a href=\"https://tech.meituan.com/salon/#/41922\">企业级前端开发360°实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/08/18</strong></p>\n <p><a href=\"http://dpurl.cn/6enzQ6K\">《浅谈流量劫持与防治》</a>刘洋河@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/wJLdbeB\">《前端高可用性保障实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/WvMgJ22\">《跨容器高性能的离线化方案在美团的实践和探索》</a>龙佳文@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/6ea1W3X\">《前端遇上Go: 静态资源增量更新的新实践》</a>杨义天@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 040：<a href=\"https://tech.meituan.com/salon/#/41406\">前端遇上黑科技，打造全新界面体验与效率</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 | 冯湧 美团研发总监 2018/08/04</strong></p>\n <p><a href=\"http://dpurl.cn/dcUUsv7\">《EH——用黑科技打造的全新的 Hybrid 体验》</a>陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/omiEOIh\">《Vix——如何打造一个高效的前端组件库》</a>张胜@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/eSbf7eY\">《委以重任的Node.js——百亿级访问实践》</a>迪波威@百度资深软件工程师</p>\n <p><a href=\"http://dpurl.cn/1NLlrH7\">《构建时预渲染——网页首帧优化实践》</a>尚寒阳@美团资深研发工程师</p>\n <hr>\n <p><strong>Tech Salon 039：<a href=\"https://tech.meituan.com/salon/#/41065\">新思路打造移动端高效研发体系</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|周辉 美团资深架构师 2018/07/21</strong></p>\n <p><a href=\"http://dpurl.cn/rtXsz0X\">《Picasso在大众点评首页的应用》</a>虞惠文@美团Android开发工程师</p>\n <p><a href=\"http://dpurl.cn/gJkC96U\">《移动前后端开发解耦》</a>林晨@美团后端技术专家</p>\n <p><a href=\"http://dpurl.cn/kcEERJD\">《打造稳定、灵活、高效的运营配置平台》</a>蒋国宝@美团后端技术架构师</p>\n <p><a href=\"http://dpurl.cn/GEdFow2\">《移动持续集成实践》</a>何智聪@美团iOS技术专家</p>\n <hr>\n <p><strong>Tech Salon 038：<a href=\"https://tech.meituan.com/salon/#/40348\">旅游电商架构攻略指南</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|金孟哲 美团高级技术专家 2018/07/07</strong></p>\n <p><a href=\"http://dpurl.cn/9NA3IDI\">《旅游度假预订系统架构演进实践》</a> 金孟哲@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/pdIQztt\">《旅游度假多要素动态打包实践》</a> 王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/1mx2Mhn\">《旅游度假商品中心架构演进》</a> 徐泼@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jUc9Krm\">《直连低可信系统，实现高可用服务实践》</a> 郑旭@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 037：<a href=\"https://tech.meituan.com/salon/#/39548\">美团外卖两千万日订单背后的客户端技术架构</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|吴凯 美团高级技术专家 2018/06/23</strong></p>\n <p><a href=\"http://dpurl.cn/9VqeRQP\">《美团外卖客户端技术架构演进》</a>朱瑞利@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/b4BhI2i\">《客户端监控体系建设》</a>冯天锡@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/0WglRb7\">《客户端多端复用架构》</a>郑金光@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/BN8S6uV\">《客户端容灾能力体系》</a>李富强@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 036：<a href=\"https://tech.meituan.com/salon/#/38188\">大前端的动态化与可用性建设</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|洪磊 美团高级技术专家 2018/06/02</strong></p>\n <p><a href=\"http://dpurl.cn/4x8m29f\">《大前端高可用性建设》</a>李富强@美团资深前端工程师</p>\n <p><a href=\"http://dpurl.cn/aK72uB3\">《React fiber漫谈》</a>覃俊文@蚂蚁金服前端技术专家</p>\n <p><a href=\"http://dpurl.cn/uLlIi3q\">《小程序开发的新姿势 -mpvue 的应用和实践》</a>胡成全@美团前端技术专家</p>\n <p><a href=\"http://dpurl.cn/0n9ANpz\">《ReactNative性能优化企业级应用》</a>赵宏罡@腾讯资深前端开发工程师</p>\n <hr>\n <p><strong>Tech Salon 035：<a href=\"https://tech.meituan.com/salon/#/35673\">前端热点技术的企业级实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/04/21</strong></p>\n <p><a href=\"http://dpurl.cn/X8hmGar\">《前端遇上 Go——静态资源增量更新的新实践》</a>刘洋河@美团高级前端工程师</p>\n <p><a href=\"http://dpurl.cn/c2j4URx\">《金融扫码付 H5 迁移小程序拓荒之旅》</a>陈瑶@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/8VE6Q70\">《小程序开发的新姿势 - mpvue 开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 034：<a href=\"https://tech.meituan.com/salon/#/35161\">聊聊酒店系统高可用架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|许关飞 美团研究员 2018/04/14</strong></p>\n <p><a href=\"http://dpurl.cn/KwRRM3V\">《高可用之中间件技术》</a>吴湘@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9XzOUnT\">《分布式开源监控系统CAT在美团点评演进》</a>尤勇@美团研究员</p>\n <p><a href=\"http://dpurl.cn/3FHVwpo\">《美团旅行住宿产品中心系统高可用实战》</a>槐国涛@美团酒店CRS商品负责人</p>\n <p><a href=\"http://dpurl.cn/Ynt6aVE\">《美团旅行酒店住宿订单系统高可用实战》</a>李磊@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/2gLXCnH\">《美团旅行直连系统高可用实战》</a>秦浏杰@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 033：<a href=\"https://tech.meituan.com/salon/#/31815\">企业信息化建设和安全管理</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|邓昀泽 美团企业平台研发负责人 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/2Cpj4tO\">《美团点评内部系统构建之路》</a>邓昀泽@美团企业平台研发部负责人</p>\n <p><a href=\"http://dpurl.cn/IGFzn0f\">《企业信息防护体系建设》</a>陆平@美亚柏科企业电子数据取证事业部副总</p>\n <p><a href=\"http://dpurl.cn/BTYUxbh\">《企业如何应对安全威胁》</a>游兴旺@美团企业平台研发高级总监</p>\n <hr>\n <p><strong>Tech Salon 032：<a href=\"https://tech.meituan.com/salon/#/31816\">移动开发热点技术—动态日志、监控、Hybrid、插件化</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|方锦涛 美团高级技术专家 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/hi6x3tX\">《线上问题排查体系构建：动态日志》</a> 陈潼@美团Android资深工程师</p>\n <p><a href=\"http://dpurl.cn/BsmtuwJ\">《混合应用工程化实践》</a> 李罡@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/xXexGwG\">《Caesium iOS启动时间监控》</a> 吴君阳@美团iOS工程师</p>\n <hr>\n <p><strong>Tech Salon 031：<a href=\"https://tech.meituan.com/salon/#/31470\">线下支付千万级订单服务—前后端架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/01/27</strong></p>\n <p><a href=\"http://dpurl.cn/83yGayf\">《扫码付前端可用性保障实践》</a> 田泱@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/uQv3mVL\">《业务系统的建设之路》</a>刘运@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1HxNpDH\">《Web离线化加载》</a> 于秋@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/tbNSxRx\">《基于WTL框架的Windows开发最佳实践》</a> 钱声鹏@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 030：<a href=\"https://tech.meituan.com/salon/#/30554\">餐饮生态高可用系统实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|温华剑 美团技术专家 2018/01/13</strong></p>\n <p><a href=\"http://dpurl.cn/i40jBTG\">《从“0”开始-美团收银客户端》</a>聂龙羽@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/8qoK8Fa\">《美团餐饮生态大数据架构实践》</a>牛江浩@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/u49UVD9\">《餐饮开放平台的高可用实践》</a>朱洋波@美团技术专家</p>\n <hr>\n <h2 id=\"美团线上沙龙\">美团线上沙龙</h2>\n <p>任意点击标题，就能在线观看视频或者文章</p>\n <p><strong>On-Line Salon 33：<a href=\"https://m.lizhiweike.com/classroom/10038952\">美团大脑 智享生活</a></strong> 分享人：王仲远 美团点评高级研究员</p>\n <p><strong>On-Line Salon 32：<a href=\"https://gitbook.cn/books/5bcf24b6211d0e68b1b788f0/index.html\">基于深度学习的计算机视觉技术在无人驾驶中的应用</a></strong> 分享人：刘宇达 美团点评资深算法工程师</p>\n <p><strong>On-Line Salon 31：<a href=\"https://m.lizhiweike.com/classroom/9363553\">利用响应式来解决客户端问题</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 30：<a href=\"https://gitbook.cn/books/5b927473780fdb5e97d2a3bc/index.html\">美团针对 Redis Rehash 机制的探索和实践</a></strong> 分享人：葛春林 美团点评资深工程师</p>\n <p><strong>On-Line Salon 29：<a href=\"https://m.lizhiweike.com/classroom/8660084\">Flutter 原理与实践</a></strong> 分享人：李少杰 美团点评资深工程师</p>\n <p><strong>On-Line Salon 28：<a href=\"https://gitbook.cn/books/5b8746c7ea7bc512755e4e36/index.html\">如何基于深度学习实现图像的智能审核</a></strong> 分享人：魏晓明 美团点评高级技术专家</p>\n <p><strong>On-Line Salon 27：<a href=\"https://gitbook.cn/books/5b7e5a44a63144311b8dbf2d/index.html\">美团客户端响应式框架 EasyReact 开源</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 26：<a href=\"https://gitbook.cn/books/5b752e45e8b81c0748e349e1/index.html\">移动持续集成在大众点评的实践</a></strong> 分享人：何智聪、邢轶 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 25：Kotlin <a href=\"https://gitbook.cn/books/5b6c28169f4dd1284bf82f99/index.html\">代码检查探索与实践</a></strong> 分享人：周佳 美团点评前端开发工程师</p>\n <p><strong>On-Line Salon 24：<a href=\"https://gitbook.cn/books/5b67bceca51b8d5f8ecbcf79/index.html\">静态资源增量更新的新实践</a></strong> 分享人：刘洋河 美团点评资深工程师</p>\n <p><strong>On-Line Salon 23：<a href=\"https://gitbook.cn/books/5b5ab5721642ed2ba79b6630/index.html\">点评侧用户行为检索系统</a></strong> 分享人：朱凯 美团点评资深工程师</p>\n <p><strong>On-Line Salon 22：<a href=\"https://gitbook.cn/books/5b43fc6316959658636f059e/index.html\">深度学习在美团搜索广告排序的应用实践</a></strong> 分享人：薛欢、梁玉林、王新 美团点评资深工程师</p>\n <p><strong>On-Line Salon 21：<a href=\"https://gitbook.cn/books/5ae9bcbeb02ff82d0d1b0517/index.html\">使用 Mpvue 开发微信小程序的最佳实践</a></strong> 分享人：胡成全 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 20：<a href=\"https://gitbook.cn/books/5ad4a60daf8f2f35290f46d5/index.html\">亿级用户个性化品类推荐实战解析</a></strong> 分享人：张晓宇 美团高级工程师</p>\n <p><strong>On-Line Salon 19：<a href=\"https://gitbook.cn/books/5ac2325c9e924a1dc029c6b7/index.html\">MVVM 在美团点评酒旅业务中的实践</a></strong> 分享人：吴卓 美团点评技术专家</p>\n <p><strong>On-Line Salon 18：<a href=\"https://gitbook.cn/books/5aa6850a9c3cf94d4915f97c/index.html\">深度学习在美团点评推荐业务中实践</a></strong> 分享人：陈文石 美团点评算法专家</p>\n <p>感恩！99位出品人和讲师，70多个小时的分享，感谢他们给我们带来一线的技术实践分享，感谢他们给我们2万多小伙伴送上技术的“饕餮盛宴”。除了美团技术团队的讲师们，我们还要特别感谢来自腾讯、蚂蚁金服、百度、京东、去哪儿、美亚柏科等公司的讲师们，感谢你们的付出和努力，我们期待新的一年会有更多的合作！</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/1df24ed2.png\" alt=\"2018全年出品人及讲师\"></p>\n</div>', '2019-07-24 15:09:49', 'jQuery', '8790', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频0.3273112539772275', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频', '2019-07-24 15:09:49', ' 技术学院');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d08f63014a', '<div class=\"content\">\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/e62aba45.png\" alt></p>\n <p>你好，2019</p>\n <p>再见，2018</p>\n <p>又到了一年辞旧迎新的时候，大家应该也和美美一样，在忙着总结回顾和展望规划吧。</p>\n <p>按老惯例，我们该献上技术年货了。今年首先出场的，是我们的技术沙龙大套餐！</p>\n <p>美团技术沙龙是由美团技术团队和美团科协主办的线下技术活动，每期沙龙邀请美团和同行公司的技术专家分享来自一线的实践经验，覆盖前端、后台、系统、数据、算法、测试、运维等技术领域。目前已在北京、上海、厦门、成都等城市成功举办了48期，吸引了超过2万名工程师报名参会。除了现场亲密交流之外，大家还在会后继续进微信群里切磋问道。</p>\n <p>我们同时也定期举办线上沙龙，有更多的朋友已经在线收听或收看过我们的直播。</p>\n <p>过去的一年里，我们一共举办了19场线下沙龙，16次线上沙龙，包括99位讲师，85个演讲，70+小时分享。除美团的几十位专家之外，还邀请了百度、蚂蚁金服、去哪儿、京东等同行。主题既有最火的AI热点——深度学习、强化学习、知识图谱，新潮技术Go、Kotlin、Flutter的落地实践，也有大规模互联网平台不可或缺的稳定性保障、高可用架构、监控体系、持续集成，还有接地气的运营系统、数据平台、配送调度的经验，更少不了CAT、mpvue、EasyReact这些火爆的开源项目……</p>\n <p>我们整理了今年所有线上线下沙龙的演讲稿和视频，分享给大家，希望能帮助大家在技术之路上继续追求卓越。</p>\n <p>还没有关注美团技术团队公众号（meituantech）的同学，赶快关注哟。</p>\n <p>现在，大家请闭眼，大餐来了～～～</p>\n <h2 id=\"美团线下沙龙\">美团线下沙龙</h2>\n <p>任意点击标题，就能直接查看视频及演讲稿</p>\n <p><strong>Tech Salon 048：<a href=\"https://tech.meituan.com/salon/#/44602\">AI在复杂业务场景中的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|何仁清 美团研究员 2018/12/22</strong></p>\n <p><a href=\"http://dpurl.cn/1aGUjwA\">《深度强化学习技术在智能调度中的应用》</a>王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jtvI8lt\">《深度学习在物流配送舆情监控中的应用》</a>李超@京东物流NLP方向资深算法工程师</p>\n <p><a href=\"http://dpurl.cn/UxQxdqg\">《美团搜索中的深度学习实践》</a>周翔@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 047：<a href=\"https://tech.meituan.com/salon/#/44452\">运营效率系统架构演进之道</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|阳纯飞 美团高级技术专家 2018/12/08</strong></p>\n <p><a href=\"http://dpurl.cn/e5FWi1r\">《面向O2O大促活动的高效运营系统实践》</a>李力@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/umMxuem\">《京东物流实时数据平台性能优化实践》</a>杨国斌@京东技术专家</p>\n <p><a href=\"http://dpurl.cn/S9p9Rct\">《外卖商家菜品运营效率提升实践》</a>罗震@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/C0DTDPI\">《外卖商户数据化运营体系建设》</a>李觊@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 046：<a href=\"https://tech.meituan.com/salon/#/44246\">AI在外卖配送的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王兴星&amp;郝井华 美团研究员 2018/11/25</strong></p>\n <p><a href=\"http://dpurl.cn/OG1VITL\">《预估模型在外卖广告的演进》</a>谢乾龙@美团外卖广告算法专家</p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《即时配送中的运筹优化技术》</a>郝井华@美团配送智能调度平台负责人</p>\n <p><a href=\"http://dpurl.cn/b2demu3\">《即时配送中的机器学习技术》</a>何仁清@美团配送AI方向负责人</p>\n <hr>\n <p><strong>Tech Salon 045：<a href=\"https://tech.meituan.com/salon/#/44241\">如何构建高性能、稳定的后端服务系统</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 |方建平 美团技术总监 2018/11/24</strong></p>\n <p><a href=\"http://dpurl.cn/h2tSH0d\">《美团度假交易稳定性建设实践》</a>韩建起@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1eEmiJa\">《美团配送智能调度系统架构演进》</a>郑伟@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/mOM70TU\">《美团稳定性保障平台Rhino》</a>占军@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/36eUWw7\">《美团外卖LBS服务实践》</a>易奎@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 044：<a href=\"https://tech.meituan.com/salon/#/42521\">千万级日活App的质量保证</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|李永刚 美团研究员 2018/09/15</strong></p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《AI语音产品测试》</a>于海生@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/EkrvqQQ\">《美团外卖客户端 UI 自动化测试实践》</a>刘健@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9wTSjRP\">《客户端QA效率工具》</a>赵晔@美团测试开发架构师</p>\n <hr>\n <p><strong>Tech Salon 043：<a href=\"https://tech.meituan.com/salon/#/42318\">美团金融千万级交易系统质量保障之路</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|赫大龙 美团高级技术专家 2018/09/01</strong></p>\n <p><a href=\"http://dpurl.cn/WBj4g1R\">《智能支付稳定性测试实战》</a>范勋伟@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/S3QC9nw\">《去哪儿网服务端自动化测试体系》</a>郑希文@去哪儿</p>\n <p><a href=\"http://dpurl.cn/bxidDmT\">《线上支付SDK质量保证体系》</a>张朋飞@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/ICnY9EY\">《质量运营演变之道》</a>符欣@美团高级开发工程师</p>\n <hr>\n <p><strong>Tech Salon 042：<a href=\"https://tech.meituan.com/salon/#/42098\">高效率前端与架构实战</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王鹤 美团高级技术专家 2018/08/26</strong></p>\n <p><a href=\"http://dpurl.cn/4zd1g7v\">《EH — 用黑科技打造全新的 Hybrid 体验》</a> 陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/atWgFPm\">《mpvue小程序开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/uBGnNe7\">《美团金融前端工程化最佳实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/C21IwKR\">《前端架构师应该做的事——架构模型与技术实践》</a>王鹤@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 041：<a href=\"https://tech.meituan.com/salon/#/41922\">企业级前端开发360°实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/08/18</strong></p>\n <p><a href=\"http://dpurl.cn/6enzQ6K\">《浅谈流量劫持与防治》</a>刘洋河@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/wJLdbeB\">《前端高可用性保障实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/WvMgJ22\">《跨容器高性能的离线化方案在美团的实践和探索》</a>龙佳文@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/6ea1W3X\">《前端遇上Go: 静态资源增量更新的新实践》</a>杨义天@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 040：<a href=\"https://tech.meituan.com/salon/#/41406\">前端遇上黑科技，打造全新界面体验与效率</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 | 冯湧 美团研发总监 2018/08/04</strong></p>\n <p><a href=\"http://dpurl.cn/dcUUsv7\">《EH——用黑科技打造的全新的 Hybrid 体验》</a>陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/omiEOIh\">《Vix——如何打造一个高效的前端组件库》</a>张胜@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/eSbf7eY\">《委以重任的Node.js——百亿级访问实践》</a>迪波威@百度资深软件工程师</p>\n <p><a href=\"http://dpurl.cn/1NLlrH7\">《构建时预渲染——网页首帧优化实践》</a>尚寒阳@美团资深研发工程师</p>\n <hr>\n <p><strong>Tech Salon 039：<a href=\"https://tech.meituan.com/salon/#/41065\">新思路打造移动端高效研发体系</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|周辉 美团资深架构师 2018/07/21</strong></p>\n <p><a href=\"http://dpurl.cn/rtXsz0X\">《Picasso在大众点评首页的应用》</a>虞惠文@美团Android开发工程师</p>\n <p><a href=\"http://dpurl.cn/gJkC96U\">《移动前后端开发解耦》</a>林晨@美团后端技术专家</p>\n <p><a href=\"http://dpurl.cn/kcEERJD\">《打造稳定、灵活、高效的运营配置平台》</a>蒋国宝@美团后端技术架构师</p>\n <p><a href=\"http://dpurl.cn/GEdFow2\">《移动持续集成实践》</a>何智聪@美团iOS技术专家</p>\n <hr>\n <p><strong>Tech Salon 038：<a href=\"https://tech.meituan.com/salon/#/40348\">旅游电商架构攻略指南</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|金孟哲 美团高级技术专家 2018/07/07</strong></p>\n <p><a href=\"http://dpurl.cn/9NA3IDI\">《旅游度假预订系统架构演进实践》</a> 金孟哲@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/pdIQztt\">《旅游度假多要素动态打包实践》</a> 王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/1mx2Mhn\">《旅游度假商品中心架构演进》</a> 徐泼@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jUc9Krm\">《直连低可信系统，实现高可用服务实践》</a> 郑旭@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 037：<a href=\"https://tech.meituan.com/salon/#/39548\">美团外卖两千万日订单背后的客户端技术架构</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|吴凯 美团高级技术专家 2018/06/23</strong></p>\n <p><a href=\"http://dpurl.cn/9VqeRQP\">《美团外卖客户端技术架构演进》</a>朱瑞利@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/b4BhI2i\">《客户端监控体系建设》</a>冯天锡@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/0WglRb7\">《客户端多端复用架构》</a>郑金光@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/BN8S6uV\">《客户端容灾能力体系》</a>李富强@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 036：<a href=\"https://tech.meituan.com/salon/#/38188\">大前端的动态化与可用性建设</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|洪磊 美团高级技术专家 2018/06/02</strong></p>\n <p><a href=\"http://dpurl.cn/4x8m29f\">《大前端高可用性建设》</a>李富强@美团资深前端工程师</p>\n <p><a href=\"http://dpurl.cn/aK72uB3\">《React fiber漫谈》</a>覃俊文@蚂蚁金服前端技术专家</p>\n <p><a href=\"http://dpurl.cn/uLlIi3q\">《小程序开发的新姿势 -mpvue 的应用和实践》</a>胡成全@美团前端技术专家</p>\n <p><a href=\"http://dpurl.cn/0n9ANpz\">《ReactNative性能优化企业级应用》</a>赵宏罡@腾讯资深前端开发工程师</p>\n <hr>\n <p><strong>Tech Salon 035：<a href=\"https://tech.meituan.com/salon/#/35673\">前端热点技术的企业级实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/04/21</strong></p>\n <p><a href=\"http://dpurl.cn/X8hmGar\">《前端遇上 Go——静态资源增量更新的新实践》</a>刘洋河@美团高级前端工程师</p>\n <p><a href=\"http://dpurl.cn/c2j4URx\">《金融扫码付 H5 迁移小程序拓荒之旅》</a>陈瑶@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/8VE6Q70\">《小程序开发的新姿势 - mpvue 开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 034：<a href=\"https://tech.meituan.com/salon/#/35161\">聊聊酒店系统高可用架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|许关飞 美团研究员 2018/04/14</strong></p>\n <p><a href=\"http://dpurl.cn/KwRRM3V\">《高可用之中间件技术》</a>吴湘@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9XzOUnT\">《分布式开源监控系统CAT在美团点评演进》</a>尤勇@美团研究员</p>\n <p><a href=\"http://dpurl.cn/3FHVwpo\">《美团旅行住宿产品中心系统高可用实战》</a>槐国涛@美团酒店CRS商品负责人</p>\n <p><a href=\"http://dpurl.cn/Ynt6aVE\">《美团旅行酒店住宿订单系统高可用实战》</a>李磊@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/2gLXCnH\">《美团旅行直连系统高可用实战》</a>秦浏杰@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 033：<a href=\"https://tech.meituan.com/salon/#/31815\">企业信息化建设和安全管理</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|邓昀泽 美团企业平台研发负责人 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/2Cpj4tO\">《美团点评内部系统构建之路》</a>邓昀泽@美团企业平台研发部负责人</p>\n <p><a href=\"http://dpurl.cn/IGFzn0f\">《企业信息防护体系建设》</a>陆平@美亚柏科企业电子数据取证事业部副总</p>\n <p><a href=\"http://dpurl.cn/BTYUxbh\">《企业如何应对安全威胁》</a>游兴旺@美团企业平台研发高级总监</p>\n <hr>\n <p><strong>Tech Salon 032：<a href=\"https://tech.meituan.com/salon/#/31816\">移动开发热点技术—动态日志、监控、Hybrid、插件化</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|方锦涛 美团高级技术专家 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/hi6x3tX\">《线上问题排查体系构建：动态日志》</a> 陈潼@美团Android资深工程师</p>\n <p><a href=\"http://dpurl.cn/BsmtuwJ\">《混合应用工程化实践》</a> 李罡@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/xXexGwG\">《Caesium iOS启动时间监控》</a> 吴君阳@美团iOS工程师</p>\n <hr>\n <p><strong>Tech Salon 031：<a href=\"https://tech.meituan.com/salon/#/31470\">线下支付千万级订单服务—前后端架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/01/27</strong></p>\n <p><a href=\"http://dpurl.cn/83yGayf\">《扫码付前端可用性保障实践》</a> 田泱@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/uQv3mVL\">《业务系统的建设之路》</a>刘运@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1HxNpDH\">《Web离线化加载》</a> 于秋@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/tbNSxRx\">《基于WTL框架的Windows开发最佳实践》</a> 钱声鹏@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 030：<a href=\"https://tech.meituan.com/salon/#/30554\">餐饮生态高可用系统实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|温华剑 美团技术专家 2018/01/13</strong></p>\n <p><a href=\"http://dpurl.cn/i40jBTG\">《从“0”开始-美团收银客户端》</a>聂龙羽@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/8qoK8Fa\">《美团餐饮生态大数据架构实践》</a>牛江浩@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/u49UVD9\">《餐饮开放平台的高可用实践》</a>朱洋波@美团技术专家</p>\n <hr>\n <h2 id=\"美团线上沙龙\">美团线上沙龙</h2>\n <p>任意点击标题，就能在线观看视频或者文章</p>\n <p><strong>On-Line Salon 33：<a href=\"https://m.lizhiweike.com/classroom/10038952\">美团大脑 智享生活</a></strong> 分享人：王仲远 美团点评高级研究员</p>\n <p><strong>On-Line Salon 32：<a href=\"https://gitbook.cn/books/5bcf24b6211d0e68b1b788f0/index.html\">基于深度学习的计算机视觉技术在无人驾驶中的应用</a></strong> 分享人：刘宇达 美团点评资深算法工程师</p>\n <p><strong>On-Line Salon 31：<a href=\"https://m.lizhiweike.com/classroom/9363553\">利用响应式来解决客户端问题</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 30：<a href=\"https://gitbook.cn/books/5b927473780fdb5e97d2a3bc/index.html\">美团针对 Redis Rehash 机制的探索和实践</a></strong> 分享人：葛春林 美团点评资深工程师</p>\n <p><strong>On-Line Salon 29：<a href=\"https://m.lizhiweike.com/classroom/8660084\">Flutter 原理与实践</a></strong> 分享人：李少杰 美团点评资深工程师</p>\n <p><strong>On-Line Salon 28：<a href=\"https://gitbook.cn/books/5b8746c7ea7bc512755e4e36/index.html\">如何基于深度学习实现图像的智能审核</a></strong> 分享人：魏晓明 美团点评高级技术专家</p>\n <p><strong>On-Line Salon 27：<a href=\"https://gitbook.cn/books/5b7e5a44a63144311b8dbf2d/index.html\">美团客户端响应式框架 EasyReact 开源</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 26：<a href=\"https://gitbook.cn/books/5b752e45e8b81c0748e349e1/index.html\">移动持续集成在大众点评的实践</a></strong> 分享人：何智聪、邢轶 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 25：Kotlin <a href=\"https://gitbook.cn/books/5b6c28169f4dd1284bf82f99/index.html\">代码检查探索与实践</a></strong> 分享人：周佳 美团点评前端开发工程师</p>\n <p><strong>On-Line Salon 24：<a href=\"https://gitbook.cn/books/5b67bceca51b8d5f8ecbcf79/index.html\">静态资源增量更新的新实践</a></strong> 分享人：刘洋河 美团点评资深工程师</p>\n <p><strong>On-Line Salon 23：<a href=\"https://gitbook.cn/books/5b5ab5721642ed2ba79b6630/index.html\">点评侧用户行为检索系统</a></strong> 分享人：朱凯 美团点评资深工程师</p>\n <p><strong>On-Line Salon 22：<a href=\"https://gitbook.cn/books/5b43fc6316959658636f059e/index.html\">深度学习在美团搜索广告排序的应用实践</a></strong> 分享人：薛欢、梁玉林、王新 美团点评资深工程师</p>\n <p><strong>On-Line Salon 21：<a href=\"https://gitbook.cn/books/5ae9bcbeb02ff82d0d1b0517/index.html\">使用 Mpvue 开发微信小程序的最佳实践</a></strong> 分享人：胡成全 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 20：<a href=\"https://gitbook.cn/books/5ad4a60daf8f2f35290f46d5/index.html\">亿级用户个性化品类推荐实战解析</a></strong> 分享人：张晓宇 美团高级工程师</p>\n <p><strong>On-Line Salon 19：<a href=\"https://gitbook.cn/books/5ac2325c9e924a1dc029c6b7/index.html\">MVVM 在美团点评酒旅业务中的实践</a></strong> 分享人：吴卓 美团点评技术专家</p>\n <p><strong>On-Line Salon 18：<a href=\"https://gitbook.cn/books/5aa6850a9c3cf94d4915f97c/index.html\">深度学习在美团点评推荐业务中实践</a></strong> 分享人：陈文石 美团点评算法专家</p>\n <p>感恩！99位出品人和讲师，70多个小时的分享，感谢他们给我们带来一线的技术实践分享，感谢他们给我们2万多小伙伴送上技术的“饕餮盛宴”。除了美团技术团队的讲师们，我们还要特别感谢来自腾讯、蚂蚁金服、百度、京东、去哪儿、美亚柏科等公司的讲师们，感谢你们的付出和努力，我们期待新的一年会有更多的合作！</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/1df24ed2.png\" alt=\"2018全年出品人及讲师\"></p>\n</div>', '2019-07-24 15:09:49', 'JavaScript', '8790', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频0.811968890974539', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频', '2019-07-24 15:09:49', ' 技术学院');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d08fbb014b', '<div class=\"content\">\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/e62aba45.png\" alt></p>\n <p>你好，2019</p>\n <p>再见，2018</p>\n <p>又到了一年辞旧迎新的时候，大家应该也和美美一样，在忙着总结回顾和展望规划吧。</p>\n <p>按老惯例，我们该献上技术年货了。今年首先出场的，是我们的技术沙龙大套餐！</p>\n <p>美团技术沙龙是由美团技术团队和美团科协主办的线下技术活动，每期沙龙邀请美团和同行公司的技术专家分享来自一线的实践经验，覆盖前端、后台、系统、数据、算法、测试、运维等技术领域。目前已在北京、上海、厦门、成都等城市成功举办了48期，吸引了超过2万名工程师报名参会。除了现场亲密交流之外，大家还在会后继续进微信群里切磋问道。</p>\n <p>我们同时也定期举办线上沙龙，有更多的朋友已经在线收听或收看过我们的直播。</p>\n <p>过去的一年里，我们一共举办了19场线下沙龙，16次线上沙龙，包括99位讲师，85个演讲，70+小时分享。除美团的几十位专家之外，还邀请了百度、蚂蚁金服、去哪儿、京东等同行。主题既有最火的AI热点——深度学习、强化学习、知识图谱，新潮技术Go、Kotlin、Flutter的落地实践，也有大规模互联网平台不可或缺的稳定性保障、高可用架构、监控体系、持续集成，还有接地气的运营系统、数据平台、配送调度的经验，更少不了CAT、mpvue、EasyReact这些火爆的开源项目……</p>\n <p>我们整理了今年所有线上线下沙龙的演讲稿和视频，分享给大家，希望能帮助大家在技术之路上继续追求卓越。</p>\n <p>还没有关注美团技术团队公众号（meituantech）的同学，赶快关注哟。</p>\n <p>现在，大家请闭眼，大餐来了～～～</p>\n <h2 id=\"美团线下沙龙\">美团线下沙龙</h2>\n <p>任意点击标题，就能直接查看视频及演讲稿</p>\n <p><strong>Tech Salon 048：<a href=\"https://tech.meituan.com/salon/#/44602\">AI在复杂业务场景中的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|何仁清 美团研究员 2018/12/22</strong></p>\n <p><a href=\"http://dpurl.cn/1aGUjwA\">《深度强化学习技术在智能调度中的应用》</a>王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jtvI8lt\">《深度学习在物流配送舆情监控中的应用》</a>李超@京东物流NLP方向资深算法工程师</p>\n <p><a href=\"http://dpurl.cn/UxQxdqg\">《美团搜索中的深度学习实践》</a>周翔@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 047：<a href=\"https://tech.meituan.com/salon/#/44452\">运营效率系统架构演进之道</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|阳纯飞 美团高级技术专家 2018/12/08</strong></p>\n <p><a href=\"http://dpurl.cn/e5FWi1r\">《面向O2O大促活动的高效运营系统实践》</a>李力@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/umMxuem\">《京东物流实时数据平台性能优化实践》</a>杨国斌@京东技术专家</p>\n <p><a href=\"http://dpurl.cn/S9p9Rct\">《外卖商家菜品运营效率提升实践》</a>罗震@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/C0DTDPI\">《外卖商户数据化运营体系建设》</a>李觊@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 046：<a href=\"https://tech.meituan.com/salon/#/44246\">AI在外卖配送的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王兴星&amp;郝井华 美团研究员 2018/11/25</strong></p>\n <p><a href=\"http://dpurl.cn/OG1VITL\">《预估模型在外卖广告的演进》</a>谢乾龙@美团外卖广告算法专家</p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《即时配送中的运筹优化技术》</a>郝井华@美团配送智能调度平台负责人</p>\n <p><a href=\"http://dpurl.cn/b2demu3\">《即时配送中的机器学习技术》</a>何仁清@美团配送AI方向负责人</p>\n <hr>\n <p><strong>Tech Salon 045：<a href=\"https://tech.meituan.com/salon/#/44241\">如何构建高性能、稳定的后端服务系统</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 |方建平 美团技术总监 2018/11/24</strong></p>\n <p><a href=\"http://dpurl.cn/h2tSH0d\">《美团度假交易稳定性建设实践》</a>韩建起@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1eEmiJa\">《美团配送智能调度系统架构演进》</a>郑伟@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/mOM70TU\">《美团稳定性保障平台Rhino》</a>占军@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/36eUWw7\">《美团外卖LBS服务实践》</a>易奎@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 044：<a href=\"https://tech.meituan.com/salon/#/42521\">千万级日活App的质量保证</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|李永刚 美团研究员 2018/09/15</strong></p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《AI语音产品测试》</a>于海生@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/EkrvqQQ\">《美团外卖客户端 UI 自动化测试实践》</a>刘健@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9wTSjRP\">《客户端QA效率工具》</a>赵晔@美团测试开发架构师</p>\n <hr>\n <p><strong>Tech Salon 043：<a href=\"https://tech.meituan.com/salon/#/42318\">美团金融千万级交易系统质量保障之路</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|赫大龙 美团高级技术专家 2018/09/01</strong></p>\n <p><a href=\"http://dpurl.cn/WBj4g1R\">《智能支付稳定性测试实战》</a>范勋伟@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/S3QC9nw\">《去哪儿网服务端自动化测试体系》</a>郑希文@去哪儿</p>\n <p><a href=\"http://dpurl.cn/bxidDmT\">《线上支付SDK质量保证体系》</a>张朋飞@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/ICnY9EY\">《质量运营演变之道》</a>符欣@美团高级开发工程师</p>\n <hr>\n <p><strong>Tech Salon 042：<a href=\"https://tech.meituan.com/salon/#/42098\">高效率前端与架构实战</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王鹤 美团高级技术专家 2018/08/26</strong></p>\n <p><a href=\"http://dpurl.cn/4zd1g7v\">《EH — 用黑科技打造全新的 Hybrid 体验》</a> 陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/atWgFPm\">《mpvue小程序开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/uBGnNe7\">《美团金融前端工程化最佳实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/C21IwKR\">《前端架构师应该做的事——架构模型与技术实践》</a>王鹤@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 041：<a href=\"https://tech.meituan.com/salon/#/41922\">企业级前端开发360°实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/08/18</strong></p>\n <p><a href=\"http://dpurl.cn/6enzQ6K\">《浅谈流量劫持与防治》</a>刘洋河@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/wJLdbeB\">《前端高可用性保障实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/WvMgJ22\">《跨容器高性能的离线化方案在美团的实践和探索》</a>龙佳文@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/6ea1W3X\">《前端遇上Go: 静态资源增量更新的新实践》</a>杨义天@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 040：<a href=\"https://tech.meituan.com/salon/#/41406\">前端遇上黑科技，打造全新界面体验与效率</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 | 冯湧 美团研发总监 2018/08/04</strong></p>\n <p><a href=\"http://dpurl.cn/dcUUsv7\">《EH——用黑科技打造的全新的 Hybrid 体验》</a>陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/omiEOIh\">《Vix——如何打造一个高效的前端组件库》</a>张胜@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/eSbf7eY\">《委以重任的Node.js——百亿级访问实践》</a>迪波威@百度资深软件工程师</p>\n <p><a href=\"http://dpurl.cn/1NLlrH7\">《构建时预渲染——网页首帧优化实践》</a>尚寒阳@美团资深研发工程师</p>\n <hr>\n <p><strong>Tech Salon 039：<a href=\"https://tech.meituan.com/salon/#/41065\">新思路打造移动端高效研发体系</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|周辉 美团资深架构师 2018/07/21</strong></p>\n <p><a href=\"http://dpurl.cn/rtXsz0X\">《Picasso在大众点评首页的应用》</a>虞惠文@美团Android开发工程师</p>\n <p><a href=\"http://dpurl.cn/gJkC96U\">《移动前后端开发解耦》</a>林晨@美团后端技术专家</p>\n <p><a href=\"http://dpurl.cn/kcEERJD\">《打造稳定、灵活、高效的运营配置平台》</a>蒋国宝@美团后端技术架构师</p>\n <p><a href=\"http://dpurl.cn/GEdFow2\">《移动持续集成实践》</a>何智聪@美团iOS技术专家</p>\n <hr>\n <p><strong>Tech Salon 038：<a href=\"https://tech.meituan.com/salon/#/40348\">旅游电商架构攻略指南</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|金孟哲 美团高级技术专家 2018/07/07</strong></p>\n <p><a href=\"http://dpurl.cn/9NA3IDI\">《旅游度假预订系统架构演进实践》</a> 金孟哲@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/pdIQztt\">《旅游度假多要素动态打包实践》</a> 王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/1mx2Mhn\">《旅游度假商品中心架构演进》</a> 徐泼@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jUc9Krm\">《直连低可信系统，实现高可用服务实践》</a> 郑旭@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 037：<a href=\"https://tech.meituan.com/salon/#/39548\">美团外卖两千万日订单背后的客户端技术架构</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|吴凯 美团高级技术专家 2018/06/23</strong></p>\n <p><a href=\"http://dpurl.cn/9VqeRQP\">《美团外卖客户端技术架构演进》</a>朱瑞利@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/b4BhI2i\">《客户端监控体系建设》</a>冯天锡@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/0WglRb7\">《客户端多端复用架构》</a>郑金光@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/BN8S6uV\">《客户端容灾能力体系》</a>李富强@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 036：<a href=\"https://tech.meituan.com/salon/#/38188\">大前端的动态化与可用性建设</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|洪磊 美团高级技术专家 2018/06/02</strong></p>\n <p><a href=\"http://dpurl.cn/4x8m29f\">《大前端高可用性建设》</a>李富强@美团资深前端工程师</p>\n <p><a href=\"http://dpurl.cn/aK72uB3\">《React fiber漫谈》</a>覃俊文@蚂蚁金服前端技术专家</p>\n <p><a href=\"http://dpurl.cn/uLlIi3q\">《小程序开发的新姿势 -mpvue 的应用和实践》</a>胡成全@美团前端技术专家</p>\n <p><a href=\"http://dpurl.cn/0n9ANpz\">《ReactNative性能优化企业级应用》</a>赵宏罡@腾讯资深前端开发工程师</p>\n <hr>\n <p><strong>Tech Salon 035：<a href=\"https://tech.meituan.com/salon/#/35673\">前端热点技术的企业级实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/04/21</strong></p>\n <p><a href=\"http://dpurl.cn/X8hmGar\">《前端遇上 Go——静态资源增量更新的新实践》</a>刘洋河@美团高级前端工程师</p>\n <p><a href=\"http://dpurl.cn/c2j4URx\">《金融扫码付 H5 迁移小程序拓荒之旅》</a>陈瑶@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/8VE6Q70\">《小程序开发的新姿势 - mpvue 开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 034：<a href=\"https://tech.meituan.com/salon/#/35161\">聊聊酒店系统高可用架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|许关飞 美团研究员 2018/04/14</strong></p>\n <p><a href=\"http://dpurl.cn/KwRRM3V\">《高可用之中间件技术》</a>吴湘@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9XzOUnT\">《分布式开源监控系统CAT在美团点评演进》</a>尤勇@美团研究员</p>\n <p><a href=\"http://dpurl.cn/3FHVwpo\">《美团旅行住宿产品中心系统高可用实战》</a>槐国涛@美团酒店CRS商品负责人</p>\n <p><a href=\"http://dpurl.cn/Ynt6aVE\">《美团旅行酒店住宿订单系统高可用实战》</a>李磊@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/2gLXCnH\">《美团旅行直连系统高可用实战》</a>秦浏杰@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 033：<a href=\"https://tech.meituan.com/salon/#/31815\">企业信息化建设和安全管理</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|邓昀泽 美团企业平台研发负责人 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/2Cpj4tO\">《美团点评内部系统构建之路》</a>邓昀泽@美团企业平台研发部负责人</p>\n <p><a href=\"http://dpurl.cn/IGFzn0f\">《企业信息防护体系建设》</a>陆平@美亚柏科企业电子数据取证事业部副总</p>\n <p><a href=\"http://dpurl.cn/BTYUxbh\">《企业如何应对安全威胁》</a>游兴旺@美团企业平台研发高级总监</p>\n <hr>\n <p><strong>Tech Salon 032：<a href=\"https://tech.meituan.com/salon/#/31816\">移动开发热点技术—动态日志、监控、Hybrid、插件化</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|方锦涛 美团高级技术专家 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/hi6x3tX\">《线上问题排查体系构建：动态日志》</a> 陈潼@美团Android资深工程师</p>\n <p><a href=\"http://dpurl.cn/BsmtuwJ\">《混合应用工程化实践》</a> 李罡@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/xXexGwG\">《Caesium iOS启动时间监控》</a> 吴君阳@美团iOS工程师</p>\n <hr>\n <p><strong>Tech Salon 031：<a href=\"https://tech.meituan.com/salon/#/31470\">线下支付千万级订单服务—前后端架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/01/27</strong></p>\n <p><a href=\"http://dpurl.cn/83yGayf\">《扫码付前端可用性保障实践》</a> 田泱@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/uQv3mVL\">《业务系统的建设之路》</a>刘运@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1HxNpDH\">《Web离线化加载》</a> 于秋@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/tbNSxRx\">《基于WTL框架的Windows开发最佳实践》</a> 钱声鹏@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 030：<a href=\"https://tech.meituan.com/salon/#/30554\">餐饮生态高可用系统实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|温华剑 美团技术专家 2018/01/13</strong></p>\n <p><a href=\"http://dpurl.cn/i40jBTG\">《从“0”开始-美团收银客户端》</a>聂龙羽@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/8qoK8Fa\">《美团餐饮生态大数据架构实践》</a>牛江浩@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/u49UVD9\">《餐饮开放平台的高可用实践》</a>朱洋波@美团技术专家</p>\n <hr>\n <h2 id=\"美团线上沙龙\">美团线上沙龙</h2>\n <p>任意点击标题，就能在线观看视频或者文章</p>\n <p><strong>On-Line Salon 33：<a href=\"https://m.lizhiweike.com/classroom/10038952\">美团大脑 智享生活</a></strong> 分享人：王仲远 美团点评高级研究员</p>\n <p><strong>On-Line Salon 32：<a href=\"https://gitbook.cn/books/5bcf24b6211d0e68b1b788f0/index.html\">基于深度学习的计算机视觉技术在无人驾驶中的应用</a></strong> 分享人：刘宇达 美团点评资深算法工程师</p>\n <p><strong>On-Line Salon 31：<a href=\"https://m.lizhiweike.com/classroom/9363553\">利用响应式来解决客户端问题</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 30：<a href=\"https://gitbook.cn/books/5b927473780fdb5e97d2a3bc/index.html\">美团针对 Redis Rehash 机制的探索和实践</a></strong> 分享人：葛春林 美团点评资深工程师</p>\n <p><strong>On-Line Salon 29：<a href=\"https://m.lizhiweike.com/classroom/8660084\">Flutter 原理与实践</a></strong> 分享人：李少杰 美团点评资深工程师</p>\n <p><strong>On-Line Salon 28：<a href=\"https://gitbook.cn/books/5b8746c7ea7bc512755e4e36/index.html\">如何基于深度学习实现图像的智能审核</a></strong> 分享人：魏晓明 美团点评高级技术专家</p>\n <p><strong>On-Line Salon 27：<a href=\"https://gitbook.cn/books/5b7e5a44a63144311b8dbf2d/index.html\">美团客户端响应式框架 EasyReact 开源</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 26：<a href=\"https://gitbook.cn/books/5b752e45e8b81c0748e349e1/index.html\">移动持续集成在大众点评的实践</a></strong> 分享人：何智聪、邢轶 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 25：Kotlin <a href=\"https://gitbook.cn/books/5b6c28169f4dd1284bf82f99/index.html\">代码检查探索与实践</a></strong> 分享人：周佳 美团点评前端开发工程师</p>\n <p><strong>On-Line Salon 24：<a href=\"https://gitbook.cn/books/5b67bceca51b8d5f8ecbcf79/index.html\">静态资源增量更新的新实践</a></strong> 分享人：刘洋河 美团点评资深工程师</p>\n <p><strong>On-Line Salon 23：<a href=\"https://gitbook.cn/books/5b5ab5721642ed2ba79b6630/index.html\">点评侧用户行为检索系统</a></strong> 分享人：朱凯 美团点评资深工程师</p>\n <p><strong>On-Line Salon 22：<a href=\"https://gitbook.cn/books/5b43fc6316959658636f059e/index.html\">深度学习在美团搜索广告排序的应用实践</a></strong> 分享人：薛欢、梁玉林、王新 美团点评资深工程师</p>\n <p><strong>On-Line Salon 21：<a href=\"https://gitbook.cn/books/5ae9bcbeb02ff82d0d1b0517/index.html\">使用 Mpvue 开发微信小程序的最佳实践</a></strong> 分享人：胡成全 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 20：<a href=\"https://gitbook.cn/books/5ad4a60daf8f2f35290f46d5/index.html\">亿级用户个性化品类推荐实战解析</a></strong> 分享人：张晓宇 美团高级工程师</p>\n <p><strong>On-Line Salon 19：<a href=\"https://gitbook.cn/books/5ac2325c9e924a1dc029c6b7/index.html\">MVVM 在美团点评酒旅业务中的实践</a></strong> 分享人：吴卓 美团点评技术专家</p>\n <p><strong>On-Line Salon 18：<a href=\"https://gitbook.cn/books/5aa6850a9c3cf94d4915f97c/index.html\">深度学习在美团点评推荐业务中实践</a></strong> 分享人：陈文石 美团点评算法专家</p>\n <p>感恩！99位出品人和讲师，70多个小时的分享，感谢他们给我们带来一线的技术实践分享，感谢他们给我们2万多小伙伴送上技术的“饕餮盛宴”。除了美团技术团队的讲师们，我们还要特别感谢来自腾讯、蚂蚁金服、百度、京东、去哪儿、美亚柏科等公司的讲师们，感谢你们的付出和努力，我们期待新的一年会有更多的合作！</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/1df24ed2.png\" alt=\"2018全年出品人及讲师\"></p>\n</div>', '2019-07-24 15:09:49', 'Java', '8790', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频0.8126320932593025', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频', '2019-07-24 15:09:49', ' 技术学院');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d0903d014c', '<div class=\"content\">\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/e62aba45.png\" alt></p>\n <p>你好，2019</p>\n <p>再见，2018</p>\n <p>又到了一年辞旧迎新的时候，大家应该也和美美一样，在忙着总结回顾和展望规划吧。</p>\n <p>按老惯例，我们该献上技术年货了。今年首先出场的，是我们的技术沙龙大套餐！</p>\n <p>美团技术沙龙是由美团技术团队和美团科协主办的线下技术活动，每期沙龙邀请美团和同行公司的技术专家分享来自一线的实践经验，覆盖前端、后台、系统、数据、算法、测试、运维等技术领域。目前已在北京、上海、厦门、成都等城市成功举办了48期，吸引了超过2万名工程师报名参会。除了现场亲密交流之外，大家还在会后继续进微信群里切磋问道。</p>\n <p>我们同时也定期举办线上沙龙，有更多的朋友已经在线收听或收看过我们的直播。</p>\n <p>过去的一年里，我们一共举办了19场线下沙龙，16次线上沙龙，包括99位讲师，85个演讲，70+小时分享。除美团的几十位专家之外，还邀请了百度、蚂蚁金服、去哪儿、京东等同行。主题既有最火的AI热点——深度学习、强化学习、知识图谱，新潮技术Go、Kotlin、Flutter的落地实践，也有大规模互联网平台不可或缺的稳定性保障、高可用架构、监控体系、持续集成，还有接地气的运营系统、数据平台、配送调度的经验，更少不了CAT、mpvue、EasyReact这些火爆的开源项目……</p>\n <p>我们整理了今年所有线上线下沙龙的演讲稿和视频，分享给大家，希望能帮助大家在技术之路上继续追求卓越。</p>\n <p>还没有关注美团技术团队公众号（meituantech）的同学，赶快关注哟。</p>\n <p>现在，大家请闭眼，大餐来了～～～</p>\n <h2 id=\"美团线下沙龙\">美团线下沙龙</h2>\n <p>任意点击标题，就能直接查看视频及演讲稿</p>\n <p><strong>Tech Salon 048：<a href=\"https://tech.meituan.com/salon/#/44602\">AI在复杂业务场景中的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|何仁清 美团研究员 2018/12/22</strong></p>\n <p><a href=\"http://dpurl.cn/1aGUjwA\">《深度强化学习技术在智能调度中的应用》</a>王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jtvI8lt\">《深度学习在物流配送舆情监控中的应用》</a>李超@京东物流NLP方向资深算法工程师</p>\n <p><a href=\"http://dpurl.cn/UxQxdqg\">《美团搜索中的深度学习实践》</a>周翔@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 047：<a href=\"https://tech.meituan.com/salon/#/44452\">运营效率系统架构演进之道</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|阳纯飞 美团高级技术专家 2018/12/08</strong></p>\n <p><a href=\"http://dpurl.cn/e5FWi1r\">《面向O2O大促活动的高效运营系统实践》</a>李力@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/umMxuem\">《京东物流实时数据平台性能优化实践》</a>杨国斌@京东技术专家</p>\n <p><a href=\"http://dpurl.cn/S9p9Rct\">《外卖商家菜品运营效率提升实践》</a>罗震@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/C0DTDPI\">《外卖商户数据化运营体系建设》</a>李觊@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 046：<a href=\"https://tech.meituan.com/salon/#/44246\">AI在外卖配送的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王兴星&amp;郝井华 美团研究员 2018/11/25</strong></p>\n <p><a href=\"http://dpurl.cn/OG1VITL\">《预估模型在外卖广告的演进》</a>谢乾龙@美团外卖广告算法专家</p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《即时配送中的运筹优化技术》</a>郝井华@美团配送智能调度平台负责人</p>\n <p><a href=\"http://dpurl.cn/b2demu3\">《即时配送中的机器学习技术》</a>何仁清@美团配送AI方向负责人</p>\n <hr>\n <p><strong>Tech Salon 045：<a href=\"https://tech.meituan.com/salon/#/44241\">如何构建高性能、稳定的后端服务系统</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 |方建平 美团技术总监 2018/11/24</strong></p>\n <p><a href=\"http://dpurl.cn/h2tSH0d\">《美团度假交易稳定性建设实践》</a>韩建起@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1eEmiJa\">《美团配送智能调度系统架构演进》</a>郑伟@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/mOM70TU\">《美团稳定性保障平台Rhino》</a>占军@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/36eUWw7\">《美团外卖LBS服务实践》</a>易奎@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 044：<a href=\"https://tech.meituan.com/salon/#/42521\">千万级日活App的质量保证</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|李永刚 美团研究员 2018/09/15</strong></p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《AI语音产品测试》</a>于海生@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/EkrvqQQ\">《美团外卖客户端 UI 自动化测试实践》</a>刘健@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9wTSjRP\">《客户端QA效率工具》</a>赵晔@美团测试开发架构师</p>\n <hr>\n <p><strong>Tech Salon 043：<a href=\"https://tech.meituan.com/salon/#/42318\">美团金融千万级交易系统质量保障之路</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|赫大龙 美团高级技术专家 2018/09/01</strong></p>\n <p><a href=\"http://dpurl.cn/WBj4g1R\">《智能支付稳定性测试实战》</a>范勋伟@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/S3QC9nw\">《去哪儿网服务端自动化测试体系》</a>郑希文@去哪儿</p>\n <p><a href=\"http://dpurl.cn/bxidDmT\">《线上支付SDK质量保证体系》</a>张朋飞@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/ICnY9EY\">《质量运营演变之道》</a>符欣@美团高级开发工程师</p>\n <hr>\n <p><strong>Tech Salon 042：<a href=\"https://tech.meituan.com/salon/#/42098\">高效率前端与架构实战</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王鹤 美团高级技术专家 2018/08/26</strong></p>\n <p><a href=\"http://dpurl.cn/4zd1g7v\">《EH — 用黑科技打造全新的 Hybrid 体验》</a> 陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/atWgFPm\">《mpvue小程序开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/uBGnNe7\">《美团金融前端工程化最佳实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/C21IwKR\">《前端架构师应该做的事——架构模型与技术实践》</a>王鹤@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 041：<a href=\"https://tech.meituan.com/salon/#/41922\">企业级前端开发360°实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/08/18</strong></p>\n <p><a href=\"http://dpurl.cn/6enzQ6K\">《浅谈流量劫持与防治》</a>刘洋河@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/wJLdbeB\">《前端高可用性保障实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/WvMgJ22\">《跨容器高性能的离线化方案在美团的实践和探索》</a>龙佳文@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/6ea1W3X\">《前端遇上Go: 静态资源增量更新的新实践》</a>杨义天@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 040：<a href=\"https://tech.meituan.com/salon/#/41406\">前端遇上黑科技，打造全新界面体验与效率</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 | 冯湧 美团研发总监 2018/08/04</strong></p>\n <p><a href=\"http://dpurl.cn/dcUUsv7\">《EH——用黑科技打造的全新的 Hybrid 体验》</a>陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/omiEOIh\">《Vix——如何打造一个高效的前端组件库》</a>张胜@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/eSbf7eY\">《委以重任的Node.js——百亿级访问实践》</a>迪波威@百度资深软件工程师</p>\n <p><a href=\"http://dpurl.cn/1NLlrH7\">《构建时预渲染——网页首帧优化实践》</a>尚寒阳@美团资深研发工程师</p>\n <hr>\n <p><strong>Tech Salon 039：<a href=\"https://tech.meituan.com/salon/#/41065\">新思路打造移动端高效研发体系</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|周辉 美团资深架构师 2018/07/21</strong></p>\n <p><a href=\"http://dpurl.cn/rtXsz0X\">《Picasso在大众点评首页的应用》</a>虞惠文@美团Android开发工程师</p>\n <p><a href=\"http://dpurl.cn/gJkC96U\">《移动前后端开发解耦》</a>林晨@美团后端技术专家</p>\n <p><a href=\"http://dpurl.cn/kcEERJD\">《打造稳定、灵活、高效的运营配置平台》</a>蒋国宝@美团后端技术架构师</p>\n <p><a href=\"http://dpurl.cn/GEdFow2\">《移动持续集成实践》</a>何智聪@美团iOS技术专家</p>\n <hr>\n <p><strong>Tech Salon 038：<a href=\"https://tech.meituan.com/salon/#/40348\">旅游电商架构攻略指南</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|金孟哲 美团高级技术专家 2018/07/07</strong></p>\n <p><a href=\"http://dpurl.cn/9NA3IDI\">《旅游度假预订系统架构演进实践》</a> 金孟哲@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/pdIQztt\">《旅游度假多要素动态打包实践》</a> 王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/1mx2Mhn\">《旅游度假商品中心架构演进》</a> 徐泼@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jUc9Krm\">《直连低可信系统，实现高可用服务实践》</a> 郑旭@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 037：<a href=\"https://tech.meituan.com/salon/#/39548\">美团外卖两千万日订单背后的客户端技术架构</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|吴凯 美团高级技术专家 2018/06/23</strong></p>\n <p><a href=\"http://dpurl.cn/9VqeRQP\">《美团外卖客户端技术架构演进》</a>朱瑞利@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/b4BhI2i\">《客户端监控体系建设》</a>冯天锡@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/0WglRb7\">《客户端多端复用架构》</a>郑金光@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/BN8S6uV\">《客户端容灾能力体系》</a>李富强@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 036：<a href=\"https://tech.meituan.com/salon/#/38188\">大前端的动态化与可用性建设</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|洪磊 美团高级技术专家 2018/06/02</strong></p>\n <p><a href=\"http://dpurl.cn/4x8m29f\">《大前端高可用性建设》</a>李富强@美团资深前端工程师</p>\n <p><a href=\"http://dpurl.cn/aK72uB3\">《React fiber漫谈》</a>覃俊文@蚂蚁金服前端技术专家</p>\n <p><a href=\"http://dpurl.cn/uLlIi3q\">《小程序开发的新姿势 -mpvue 的应用和实践》</a>胡成全@美团前端技术专家</p>\n <p><a href=\"http://dpurl.cn/0n9ANpz\">《ReactNative性能优化企业级应用》</a>赵宏罡@腾讯资深前端开发工程师</p>\n <hr>\n <p><strong>Tech Salon 035：<a href=\"https://tech.meituan.com/salon/#/35673\">前端热点技术的企业级实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/04/21</strong></p>\n <p><a href=\"http://dpurl.cn/X8hmGar\">《前端遇上 Go——静态资源增量更新的新实践》</a>刘洋河@美团高级前端工程师</p>\n <p><a href=\"http://dpurl.cn/c2j4URx\">《金融扫码付 H5 迁移小程序拓荒之旅》</a>陈瑶@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/8VE6Q70\">《小程序开发的新姿势 - mpvue 开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 034：<a href=\"https://tech.meituan.com/salon/#/35161\">聊聊酒店系统高可用架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|许关飞 美团研究员 2018/04/14</strong></p>\n <p><a href=\"http://dpurl.cn/KwRRM3V\">《高可用之中间件技术》</a>吴湘@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9XzOUnT\">《分布式开源监控系统CAT在美团点评演进》</a>尤勇@美团研究员</p>\n <p><a href=\"http://dpurl.cn/3FHVwpo\">《美团旅行住宿产品中心系统高可用实战》</a>槐国涛@美团酒店CRS商品负责人</p>\n <p><a href=\"http://dpurl.cn/Ynt6aVE\">《美团旅行酒店住宿订单系统高可用实战》</a>李磊@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/2gLXCnH\">《美团旅行直连系统高可用实战》</a>秦浏杰@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 033：<a href=\"https://tech.meituan.com/salon/#/31815\">企业信息化建设和安全管理</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|邓昀泽 美团企业平台研发负责人 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/2Cpj4tO\">《美团点评内部系统构建之路》</a>邓昀泽@美团企业平台研发部负责人</p>\n <p><a href=\"http://dpurl.cn/IGFzn0f\">《企业信息防护体系建设》</a>陆平@美亚柏科企业电子数据取证事业部副总</p>\n <p><a href=\"http://dpurl.cn/BTYUxbh\">《企业如何应对安全威胁》</a>游兴旺@美团企业平台研发高级总监</p>\n <hr>\n <p><strong>Tech Salon 032：<a href=\"https://tech.meituan.com/salon/#/31816\">移动开发热点技术—动态日志、监控、Hybrid、插件化</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|方锦涛 美团高级技术专家 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/hi6x3tX\">《线上问题排查体系构建：动态日志》</a> 陈潼@美团Android资深工程师</p>\n <p><a href=\"http://dpurl.cn/BsmtuwJ\">《混合应用工程化实践》</a> 李罡@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/xXexGwG\">《Caesium iOS启动时间监控》</a> 吴君阳@美团iOS工程师</p>\n <hr>\n <p><strong>Tech Salon 031：<a href=\"https://tech.meituan.com/salon/#/31470\">线下支付千万级订单服务—前后端架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/01/27</strong></p>\n <p><a href=\"http://dpurl.cn/83yGayf\">《扫码付前端可用性保障实践》</a> 田泱@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/uQv3mVL\">《业务系统的建设之路》</a>刘运@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1HxNpDH\">《Web离线化加载》</a> 于秋@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/tbNSxRx\">《基于WTL框架的Windows开发最佳实践》</a> 钱声鹏@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 030：<a href=\"https://tech.meituan.com/salon/#/30554\">餐饮生态高可用系统实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|温华剑 美团技术专家 2018/01/13</strong></p>\n <p><a href=\"http://dpurl.cn/i40jBTG\">《从“0”开始-美团收银客户端》</a>聂龙羽@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/8qoK8Fa\">《美团餐饮生态大数据架构实践》</a>牛江浩@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/u49UVD9\">《餐饮开放平台的高可用实践》</a>朱洋波@美团技术专家</p>\n <hr>\n <h2 id=\"美团线上沙龙\">美团线上沙龙</h2>\n <p>任意点击标题，就能在线观看视频或者文章</p>\n <p><strong>On-Line Salon 33：<a href=\"https://m.lizhiweike.com/classroom/10038952\">美团大脑 智享生活</a></strong> 分享人：王仲远 美团点评高级研究员</p>\n <p><strong>On-Line Salon 32：<a href=\"https://gitbook.cn/books/5bcf24b6211d0e68b1b788f0/index.html\">基于深度学习的计算机视觉技术在无人驾驶中的应用</a></strong> 分享人：刘宇达 美团点评资深算法工程师</p>\n <p><strong>On-Line Salon 31：<a href=\"https://m.lizhiweike.com/classroom/9363553\">利用响应式来解决客户端问题</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 30：<a href=\"https://gitbook.cn/books/5b927473780fdb5e97d2a3bc/index.html\">美团针对 Redis Rehash 机制的探索和实践</a></strong> 分享人：葛春林 美团点评资深工程师</p>\n <p><strong>On-Line Salon 29：<a href=\"https://m.lizhiweike.com/classroom/8660084\">Flutter 原理与实践</a></strong> 分享人：李少杰 美团点评资深工程师</p>\n <p><strong>On-Line Salon 28：<a href=\"https://gitbook.cn/books/5b8746c7ea7bc512755e4e36/index.html\">如何基于深度学习实现图像的智能审核</a></strong> 分享人：魏晓明 美团点评高级技术专家</p>\n <p><strong>On-Line Salon 27：<a href=\"https://gitbook.cn/books/5b7e5a44a63144311b8dbf2d/index.html\">美团客户端响应式框架 EasyReact 开源</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 26：<a href=\"https://gitbook.cn/books/5b752e45e8b81c0748e349e1/index.html\">移动持续集成在大众点评的实践</a></strong> 分享人：何智聪、邢轶 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 25：Kotlin <a href=\"https://gitbook.cn/books/5b6c28169f4dd1284bf82f99/index.html\">代码检查探索与实践</a></strong> 分享人：周佳 美团点评前端开发工程师</p>\n <p><strong>On-Line Salon 24：<a href=\"https://gitbook.cn/books/5b67bceca51b8d5f8ecbcf79/index.html\">静态资源增量更新的新实践</a></strong> 分享人：刘洋河 美团点评资深工程师</p>\n <p><strong>On-Line Salon 23：<a href=\"https://gitbook.cn/books/5b5ab5721642ed2ba79b6630/index.html\">点评侧用户行为检索系统</a></strong> 分享人：朱凯 美团点评资深工程师</p>\n <p><strong>On-Line Salon 22：<a href=\"https://gitbook.cn/books/5b43fc6316959658636f059e/index.html\">深度学习在美团搜索广告排序的应用实践</a></strong> 分享人：薛欢、梁玉林、王新 美团点评资深工程师</p>\n <p><strong>On-Line Salon 21：<a href=\"https://gitbook.cn/books/5ae9bcbeb02ff82d0d1b0517/index.html\">使用 Mpvue 开发微信小程序的最佳实践</a></strong> 分享人：胡成全 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 20：<a href=\"https://gitbook.cn/books/5ad4a60daf8f2f35290f46d5/index.html\">亿级用户个性化品类推荐实战解析</a></strong> 分享人：张晓宇 美团高级工程师</p>\n <p><strong>On-Line Salon 19：<a href=\"https://gitbook.cn/books/5ac2325c9e924a1dc029c6b7/index.html\">MVVM 在美团点评酒旅业务中的实践</a></strong> 分享人：吴卓 美团点评技术专家</p>\n <p><strong>On-Line Salon 18：<a href=\"https://gitbook.cn/books/5aa6850a9c3cf94d4915f97c/index.html\">深度学习在美团点评推荐业务中实践</a></strong> 分享人：陈文石 美团点评算法专家</p>\n <p>感恩！99位出品人和讲师，70多个小时的分享，感谢他们给我们带来一线的技术实践分享，感谢他们给我们2万多小伙伴送上技术的“饕餮盛宴”。除了美团技术团队的讲师们，我们还要特别感谢来自腾讯、蚂蚁金服、百度、京东、去哪儿、美亚柏科等公司的讲师们，感谢你们的付出和努力，我们期待新的一年会有更多的合作！</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/1df24ed2.png\" alt=\"2018全年出品人及讲师\"></p>\n</div>', '2019-07-24 15:09:50', '数据库', '8790', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频0.520950191488532', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频', '2019-07-24 15:09:50', ' 技术学院');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d0908f014d', '<div class=\"content\">\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/e62aba45.png\" alt></p>\n <p>你好，2019</p>\n <p>再见，2018</p>\n <p>又到了一年辞旧迎新的时候，大家应该也和美美一样，在忙着总结回顾和展望规划吧。</p>\n <p>按老惯例，我们该献上技术年货了。今年首先出场的，是我们的技术沙龙大套餐！</p>\n <p>美团技术沙龙是由美团技术团队和美团科协主办的线下技术活动，每期沙龙邀请美团和同行公司的技术专家分享来自一线的实践经验，覆盖前端、后台、系统、数据、算法、测试、运维等技术领域。目前已在北京、上海、厦门、成都等城市成功举办了48期，吸引了超过2万名工程师报名参会。除了现场亲密交流之外，大家还在会后继续进微信群里切磋问道。</p>\n <p>我们同时也定期举办线上沙龙，有更多的朋友已经在线收听或收看过我们的直播。</p>\n <p>过去的一年里，我们一共举办了19场线下沙龙，16次线上沙龙，包括99位讲师，85个演讲，70+小时分享。除美团的几十位专家之外，还邀请了百度、蚂蚁金服、去哪儿、京东等同行。主题既有最火的AI热点——深度学习、强化学习、知识图谱，新潮技术Go、Kotlin、Flutter的落地实践，也有大规模互联网平台不可或缺的稳定性保障、高可用架构、监控体系、持续集成，还有接地气的运营系统、数据平台、配送调度的经验，更少不了CAT、mpvue、EasyReact这些火爆的开源项目……</p>\n <p>我们整理了今年所有线上线下沙龙的演讲稿和视频，分享给大家，希望能帮助大家在技术之路上继续追求卓越。</p>\n <p>还没有关注美团技术团队公众号（meituantech）的同学，赶快关注哟。</p>\n <p>现在，大家请闭眼，大餐来了～～～</p>\n <h2 id=\"美团线下沙龙\">美团线下沙龙</h2>\n <p>任意点击标题，就能直接查看视频及演讲稿</p>\n <p><strong>Tech Salon 048：<a href=\"https://tech.meituan.com/salon/#/44602\">AI在复杂业务场景中的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|何仁清 美团研究员 2018/12/22</strong></p>\n <p><a href=\"http://dpurl.cn/1aGUjwA\">《深度强化学习技术在智能调度中的应用》</a>王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jtvI8lt\">《深度学习在物流配送舆情监控中的应用》</a>李超@京东物流NLP方向资深算法工程师</p>\n <p><a href=\"http://dpurl.cn/UxQxdqg\">《美团搜索中的深度学习实践》</a>周翔@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 047：<a href=\"https://tech.meituan.com/salon/#/44452\">运营效率系统架构演进之道</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|阳纯飞 美团高级技术专家 2018/12/08</strong></p>\n <p><a href=\"http://dpurl.cn/e5FWi1r\">《面向O2O大促活动的高效运营系统实践》</a>李力@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/umMxuem\">《京东物流实时数据平台性能优化实践》</a>杨国斌@京东技术专家</p>\n <p><a href=\"http://dpurl.cn/S9p9Rct\">《外卖商家菜品运营效率提升实践》</a>罗震@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/C0DTDPI\">《外卖商户数据化运营体系建设》</a>李觊@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 046：<a href=\"https://tech.meituan.com/salon/#/44246\">AI在外卖配送的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王兴星&amp;郝井华 美团研究员 2018/11/25</strong></p>\n <p><a href=\"http://dpurl.cn/OG1VITL\">《预估模型在外卖广告的演进》</a>谢乾龙@美团外卖广告算法专家</p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《即时配送中的运筹优化技术》</a>郝井华@美团配送智能调度平台负责人</p>\n <p><a href=\"http://dpurl.cn/b2demu3\">《即时配送中的机器学习技术》</a>何仁清@美团配送AI方向负责人</p>\n <hr>\n <p><strong>Tech Salon 045：<a href=\"https://tech.meituan.com/salon/#/44241\">如何构建高性能、稳定的后端服务系统</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 |方建平 美团技术总监 2018/11/24</strong></p>\n <p><a href=\"http://dpurl.cn/h2tSH0d\">《美团度假交易稳定性建设实践》</a>韩建起@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1eEmiJa\">《美团配送智能调度系统架构演进》</a>郑伟@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/mOM70TU\">《美团稳定性保障平台Rhino》</a>占军@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/36eUWw7\">《美团外卖LBS服务实践》</a>易奎@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 044：<a href=\"https://tech.meituan.com/salon/#/42521\">千万级日活App的质量保证</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|李永刚 美团研究员 2018/09/15</strong></p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《AI语音产品测试》</a>于海生@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/EkrvqQQ\">《美团外卖客户端 UI 自动化测试实践》</a>刘健@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9wTSjRP\">《客户端QA效率工具》</a>赵晔@美团测试开发架构师</p>\n <hr>\n <p><strong>Tech Salon 043：<a href=\"https://tech.meituan.com/salon/#/42318\">美团金融千万级交易系统质量保障之路</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|赫大龙 美团高级技术专家 2018/09/01</strong></p>\n <p><a href=\"http://dpurl.cn/WBj4g1R\">《智能支付稳定性测试实战》</a>范勋伟@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/S3QC9nw\">《去哪儿网服务端自动化测试体系》</a>郑希文@去哪儿</p>\n <p><a href=\"http://dpurl.cn/bxidDmT\">《线上支付SDK质量保证体系》</a>张朋飞@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/ICnY9EY\">《质量运营演变之道》</a>符欣@美团高级开发工程师</p>\n <hr>\n <p><strong>Tech Salon 042：<a href=\"https://tech.meituan.com/salon/#/42098\">高效率前端与架构实战</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王鹤 美团高级技术专家 2018/08/26</strong></p>\n <p><a href=\"http://dpurl.cn/4zd1g7v\">《EH — 用黑科技打造全新的 Hybrid 体验》</a> 陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/atWgFPm\">《mpvue小程序开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/uBGnNe7\">《美团金融前端工程化最佳实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/C21IwKR\">《前端架构师应该做的事——架构模型与技术实践》</a>王鹤@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 041：<a href=\"https://tech.meituan.com/salon/#/41922\">企业级前端开发360°实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/08/18</strong></p>\n <p><a href=\"http://dpurl.cn/6enzQ6K\">《浅谈流量劫持与防治》</a>刘洋河@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/wJLdbeB\">《前端高可用性保障实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/WvMgJ22\">《跨容器高性能的离线化方案在美团的实践和探索》</a>龙佳文@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/6ea1W3X\">《前端遇上Go: 静态资源增量更新的新实践》</a>杨义天@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 040：<a href=\"https://tech.meituan.com/salon/#/41406\">前端遇上黑科技，打造全新界面体验与效率</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 | 冯湧 美团研发总监 2018/08/04</strong></p>\n <p><a href=\"http://dpurl.cn/dcUUsv7\">《EH——用黑科技打造的全新的 Hybrid 体验》</a>陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/omiEOIh\">《Vix——如何打造一个高效的前端组件库》</a>张胜@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/eSbf7eY\">《委以重任的Node.js——百亿级访问实践》</a>迪波威@百度资深软件工程师</p>\n <p><a href=\"http://dpurl.cn/1NLlrH7\">《构建时预渲染——网页首帧优化实践》</a>尚寒阳@美团资深研发工程师</p>\n <hr>\n <p><strong>Tech Salon 039：<a href=\"https://tech.meituan.com/salon/#/41065\">新思路打造移动端高效研发体系</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|周辉 美团资深架构师 2018/07/21</strong></p>\n <p><a href=\"http://dpurl.cn/rtXsz0X\">《Picasso在大众点评首页的应用》</a>虞惠文@美团Android开发工程师</p>\n <p><a href=\"http://dpurl.cn/gJkC96U\">《移动前后端开发解耦》</a>林晨@美团后端技术专家</p>\n <p><a href=\"http://dpurl.cn/kcEERJD\">《打造稳定、灵活、高效的运营配置平台》</a>蒋国宝@美团后端技术架构师</p>\n <p><a href=\"http://dpurl.cn/GEdFow2\">《移动持续集成实践》</a>何智聪@美团iOS技术专家</p>\n <hr>\n <p><strong>Tech Salon 038：<a href=\"https://tech.meituan.com/salon/#/40348\">旅游电商架构攻略指南</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|金孟哲 美团高级技术专家 2018/07/07</strong></p>\n <p><a href=\"http://dpurl.cn/9NA3IDI\">《旅游度假预订系统架构演进实践》</a> 金孟哲@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/pdIQztt\">《旅游度假多要素动态打包实践》</a> 王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/1mx2Mhn\">《旅游度假商品中心架构演进》</a> 徐泼@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jUc9Krm\">《直连低可信系统，实现高可用服务实践》</a> 郑旭@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 037：<a href=\"https://tech.meituan.com/salon/#/39548\">美团外卖两千万日订单背后的客户端技术架构</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|吴凯 美团高级技术专家 2018/06/23</strong></p>\n <p><a href=\"http://dpurl.cn/9VqeRQP\">《美团外卖客户端技术架构演进》</a>朱瑞利@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/b4BhI2i\">《客户端监控体系建设》</a>冯天锡@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/0WglRb7\">《客户端多端复用架构》</a>郑金光@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/BN8S6uV\">《客户端容灾能力体系》</a>李富强@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 036：<a href=\"https://tech.meituan.com/salon/#/38188\">大前端的动态化与可用性建设</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|洪磊 美团高级技术专家 2018/06/02</strong></p>\n <p><a href=\"http://dpurl.cn/4x8m29f\">《大前端高可用性建设》</a>李富强@美团资深前端工程师</p>\n <p><a href=\"http://dpurl.cn/aK72uB3\">《React fiber漫谈》</a>覃俊文@蚂蚁金服前端技术专家</p>\n <p><a href=\"http://dpurl.cn/uLlIi3q\">《小程序开发的新姿势 -mpvue 的应用和实践》</a>胡成全@美团前端技术专家</p>\n <p><a href=\"http://dpurl.cn/0n9ANpz\">《ReactNative性能优化企业级应用》</a>赵宏罡@腾讯资深前端开发工程师</p>\n <hr>\n <p><strong>Tech Salon 035：<a href=\"https://tech.meituan.com/salon/#/35673\">前端热点技术的企业级实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/04/21</strong></p>\n <p><a href=\"http://dpurl.cn/X8hmGar\">《前端遇上 Go——静态资源增量更新的新实践》</a>刘洋河@美团高级前端工程师</p>\n <p><a href=\"http://dpurl.cn/c2j4URx\">《金融扫码付 H5 迁移小程序拓荒之旅》</a>陈瑶@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/8VE6Q70\">《小程序开发的新姿势 - mpvue 开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 034：<a href=\"https://tech.meituan.com/salon/#/35161\">聊聊酒店系统高可用架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|许关飞 美团研究员 2018/04/14</strong></p>\n <p><a href=\"http://dpurl.cn/KwRRM3V\">《高可用之中间件技术》</a>吴湘@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9XzOUnT\">《分布式开源监控系统CAT在美团点评演进》</a>尤勇@美团研究员</p>\n <p><a href=\"http://dpurl.cn/3FHVwpo\">《美团旅行住宿产品中心系统高可用实战》</a>槐国涛@美团酒店CRS商品负责人</p>\n <p><a href=\"http://dpurl.cn/Ynt6aVE\">《美团旅行酒店住宿订单系统高可用实战》</a>李磊@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/2gLXCnH\">《美团旅行直连系统高可用实战》</a>秦浏杰@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 033：<a href=\"https://tech.meituan.com/salon/#/31815\">企业信息化建设和安全管理</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|邓昀泽 美团企业平台研发负责人 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/2Cpj4tO\">《美团点评内部系统构建之路》</a>邓昀泽@美团企业平台研发部负责人</p>\n <p><a href=\"http://dpurl.cn/IGFzn0f\">《企业信息防护体系建设》</a>陆平@美亚柏科企业电子数据取证事业部副总</p>\n <p><a href=\"http://dpurl.cn/BTYUxbh\">《企业如何应对安全威胁》</a>游兴旺@美团企业平台研发高级总监</p>\n <hr>\n <p><strong>Tech Salon 032：<a href=\"https://tech.meituan.com/salon/#/31816\">移动开发热点技术—动态日志、监控、Hybrid、插件化</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|方锦涛 美团高级技术专家 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/hi6x3tX\">《线上问题排查体系构建：动态日志》</a> 陈潼@美团Android资深工程师</p>\n <p><a href=\"http://dpurl.cn/BsmtuwJ\">《混合应用工程化实践》</a> 李罡@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/xXexGwG\">《Caesium iOS启动时间监控》</a> 吴君阳@美团iOS工程师</p>\n <hr>\n <p><strong>Tech Salon 031：<a href=\"https://tech.meituan.com/salon/#/31470\">线下支付千万级订单服务—前后端架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/01/27</strong></p>\n <p><a href=\"http://dpurl.cn/83yGayf\">《扫码付前端可用性保障实践》</a> 田泱@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/uQv3mVL\">《业务系统的建设之路》</a>刘运@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1HxNpDH\">《Web离线化加载》</a> 于秋@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/tbNSxRx\">《基于WTL框架的Windows开发最佳实践》</a> 钱声鹏@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 030：<a href=\"https://tech.meituan.com/salon/#/30554\">餐饮生态高可用系统实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|温华剑 美团技术专家 2018/01/13</strong></p>\n <p><a href=\"http://dpurl.cn/i40jBTG\">《从“0”开始-美团收银客户端》</a>聂龙羽@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/8qoK8Fa\">《美团餐饮生态大数据架构实践》</a>牛江浩@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/u49UVD9\">《餐饮开放平台的高可用实践》</a>朱洋波@美团技术专家</p>\n <hr>\n <h2 id=\"美团线上沙龙\">美团线上沙龙</h2>\n <p>任意点击标题，就能在线观看视频或者文章</p>\n <p><strong>On-Line Salon 33：<a href=\"https://m.lizhiweike.com/classroom/10038952\">美团大脑 智享生活</a></strong> 分享人：王仲远 美团点评高级研究员</p>\n <p><strong>On-Line Salon 32：<a href=\"https://gitbook.cn/books/5bcf24b6211d0e68b1b788f0/index.html\">基于深度学习的计算机视觉技术在无人驾驶中的应用</a></strong> 分享人：刘宇达 美团点评资深算法工程师</p>\n <p><strong>On-Line Salon 31：<a href=\"https://m.lizhiweike.com/classroom/9363553\">利用响应式来解决客户端问题</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 30：<a href=\"https://gitbook.cn/books/5b927473780fdb5e97d2a3bc/index.html\">美团针对 Redis Rehash 机制的探索和实践</a></strong> 分享人：葛春林 美团点评资深工程师</p>\n <p><strong>On-Line Salon 29：<a href=\"https://m.lizhiweike.com/classroom/8660084\">Flutter 原理与实践</a></strong> 分享人：李少杰 美团点评资深工程师</p>\n <p><strong>On-Line Salon 28：<a href=\"https://gitbook.cn/books/5b8746c7ea7bc512755e4e36/index.html\">如何基于深度学习实现图像的智能审核</a></strong> 分享人：魏晓明 美团点评高级技术专家</p>\n <p><strong>On-Line Salon 27：<a href=\"https://gitbook.cn/books/5b7e5a44a63144311b8dbf2d/index.html\">美团客户端响应式框架 EasyReact 开源</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 26：<a href=\"https://gitbook.cn/books/5b752e45e8b81c0748e349e1/index.html\">移动持续集成在大众点评的实践</a></strong> 分享人：何智聪、邢轶 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 25：Kotlin <a href=\"https://gitbook.cn/books/5b6c28169f4dd1284bf82f99/index.html\">代码检查探索与实践</a></strong> 分享人：周佳 美团点评前端开发工程师</p>\n <p><strong>On-Line Salon 24：<a href=\"https://gitbook.cn/books/5b67bceca51b8d5f8ecbcf79/index.html\">静态资源增量更新的新实践</a></strong> 分享人：刘洋河 美团点评资深工程师</p>\n <p><strong>On-Line Salon 23：<a href=\"https://gitbook.cn/books/5b5ab5721642ed2ba79b6630/index.html\">点评侧用户行为检索系统</a></strong> 分享人：朱凯 美团点评资深工程师</p>\n <p><strong>On-Line Salon 22：<a href=\"https://gitbook.cn/books/5b43fc6316959658636f059e/index.html\">深度学习在美团搜索广告排序的应用实践</a></strong> 分享人：薛欢、梁玉林、王新 美团点评资深工程师</p>\n <p><strong>On-Line Salon 21：<a href=\"https://gitbook.cn/books/5ae9bcbeb02ff82d0d1b0517/index.html\">使用 Mpvue 开发微信小程序的最佳实践</a></strong> 分享人：胡成全 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 20：<a href=\"https://gitbook.cn/books/5ad4a60daf8f2f35290f46d5/index.html\">亿级用户个性化品类推荐实战解析</a></strong> 分享人：张晓宇 美团高级工程师</p>\n <p><strong>On-Line Salon 19：<a href=\"https://gitbook.cn/books/5ac2325c9e924a1dc029c6b7/index.html\">MVVM 在美团点评酒旅业务中的实践</a></strong> 分享人：吴卓 美团点评技术专家</p>\n <p><strong>On-Line Salon 18：<a href=\"https://gitbook.cn/books/5aa6850a9c3cf94d4915f97c/index.html\">深度学习在美团点评推荐业务中实践</a></strong> 分享人：陈文石 美团点评算法专家</p>\n <p>感恩！99位出品人和讲师，70多个小时的分享，感谢他们给我们带来一线的技术实践分享，感谢他们给我们2万多小伙伴送上技术的“饕餮盛宴”。除了美团技术团队的讲师们，我们还要特别感谢来自腾讯、蚂蚁金服、百度、京东、去哪儿、美亚柏科等公司的讲师们，感谢你们的付出和努力，我们期待新的一年会有更多的合作！</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/1df24ed2.png\" alt=\"2018全年出品人及讲师\"></p>\n</div>', '2019-07-24 15:09:50', 'Vuex', '8790', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频0.5370981063798246', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频', '2019-07-24 15:09:50', ' 技术学院');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d090d3014e', '<div class=\"content\">\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/e62aba45.png\" alt></p>\n <p>你好，2019</p>\n <p>再见，2018</p>\n <p>又到了一年辞旧迎新的时候，大家应该也和美美一样，在忙着总结回顾和展望规划吧。</p>\n <p>按老惯例，我们该献上技术年货了。今年首先出场的，是我们的技术沙龙大套餐！</p>\n <p>美团技术沙龙是由美团技术团队和美团科协主办的线下技术活动，每期沙龙邀请美团和同行公司的技术专家分享来自一线的实践经验，覆盖前端、后台、系统、数据、算法、测试、运维等技术领域。目前已在北京、上海、厦门、成都等城市成功举办了48期，吸引了超过2万名工程师报名参会。除了现场亲密交流之外，大家还在会后继续进微信群里切磋问道。</p>\n <p>我们同时也定期举办线上沙龙，有更多的朋友已经在线收听或收看过我们的直播。</p>\n <p>过去的一年里，我们一共举办了19场线下沙龙，16次线上沙龙，包括99位讲师，85个演讲，70+小时分享。除美团的几十位专家之外，还邀请了百度、蚂蚁金服、去哪儿、京东等同行。主题既有最火的AI热点——深度学习、强化学习、知识图谱，新潮技术Go、Kotlin、Flutter的落地实践，也有大规模互联网平台不可或缺的稳定性保障、高可用架构、监控体系、持续集成，还有接地气的运营系统、数据平台、配送调度的经验，更少不了CAT、mpvue、EasyReact这些火爆的开源项目……</p>\n <p>我们整理了今年所有线上线下沙龙的演讲稿和视频，分享给大家，希望能帮助大家在技术之路上继续追求卓越。</p>\n <p>还没有关注美团技术团队公众号（meituantech）的同学，赶快关注哟。</p>\n <p>现在，大家请闭眼，大餐来了～～～</p>\n <h2 id=\"美团线下沙龙\">美团线下沙龙</h2>\n <p>任意点击标题，就能直接查看视频及演讲稿</p>\n <p><strong>Tech Salon 048：<a href=\"https://tech.meituan.com/salon/#/44602\">AI在复杂业务场景中的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|何仁清 美团研究员 2018/12/22</strong></p>\n <p><a href=\"http://dpurl.cn/1aGUjwA\">《深度强化学习技术在智能调度中的应用》</a>王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jtvI8lt\">《深度学习在物流配送舆情监控中的应用》</a>李超@京东物流NLP方向资深算法工程师</p>\n <p><a href=\"http://dpurl.cn/UxQxdqg\">《美团搜索中的深度学习实践》</a>周翔@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 047：<a href=\"https://tech.meituan.com/salon/#/44452\">运营效率系统架构演进之道</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|阳纯飞 美团高级技术专家 2018/12/08</strong></p>\n <p><a href=\"http://dpurl.cn/e5FWi1r\">《面向O2O大促活动的高效运营系统实践》</a>李力@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/umMxuem\">《京东物流实时数据平台性能优化实践》</a>杨国斌@京东技术专家</p>\n <p><a href=\"http://dpurl.cn/S9p9Rct\">《外卖商家菜品运营效率提升实践》</a>罗震@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/C0DTDPI\">《外卖商户数据化运营体系建设》</a>李觊@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 046：<a href=\"https://tech.meituan.com/salon/#/44246\">AI在外卖配送的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王兴星&amp;郝井华 美团研究员 2018/11/25</strong></p>\n <p><a href=\"http://dpurl.cn/OG1VITL\">《预估模型在外卖广告的演进》</a>谢乾龙@美团外卖广告算法专家</p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《即时配送中的运筹优化技术》</a>郝井华@美团配送智能调度平台负责人</p>\n <p><a href=\"http://dpurl.cn/b2demu3\">《即时配送中的机器学习技术》</a>何仁清@美团配送AI方向负责人</p>\n <hr>\n <p><strong>Tech Salon 045：<a href=\"https://tech.meituan.com/salon/#/44241\">如何构建高性能、稳定的后端服务系统</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 |方建平 美团技术总监 2018/11/24</strong></p>\n <p><a href=\"http://dpurl.cn/h2tSH0d\">《美团度假交易稳定性建设实践》</a>韩建起@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1eEmiJa\">《美团配送智能调度系统架构演进》</a>郑伟@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/mOM70TU\">《美团稳定性保障平台Rhino》</a>占军@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/36eUWw7\">《美团外卖LBS服务实践》</a>易奎@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 044：<a href=\"https://tech.meituan.com/salon/#/42521\">千万级日活App的质量保证</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|李永刚 美团研究员 2018/09/15</strong></p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《AI语音产品测试》</a>于海生@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/EkrvqQQ\">《美团外卖客户端 UI 自动化测试实践》</a>刘健@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9wTSjRP\">《客户端QA效率工具》</a>赵晔@美团测试开发架构师</p>\n <hr>\n <p><strong>Tech Salon 043：<a href=\"https://tech.meituan.com/salon/#/42318\">美团金融千万级交易系统质量保障之路</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|赫大龙 美团高级技术专家 2018/09/01</strong></p>\n <p><a href=\"http://dpurl.cn/WBj4g1R\">《智能支付稳定性测试实战》</a>范勋伟@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/S3QC9nw\">《去哪儿网服务端自动化测试体系》</a>郑希文@去哪儿</p>\n <p><a href=\"http://dpurl.cn/bxidDmT\">《线上支付SDK质量保证体系》</a>张朋飞@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/ICnY9EY\">《质量运营演变之道》</a>符欣@美团高级开发工程师</p>\n <hr>\n <p><strong>Tech Salon 042：<a href=\"https://tech.meituan.com/salon/#/42098\">高效率前端与架构实战</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王鹤 美团高级技术专家 2018/08/26</strong></p>\n <p><a href=\"http://dpurl.cn/4zd1g7v\">《EH — 用黑科技打造全新的 Hybrid 体验》</a> 陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/atWgFPm\">《mpvue小程序开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/uBGnNe7\">《美团金融前端工程化最佳实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/C21IwKR\">《前端架构师应该做的事——架构模型与技术实践》</a>王鹤@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 041：<a href=\"https://tech.meituan.com/salon/#/41922\">企业级前端开发360°实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/08/18</strong></p>\n <p><a href=\"http://dpurl.cn/6enzQ6K\">《浅谈流量劫持与防治》</a>刘洋河@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/wJLdbeB\">《前端高可用性保障实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/WvMgJ22\">《跨容器高性能的离线化方案在美团的实践和探索》</a>龙佳文@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/6ea1W3X\">《前端遇上Go: 静态资源增量更新的新实践》</a>杨义天@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 040：<a href=\"https://tech.meituan.com/salon/#/41406\">前端遇上黑科技，打造全新界面体验与效率</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 | 冯湧 美团研发总监 2018/08/04</strong></p>\n <p><a href=\"http://dpurl.cn/dcUUsv7\">《EH——用黑科技打造的全新的 Hybrid 体验》</a>陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/omiEOIh\">《Vix——如何打造一个高效的前端组件库》</a>张胜@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/eSbf7eY\">《委以重任的Node.js——百亿级访问实践》</a>迪波威@百度资深软件工程师</p>\n <p><a href=\"http://dpurl.cn/1NLlrH7\">《构建时预渲染——网页首帧优化实践》</a>尚寒阳@美团资深研发工程师</p>\n <hr>\n <p><strong>Tech Salon 039：<a href=\"https://tech.meituan.com/salon/#/41065\">新思路打造移动端高效研发体系</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|周辉 美团资深架构师 2018/07/21</strong></p>\n <p><a href=\"http://dpurl.cn/rtXsz0X\">《Picasso在大众点评首页的应用》</a>虞惠文@美团Android开发工程师</p>\n <p><a href=\"http://dpurl.cn/gJkC96U\">《移动前后端开发解耦》</a>林晨@美团后端技术专家</p>\n <p><a href=\"http://dpurl.cn/kcEERJD\">《打造稳定、灵活、高效的运营配置平台》</a>蒋国宝@美团后端技术架构师</p>\n <p><a href=\"http://dpurl.cn/GEdFow2\">《移动持续集成实践》</a>何智聪@美团iOS技术专家</p>\n <hr>\n <p><strong>Tech Salon 038：<a href=\"https://tech.meituan.com/salon/#/40348\">旅游电商架构攻略指南</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|金孟哲 美团高级技术专家 2018/07/07</strong></p>\n <p><a href=\"http://dpurl.cn/9NA3IDI\">《旅游度假预订系统架构演进实践》</a> 金孟哲@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/pdIQztt\">《旅游度假多要素动态打包实践》</a> 王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/1mx2Mhn\">《旅游度假商品中心架构演进》</a> 徐泼@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jUc9Krm\">《直连低可信系统，实现高可用服务实践》</a> 郑旭@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 037：<a href=\"https://tech.meituan.com/salon/#/39548\">美团外卖两千万日订单背后的客户端技术架构</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|吴凯 美团高级技术专家 2018/06/23</strong></p>\n <p><a href=\"http://dpurl.cn/9VqeRQP\">《美团外卖客户端技术架构演进》</a>朱瑞利@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/b4BhI2i\">《客户端监控体系建设》</a>冯天锡@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/0WglRb7\">《客户端多端复用架构》</a>郑金光@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/BN8S6uV\">《客户端容灾能力体系》</a>李富强@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 036：<a href=\"https://tech.meituan.com/salon/#/38188\">大前端的动态化与可用性建设</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|洪磊 美团高级技术专家 2018/06/02</strong></p>\n <p><a href=\"http://dpurl.cn/4x8m29f\">《大前端高可用性建设》</a>李富强@美团资深前端工程师</p>\n <p><a href=\"http://dpurl.cn/aK72uB3\">《React fiber漫谈》</a>覃俊文@蚂蚁金服前端技术专家</p>\n <p><a href=\"http://dpurl.cn/uLlIi3q\">《小程序开发的新姿势 -mpvue 的应用和实践》</a>胡成全@美团前端技术专家</p>\n <p><a href=\"http://dpurl.cn/0n9ANpz\">《ReactNative性能优化企业级应用》</a>赵宏罡@腾讯资深前端开发工程师</p>\n <hr>\n <p><strong>Tech Salon 035：<a href=\"https://tech.meituan.com/salon/#/35673\">前端热点技术的企业级实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/04/21</strong></p>\n <p><a href=\"http://dpurl.cn/X8hmGar\">《前端遇上 Go——静态资源增量更新的新实践》</a>刘洋河@美团高级前端工程师</p>\n <p><a href=\"http://dpurl.cn/c2j4URx\">《金融扫码付 H5 迁移小程序拓荒之旅》</a>陈瑶@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/8VE6Q70\">《小程序开发的新姿势 - mpvue 开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 034：<a href=\"https://tech.meituan.com/salon/#/35161\">聊聊酒店系统高可用架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|许关飞 美团研究员 2018/04/14</strong></p>\n <p><a href=\"http://dpurl.cn/KwRRM3V\">《高可用之中间件技术》</a>吴湘@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9XzOUnT\">《分布式开源监控系统CAT在美团点评演进》</a>尤勇@美团研究员</p>\n <p><a href=\"http://dpurl.cn/3FHVwpo\">《美团旅行住宿产品中心系统高可用实战》</a>槐国涛@美团酒店CRS商品负责人</p>\n <p><a href=\"http://dpurl.cn/Ynt6aVE\">《美团旅行酒店住宿订单系统高可用实战》</a>李磊@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/2gLXCnH\">《美团旅行直连系统高可用实战》</a>秦浏杰@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 033：<a href=\"https://tech.meituan.com/salon/#/31815\">企业信息化建设和安全管理</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|邓昀泽 美团企业平台研发负责人 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/2Cpj4tO\">《美团点评内部系统构建之路》</a>邓昀泽@美团企业平台研发部负责人</p>\n <p><a href=\"http://dpurl.cn/IGFzn0f\">《企业信息防护体系建设》</a>陆平@美亚柏科企业电子数据取证事业部副总</p>\n <p><a href=\"http://dpurl.cn/BTYUxbh\">《企业如何应对安全威胁》</a>游兴旺@美团企业平台研发高级总监</p>\n <hr>\n <p><strong>Tech Salon 032：<a href=\"https://tech.meituan.com/salon/#/31816\">移动开发热点技术—动态日志、监控、Hybrid、插件化</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|方锦涛 美团高级技术专家 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/hi6x3tX\">《线上问题排查体系构建：动态日志》</a> 陈潼@美团Android资深工程师</p>\n <p><a href=\"http://dpurl.cn/BsmtuwJ\">《混合应用工程化实践》</a> 李罡@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/xXexGwG\">《Caesium iOS启动时间监控》</a> 吴君阳@美团iOS工程师</p>\n <hr>\n <p><strong>Tech Salon 031：<a href=\"https://tech.meituan.com/salon/#/31470\">线下支付千万级订单服务—前后端架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/01/27</strong></p>\n <p><a href=\"http://dpurl.cn/83yGayf\">《扫码付前端可用性保障实践》</a> 田泱@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/uQv3mVL\">《业务系统的建设之路》</a>刘运@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1HxNpDH\">《Web离线化加载》</a> 于秋@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/tbNSxRx\">《基于WTL框架的Windows开发最佳实践》</a> 钱声鹏@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 030：<a href=\"https://tech.meituan.com/salon/#/30554\">餐饮生态高可用系统实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|温华剑 美团技术专家 2018/01/13</strong></p>\n <p><a href=\"http://dpurl.cn/i40jBTG\">《从“0”开始-美团收银客户端》</a>聂龙羽@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/8qoK8Fa\">《美团餐饮生态大数据架构实践》</a>牛江浩@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/u49UVD9\">《餐饮开放平台的高可用实践》</a>朱洋波@美团技术专家</p>\n <hr>\n <h2 id=\"美团线上沙龙\">美团线上沙龙</h2>\n <p>任意点击标题，就能在线观看视频或者文章</p>\n <p><strong>On-Line Salon 33：<a href=\"https://m.lizhiweike.com/classroom/10038952\">美团大脑 智享生活</a></strong> 分享人：王仲远 美团点评高级研究员</p>\n <p><strong>On-Line Salon 32：<a href=\"https://gitbook.cn/books/5bcf24b6211d0e68b1b788f0/index.html\">基于深度学习的计算机视觉技术在无人驾驶中的应用</a></strong> 分享人：刘宇达 美团点评资深算法工程师</p>\n <p><strong>On-Line Salon 31：<a href=\"https://m.lizhiweike.com/classroom/9363553\">利用响应式来解决客户端问题</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 30：<a href=\"https://gitbook.cn/books/5b927473780fdb5e97d2a3bc/index.html\">美团针对 Redis Rehash 机制的探索和实践</a></strong> 分享人：葛春林 美团点评资深工程师</p>\n <p><strong>On-Line Salon 29：<a href=\"https://m.lizhiweike.com/classroom/8660084\">Flutter 原理与实践</a></strong> 分享人：李少杰 美团点评资深工程师</p>\n <p><strong>On-Line Salon 28：<a href=\"https://gitbook.cn/books/5b8746c7ea7bc512755e4e36/index.html\">如何基于深度学习实现图像的智能审核</a></strong> 分享人：魏晓明 美团点评高级技术专家</p>\n <p><strong>On-Line Salon 27：<a href=\"https://gitbook.cn/books/5b7e5a44a63144311b8dbf2d/index.html\">美团客户端响应式框架 EasyReact 开源</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 26：<a href=\"https://gitbook.cn/books/5b752e45e8b81c0748e349e1/index.html\">移动持续集成在大众点评的实践</a></strong> 分享人：何智聪、邢轶 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 25：Kotlin <a href=\"https://gitbook.cn/books/5b6c28169f4dd1284bf82f99/index.html\">代码检查探索与实践</a></strong> 分享人：周佳 美团点评前端开发工程师</p>\n <p><strong>On-Line Salon 24：<a href=\"https://gitbook.cn/books/5b67bceca51b8d5f8ecbcf79/index.html\">静态资源增量更新的新实践</a></strong> 分享人：刘洋河 美团点评资深工程师</p>\n <p><strong>On-Line Salon 23：<a href=\"https://gitbook.cn/books/5b5ab5721642ed2ba79b6630/index.html\">点评侧用户行为检索系统</a></strong> 分享人：朱凯 美团点评资深工程师</p>\n <p><strong>On-Line Salon 22：<a href=\"https://gitbook.cn/books/5b43fc6316959658636f059e/index.html\">深度学习在美团搜索广告排序的应用实践</a></strong> 分享人：薛欢、梁玉林、王新 美团点评资深工程师</p>\n <p><strong>On-Line Salon 21：<a href=\"https://gitbook.cn/books/5ae9bcbeb02ff82d0d1b0517/index.html\">使用 Mpvue 开发微信小程序的最佳实践</a></strong> 分享人：胡成全 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 20：<a href=\"https://gitbook.cn/books/5ad4a60daf8f2f35290f46d5/index.html\">亿级用户个性化品类推荐实战解析</a></strong> 分享人：张晓宇 美团高级工程师</p>\n <p><strong>On-Line Salon 19：<a href=\"https://gitbook.cn/books/5ac2325c9e924a1dc029c6b7/index.html\">MVVM 在美团点评酒旅业务中的实践</a></strong> 分享人：吴卓 美团点评技术专家</p>\n <p><strong>On-Line Salon 18：<a href=\"https://gitbook.cn/books/5aa6850a9c3cf94d4915f97c/index.html\">深度学习在美团点评推荐业务中实践</a></strong> 分享人：陈文石 美团点评算法专家</p>\n <p>感恩！99位出品人和讲师，70多个小时的分享，感谢他们给我们带来一线的技术实践分享，感谢他们给我们2万多小伙伴送上技术的“饕餮盛宴”。除了美团技术团队的讲师们，我们还要特别感谢来自腾讯、蚂蚁金服、百度、京东、去哪儿、美亚柏科等公司的讲师们，感谢你们的付出和努力，我们期待新的一年会有更多的合作！</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/1df24ed2.png\" alt=\"2018全年出品人及讲师\"></p>\n</div>', '2019-07-24 15:09:50', 'jQuery', '8790', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频0.1969521755382192', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频', '2019-07-24 15:09:50', ' 技术学院');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d0912a014f', '<div class=\"content\">\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/e62aba45.png\" alt></p>\n <p>你好，2019</p>\n <p>再见，2018</p>\n <p>又到了一年辞旧迎新的时候，大家应该也和美美一样，在忙着总结回顾和展望规划吧。</p>\n <p>按老惯例，我们该献上技术年货了。今年首先出场的，是我们的技术沙龙大套餐！</p>\n <p>美团技术沙龙是由美团技术团队和美团科协主办的线下技术活动，每期沙龙邀请美团和同行公司的技术专家分享来自一线的实践经验，覆盖前端、后台、系统、数据、算法、测试、运维等技术领域。目前已在北京、上海、厦门、成都等城市成功举办了48期，吸引了超过2万名工程师报名参会。除了现场亲密交流之外，大家还在会后继续进微信群里切磋问道。</p>\n <p>我们同时也定期举办线上沙龙，有更多的朋友已经在线收听或收看过我们的直播。</p>\n <p>过去的一年里，我们一共举办了19场线下沙龙，16次线上沙龙，包括99位讲师，85个演讲，70+小时分享。除美团的几十位专家之外，还邀请了百度、蚂蚁金服、去哪儿、京东等同行。主题既有最火的AI热点——深度学习、强化学习、知识图谱，新潮技术Go、Kotlin、Flutter的落地实践，也有大规模互联网平台不可或缺的稳定性保障、高可用架构、监控体系、持续集成，还有接地气的运营系统、数据平台、配送调度的经验，更少不了CAT、mpvue、EasyReact这些火爆的开源项目……</p>\n <p>我们整理了今年所有线上线下沙龙的演讲稿和视频，分享给大家，希望能帮助大家在技术之路上继续追求卓越。</p>\n <p>还没有关注美团技术团队公众号（meituantech）的同学，赶快关注哟。</p>\n <p>现在，大家请闭眼，大餐来了～～～</p>\n <h2 id=\"美团线下沙龙\">美团线下沙龙</h2>\n <p>任意点击标题，就能直接查看视频及演讲稿</p>\n <p><strong>Tech Salon 048：<a href=\"https://tech.meituan.com/salon/#/44602\">AI在复杂业务场景中的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|何仁清 美团研究员 2018/12/22</strong></p>\n <p><a href=\"http://dpurl.cn/1aGUjwA\">《深度强化学习技术在智能调度中的应用》</a>王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jtvI8lt\">《深度学习在物流配送舆情监控中的应用》</a>李超@京东物流NLP方向资深算法工程师</p>\n <p><a href=\"http://dpurl.cn/UxQxdqg\">《美团搜索中的深度学习实践》</a>周翔@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 047：<a href=\"https://tech.meituan.com/salon/#/44452\">运营效率系统架构演进之道</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|阳纯飞 美团高级技术专家 2018/12/08</strong></p>\n <p><a href=\"http://dpurl.cn/e5FWi1r\">《面向O2O大促活动的高效运营系统实践》</a>李力@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/umMxuem\">《京东物流实时数据平台性能优化实践》</a>杨国斌@京东技术专家</p>\n <p><a href=\"http://dpurl.cn/S9p9Rct\">《外卖商家菜品运营效率提升实践》</a>罗震@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/C0DTDPI\">《外卖商户数据化运营体系建设》</a>李觊@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 046：<a href=\"https://tech.meituan.com/salon/#/44246\">AI在外卖配送的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王兴星&amp;郝井华 美团研究员 2018/11/25</strong></p>\n <p><a href=\"http://dpurl.cn/OG1VITL\">《预估模型在外卖广告的演进》</a>谢乾龙@美团外卖广告算法专家</p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《即时配送中的运筹优化技术》</a>郝井华@美团配送智能调度平台负责人</p>\n <p><a href=\"http://dpurl.cn/b2demu3\">《即时配送中的机器学习技术》</a>何仁清@美团配送AI方向负责人</p>\n <hr>\n <p><strong>Tech Salon 045：<a href=\"https://tech.meituan.com/salon/#/44241\">如何构建高性能、稳定的后端服务系统</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 |方建平 美团技术总监 2018/11/24</strong></p>\n <p><a href=\"http://dpurl.cn/h2tSH0d\">《美团度假交易稳定性建设实践》</a>韩建起@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1eEmiJa\">《美团配送智能调度系统架构演进》</a>郑伟@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/mOM70TU\">《美团稳定性保障平台Rhino》</a>占军@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/36eUWw7\">《美团外卖LBS服务实践》</a>易奎@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 044：<a href=\"https://tech.meituan.com/salon/#/42521\">千万级日活App的质量保证</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|李永刚 美团研究员 2018/09/15</strong></p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《AI语音产品测试》</a>于海生@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/EkrvqQQ\">《美团外卖客户端 UI 自动化测试实践》</a>刘健@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9wTSjRP\">《客户端QA效率工具》</a>赵晔@美团测试开发架构师</p>\n <hr>\n <p><strong>Tech Salon 043：<a href=\"https://tech.meituan.com/salon/#/42318\">美团金融千万级交易系统质量保障之路</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|赫大龙 美团高级技术专家 2018/09/01</strong></p>\n <p><a href=\"http://dpurl.cn/WBj4g1R\">《智能支付稳定性测试实战》</a>范勋伟@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/S3QC9nw\">《去哪儿网服务端自动化测试体系》</a>郑希文@去哪儿</p>\n <p><a href=\"http://dpurl.cn/bxidDmT\">《线上支付SDK质量保证体系》</a>张朋飞@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/ICnY9EY\">《质量运营演变之道》</a>符欣@美团高级开发工程师</p>\n <hr>\n <p><strong>Tech Salon 042：<a href=\"https://tech.meituan.com/salon/#/42098\">高效率前端与架构实战</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王鹤 美团高级技术专家 2018/08/26</strong></p>\n <p><a href=\"http://dpurl.cn/4zd1g7v\">《EH — 用黑科技打造全新的 Hybrid 体验》</a> 陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/atWgFPm\">《mpvue小程序开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/uBGnNe7\">《美团金融前端工程化最佳实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/C21IwKR\">《前端架构师应该做的事——架构模型与技术实践》</a>王鹤@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 041：<a href=\"https://tech.meituan.com/salon/#/41922\">企业级前端开发360°实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/08/18</strong></p>\n <p><a href=\"http://dpurl.cn/6enzQ6K\">《浅谈流量劫持与防治》</a>刘洋河@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/wJLdbeB\">《前端高可用性保障实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/WvMgJ22\">《跨容器高性能的离线化方案在美团的实践和探索》</a>龙佳文@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/6ea1W3X\">《前端遇上Go: 静态资源增量更新的新实践》</a>杨义天@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 040：<a href=\"https://tech.meituan.com/salon/#/41406\">前端遇上黑科技，打造全新界面体验与效率</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 | 冯湧 美团研发总监 2018/08/04</strong></p>\n <p><a href=\"http://dpurl.cn/dcUUsv7\">《EH——用黑科技打造的全新的 Hybrid 体验》</a>陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/omiEOIh\">《Vix——如何打造一个高效的前端组件库》</a>张胜@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/eSbf7eY\">《委以重任的Node.js——百亿级访问实践》</a>迪波威@百度资深软件工程师</p>\n <p><a href=\"http://dpurl.cn/1NLlrH7\">《构建时预渲染——网页首帧优化实践》</a>尚寒阳@美团资深研发工程师</p>\n <hr>\n <p><strong>Tech Salon 039：<a href=\"https://tech.meituan.com/salon/#/41065\">新思路打造移动端高效研发体系</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|周辉 美团资深架构师 2018/07/21</strong></p>\n <p><a href=\"http://dpurl.cn/rtXsz0X\">《Picasso在大众点评首页的应用》</a>虞惠文@美团Android开发工程师</p>\n <p><a href=\"http://dpurl.cn/gJkC96U\">《移动前后端开发解耦》</a>林晨@美团后端技术专家</p>\n <p><a href=\"http://dpurl.cn/kcEERJD\">《打造稳定、灵活、高效的运营配置平台》</a>蒋国宝@美团后端技术架构师</p>\n <p><a href=\"http://dpurl.cn/GEdFow2\">《移动持续集成实践》</a>何智聪@美团iOS技术专家</p>\n <hr>\n <p><strong>Tech Salon 038：<a href=\"https://tech.meituan.com/salon/#/40348\">旅游电商架构攻略指南</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|金孟哲 美团高级技术专家 2018/07/07</strong></p>\n <p><a href=\"http://dpurl.cn/9NA3IDI\">《旅游度假预订系统架构演进实践》</a> 金孟哲@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/pdIQztt\">《旅游度假多要素动态打包实践》</a> 王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/1mx2Mhn\">《旅游度假商品中心架构演进》</a> 徐泼@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jUc9Krm\">《直连低可信系统，实现高可用服务实践》</a> 郑旭@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 037：<a href=\"https://tech.meituan.com/salon/#/39548\">美团外卖两千万日订单背后的客户端技术架构</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|吴凯 美团高级技术专家 2018/06/23</strong></p>\n <p><a href=\"http://dpurl.cn/9VqeRQP\">《美团外卖客户端技术架构演进》</a>朱瑞利@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/b4BhI2i\">《客户端监控体系建设》</a>冯天锡@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/0WglRb7\">《客户端多端复用架构》</a>郑金光@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/BN8S6uV\">《客户端容灾能力体系》</a>李富强@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 036：<a href=\"https://tech.meituan.com/salon/#/38188\">大前端的动态化与可用性建设</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|洪磊 美团高级技术专家 2018/06/02</strong></p>\n <p><a href=\"http://dpurl.cn/4x8m29f\">《大前端高可用性建设》</a>李富强@美团资深前端工程师</p>\n <p><a href=\"http://dpurl.cn/aK72uB3\">《React fiber漫谈》</a>覃俊文@蚂蚁金服前端技术专家</p>\n <p><a href=\"http://dpurl.cn/uLlIi3q\">《小程序开发的新姿势 -mpvue 的应用和实践》</a>胡成全@美团前端技术专家</p>\n <p><a href=\"http://dpurl.cn/0n9ANpz\">《ReactNative性能优化企业级应用》</a>赵宏罡@腾讯资深前端开发工程师</p>\n <hr>\n <p><strong>Tech Salon 035：<a href=\"https://tech.meituan.com/salon/#/35673\">前端热点技术的企业级实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/04/21</strong></p>\n <p><a href=\"http://dpurl.cn/X8hmGar\">《前端遇上 Go——静态资源增量更新的新实践》</a>刘洋河@美团高级前端工程师</p>\n <p><a href=\"http://dpurl.cn/c2j4URx\">《金融扫码付 H5 迁移小程序拓荒之旅》</a>陈瑶@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/8VE6Q70\">《小程序开发的新姿势 - mpvue 开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 034：<a href=\"https://tech.meituan.com/salon/#/35161\">聊聊酒店系统高可用架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|许关飞 美团研究员 2018/04/14</strong></p>\n <p><a href=\"http://dpurl.cn/KwRRM3V\">《高可用之中间件技术》</a>吴湘@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9XzOUnT\">《分布式开源监控系统CAT在美团点评演进》</a>尤勇@美团研究员</p>\n <p><a href=\"http://dpurl.cn/3FHVwpo\">《美团旅行住宿产品中心系统高可用实战》</a>槐国涛@美团酒店CRS商品负责人</p>\n <p><a href=\"http://dpurl.cn/Ynt6aVE\">《美团旅行酒店住宿订单系统高可用实战》</a>李磊@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/2gLXCnH\">《美团旅行直连系统高可用实战》</a>秦浏杰@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 033：<a href=\"https://tech.meituan.com/salon/#/31815\">企业信息化建设和安全管理</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|邓昀泽 美团企业平台研发负责人 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/2Cpj4tO\">《美团点评内部系统构建之路》</a>邓昀泽@美团企业平台研发部负责人</p>\n <p><a href=\"http://dpurl.cn/IGFzn0f\">《企业信息防护体系建设》</a>陆平@美亚柏科企业电子数据取证事业部副总</p>\n <p><a href=\"http://dpurl.cn/BTYUxbh\">《企业如何应对安全威胁》</a>游兴旺@美团企业平台研发高级总监</p>\n <hr>\n <p><strong>Tech Salon 032：<a href=\"https://tech.meituan.com/salon/#/31816\">移动开发热点技术—动态日志、监控、Hybrid、插件化</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|方锦涛 美团高级技术专家 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/hi6x3tX\">《线上问题排查体系构建：动态日志》</a> 陈潼@美团Android资深工程师</p>\n <p><a href=\"http://dpurl.cn/BsmtuwJ\">《混合应用工程化实践》</a> 李罡@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/xXexGwG\">《Caesium iOS启动时间监控》</a> 吴君阳@美团iOS工程师</p>\n <hr>\n <p><strong>Tech Salon 031：<a href=\"https://tech.meituan.com/salon/#/31470\">线下支付千万级订单服务—前后端架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/01/27</strong></p>\n <p><a href=\"http://dpurl.cn/83yGayf\">《扫码付前端可用性保障实践》</a> 田泱@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/uQv3mVL\">《业务系统的建设之路》</a>刘运@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1HxNpDH\">《Web离线化加载》</a> 于秋@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/tbNSxRx\">《基于WTL框架的Windows开发最佳实践》</a> 钱声鹏@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 030：<a href=\"https://tech.meituan.com/salon/#/30554\">餐饮生态高可用系统实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|温华剑 美团技术专家 2018/01/13</strong></p>\n <p><a href=\"http://dpurl.cn/i40jBTG\">《从“0”开始-美团收银客户端》</a>聂龙羽@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/8qoK8Fa\">《美团餐饮生态大数据架构实践》</a>牛江浩@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/u49UVD9\">《餐饮开放平台的高可用实践》</a>朱洋波@美团技术专家</p>\n <hr>\n <h2 id=\"美团线上沙龙\">美团线上沙龙</h2>\n <p>任意点击标题，就能在线观看视频或者文章</p>\n <p><strong>On-Line Salon 33：<a href=\"https://m.lizhiweike.com/classroom/10038952\">美团大脑 智享生活</a></strong> 分享人：王仲远 美团点评高级研究员</p>\n <p><strong>On-Line Salon 32：<a href=\"https://gitbook.cn/books/5bcf24b6211d0e68b1b788f0/index.html\">基于深度学习的计算机视觉技术在无人驾驶中的应用</a></strong> 分享人：刘宇达 美团点评资深算法工程师</p>\n <p><strong>On-Line Salon 31：<a href=\"https://m.lizhiweike.com/classroom/9363553\">利用响应式来解决客户端问题</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 30：<a href=\"https://gitbook.cn/books/5b927473780fdb5e97d2a3bc/index.html\">美团针对 Redis Rehash 机制的探索和实践</a></strong> 分享人：葛春林 美团点评资深工程师</p>\n <p><strong>On-Line Salon 29：<a href=\"https://m.lizhiweike.com/classroom/8660084\">Flutter 原理与实践</a></strong> 分享人：李少杰 美团点评资深工程师</p>\n <p><strong>On-Line Salon 28：<a href=\"https://gitbook.cn/books/5b8746c7ea7bc512755e4e36/index.html\">如何基于深度学习实现图像的智能审核</a></strong> 分享人：魏晓明 美团点评高级技术专家</p>\n <p><strong>On-Line Salon 27：<a href=\"https://gitbook.cn/books/5b7e5a44a63144311b8dbf2d/index.html\">美团客户端响应式框架 EasyReact 开源</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 26：<a href=\"https://gitbook.cn/books/5b752e45e8b81c0748e349e1/index.html\">移动持续集成在大众点评的实践</a></strong> 分享人：何智聪、邢轶 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 25：Kotlin <a href=\"https://gitbook.cn/books/5b6c28169f4dd1284bf82f99/index.html\">代码检查探索与实践</a></strong> 分享人：周佳 美团点评前端开发工程师</p>\n <p><strong>On-Line Salon 24：<a href=\"https://gitbook.cn/books/5b67bceca51b8d5f8ecbcf79/index.html\">静态资源增量更新的新实践</a></strong> 分享人：刘洋河 美团点评资深工程师</p>\n <p><strong>On-Line Salon 23：<a href=\"https://gitbook.cn/books/5b5ab5721642ed2ba79b6630/index.html\">点评侧用户行为检索系统</a></strong> 分享人：朱凯 美团点评资深工程师</p>\n <p><strong>On-Line Salon 22：<a href=\"https://gitbook.cn/books/5b43fc6316959658636f059e/index.html\">深度学习在美团搜索广告排序的应用实践</a></strong> 分享人：薛欢、梁玉林、王新 美团点评资深工程师</p>\n <p><strong>On-Line Salon 21：<a href=\"https://gitbook.cn/books/5ae9bcbeb02ff82d0d1b0517/index.html\">使用 Mpvue 开发微信小程序的最佳实践</a></strong> 分享人：胡成全 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 20：<a href=\"https://gitbook.cn/books/5ad4a60daf8f2f35290f46d5/index.html\">亿级用户个性化品类推荐实战解析</a></strong> 分享人：张晓宇 美团高级工程师</p>\n <p><strong>On-Line Salon 19：<a href=\"https://gitbook.cn/books/5ac2325c9e924a1dc029c6b7/index.html\">MVVM 在美团点评酒旅业务中的实践</a></strong> 分享人：吴卓 美团点评技术专家</p>\n <p><strong>On-Line Salon 18：<a href=\"https://gitbook.cn/books/5aa6850a9c3cf94d4915f97c/index.html\">深度学习在美团点评推荐业务中实践</a></strong> 分享人：陈文石 美团点评算法专家</p>\n <p>感恩！99位出品人和讲师，70多个小时的分享，感谢他们给我们带来一线的技术实践分享，感谢他们给我们2万多小伙伴送上技术的“饕餮盛宴”。除了美团技术团队的讲师们，我们还要特别感谢来自腾讯、蚂蚁金服、百度、京东、去哪儿、美亚柏科等公司的讲师们，感谢你们的付出和努力，我们期待新的一年会有更多的合作！</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/1df24ed2.png\" alt=\"2018全年出品人及讲师\"></p>\n</div>', '2019-07-24 15:09:50', 'JavaScript', '8790', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频0.5558272155973732', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频', '2019-07-24 15:09:50', ' 技术学院');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d091b70150', '<div class=\"content\">\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/e62aba45.png\" alt></p>\n <p>你好，2019</p>\n <p>再见，2018</p>\n <p>又到了一年辞旧迎新的时候，大家应该也和美美一样，在忙着总结回顾和展望规划吧。</p>\n <p>按老惯例，我们该献上技术年货了。今年首先出场的，是我们的技术沙龙大套餐！</p>\n <p>美团技术沙龙是由美团技术团队和美团科协主办的线下技术活动，每期沙龙邀请美团和同行公司的技术专家分享来自一线的实践经验，覆盖前端、后台、系统、数据、算法、测试、运维等技术领域。目前已在北京、上海、厦门、成都等城市成功举办了48期，吸引了超过2万名工程师报名参会。除了现场亲密交流之外，大家还在会后继续进微信群里切磋问道。</p>\n <p>我们同时也定期举办线上沙龙，有更多的朋友已经在线收听或收看过我们的直播。</p>\n <p>过去的一年里，我们一共举办了19场线下沙龙，16次线上沙龙，包括99位讲师，85个演讲，70+小时分享。除美团的几十位专家之外，还邀请了百度、蚂蚁金服、去哪儿、京东等同行。主题既有最火的AI热点——深度学习、强化学习、知识图谱，新潮技术Go、Kotlin、Flutter的落地实践，也有大规模互联网平台不可或缺的稳定性保障、高可用架构、监控体系、持续集成，还有接地气的运营系统、数据平台、配送调度的经验，更少不了CAT、mpvue、EasyReact这些火爆的开源项目……</p>\n <p>我们整理了今年所有线上线下沙龙的演讲稿和视频，分享给大家，希望能帮助大家在技术之路上继续追求卓越。</p>\n <p>还没有关注美团技术团队公众号（meituantech）的同学，赶快关注哟。</p>\n <p>现在，大家请闭眼，大餐来了～～～</p>\n <h2 id=\"美团线下沙龙\">美团线下沙龙</h2>\n <p>任意点击标题，就能直接查看视频及演讲稿</p>\n <p><strong>Tech Salon 048：<a href=\"https://tech.meituan.com/salon/#/44602\">AI在复杂业务场景中的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|何仁清 美团研究员 2018/12/22</strong></p>\n <p><a href=\"http://dpurl.cn/1aGUjwA\">《深度强化学习技术在智能调度中的应用》</a>王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jtvI8lt\">《深度学习在物流配送舆情监控中的应用》</a>李超@京东物流NLP方向资深算法工程师</p>\n <p><a href=\"http://dpurl.cn/UxQxdqg\">《美团搜索中的深度学习实践》</a>周翔@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 047：<a href=\"https://tech.meituan.com/salon/#/44452\">运营效率系统架构演进之道</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|阳纯飞 美团高级技术专家 2018/12/08</strong></p>\n <p><a href=\"http://dpurl.cn/e5FWi1r\">《面向O2O大促活动的高效运营系统实践》</a>李力@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/umMxuem\">《京东物流实时数据平台性能优化实践》</a>杨国斌@京东技术专家</p>\n <p><a href=\"http://dpurl.cn/S9p9Rct\">《外卖商家菜品运营效率提升实践》</a>罗震@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/C0DTDPI\">《外卖商户数据化运营体系建设》</a>李觊@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 046：<a href=\"https://tech.meituan.com/salon/#/44246\">AI在外卖配送的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王兴星&amp;郝井华 美团研究员 2018/11/25</strong></p>\n <p><a href=\"http://dpurl.cn/OG1VITL\">《预估模型在外卖广告的演进》</a>谢乾龙@美团外卖广告算法专家</p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《即时配送中的运筹优化技术》</a>郝井华@美团配送智能调度平台负责人</p>\n <p><a href=\"http://dpurl.cn/b2demu3\">《即时配送中的机器学习技术》</a>何仁清@美团配送AI方向负责人</p>\n <hr>\n <p><strong>Tech Salon 045：<a href=\"https://tech.meituan.com/salon/#/44241\">如何构建高性能、稳定的后端服务系统</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 |方建平 美团技术总监 2018/11/24</strong></p>\n <p><a href=\"http://dpurl.cn/h2tSH0d\">《美团度假交易稳定性建设实践》</a>韩建起@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1eEmiJa\">《美团配送智能调度系统架构演进》</a>郑伟@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/mOM70TU\">《美团稳定性保障平台Rhino》</a>占军@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/36eUWw7\">《美团外卖LBS服务实践》</a>易奎@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 044：<a href=\"https://tech.meituan.com/salon/#/42521\">千万级日活App的质量保证</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|李永刚 美团研究员 2018/09/15</strong></p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《AI语音产品测试》</a>于海生@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/EkrvqQQ\">《美团外卖客户端 UI 自动化测试实践》</a>刘健@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9wTSjRP\">《客户端QA效率工具》</a>赵晔@美团测试开发架构师</p>\n <hr>\n <p><strong>Tech Salon 043：<a href=\"https://tech.meituan.com/salon/#/42318\">美团金融千万级交易系统质量保障之路</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|赫大龙 美团高级技术专家 2018/09/01</strong></p>\n <p><a href=\"http://dpurl.cn/WBj4g1R\">《智能支付稳定性测试实战》</a>范勋伟@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/S3QC9nw\">《去哪儿网服务端自动化测试体系》</a>郑希文@去哪儿</p>\n <p><a href=\"http://dpurl.cn/bxidDmT\">《线上支付SDK质量保证体系》</a>张朋飞@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/ICnY9EY\">《质量运营演变之道》</a>符欣@美团高级开发工程师</p>\n <hr>\n <p><strong>Tech Salon 042：<a href=\"https://tech.meituan.com/salon/#/42098\">高效率前端与架构实战</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王鹤 美团高级技术专家 2018/08/26</strong></p>\n <p><a href=\"http://dpurl.cn/4zd1g7v\">《EH — 用黑科技打造全新的 Hybrid 体验》</a> 陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/atWgFPm\">《mpvue小程序开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/uBGnNe7\">《美团金融前端工程化最佳实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/C21IwKR\">《前端架构师应该做的事——架构模型与技术实践》</a>王鹤@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 041：<a href=\"https://tech.meituan.com/salon/#/41922\">企业级前端开发360°实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/08/18</strong></p>\n <p><a href=\"http://dpurl.cn/6enzQ6K\">《浅谈流量劫持与防治》</a>刘洋河@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/wJLdbeB\">《前端高可用性保障实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/WvMgJ22\">《跨容器高性能的离线化方案在美团的实践和探索》</a>龙佳文@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/6ea1W3X\">《前端遇上Go: 静态资源增量更新的新实践》</a>杨义天@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 040：<a href=\"https://tech.meituan.com/salon/#/41406\">前端遇上黑科技，打造全新界面体验与效率</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 | 冯湧 美团研发总监 2018/08/04</strong></p>\n <p><a href=\"http://dpurl.cn/dcUUsv7\">《EH——用黑科技打造的全新的 Hybrid 体验》</a>陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/omiEOIh\">《Vix——如何打造一个高效的前端组件库》</a>张胜@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/eSbf7eY\">《委以重任的Node.js——百亿级访问实践》</a>迪波威@百度资深软件工程师</p>\n <p><a href=\"http://dpurl.cn/1NLlrH7\">《构建时预渲染——网页首帧优化实践》</a>尚寒阳@美团资深研发工程师</p>\n <hr>\n <p><strong>Tech Salon 039：<a href=\"https://tech.meituan.com/salon/#/41065\">新思路打造移动端高效研发体系</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|周辉 美团资深架构师 2018/07/21</strong></p>\n <p><a href=\"http://dpurl.cn/rtXsz0X\">《Picasso在大众点评首页的应用》</a>虞惠文@美团Android开发工程师</p>\n <p><a href=\"http://dpurl.cn/gJkC96U\">《移动前后端开发解耦》</a>林晨@美团后端技术专家</p>\n <p><a href=\"http://dpurl.cn/kcEERJD\">《打造稳定、灵活、高效的运营配置平台》</a>蒋国宝@美团后端技术架构师</p>\n <p><a href=\"http://dpurl.cn/GEdFow2\">《移动持续集成实践》</a>何智聪@美团iOS技术专家</p>\n <hr>\n <p><strong>Tech Salon 038：<a href=\"https://tech.meituan.com/salon/#/40348\">旅游电商架构攻略指南</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|金孟哲 美团高级技术专家 2018/07/07</strong></p>\n <p><a href=\"http://dpurl.cn/9NA3IDI\">《旅游度假预订系统架构演进实践》</a> 金孟哲@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/pdIQztt\">《旅游度假多要素动态打包实践》</a> 王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/1mx2Mhn\">《旅游度假商品中心架构演进》</a> 徐泼@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jUc9Krm\">《直连低可信系统，实现高可用服务实践》</a> 郑旭@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 037：<a href=\"https://tech.meituan.com/salon/#/39548\">美团外卖两千万日订单背后的客户端技术架构</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|吴凯 美团高级技术专家 2018/06/23</strong></p>\n <p><a href=\"http://dpurl.cn/9VqeRQP\">《美团外卖客户端技术架构演进》</a>朱瑞利@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/b4BhI2i\">《客户端监控体系建设》</a>冯天锡@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/0WglRb7\">《客户端多端复用架构》</a>郑金光@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/BN8S6uV\">《客户端容灾能力体系》</a>李富强@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 036：<a href=\"https://tech.meituan.com/salon/#/38188\">大前端的动态化与可用性建设</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|洪磊 美团高级技术专家 2018/06/02</strong></p>\n <p><a href=\"http://dpurl.cn/4x8m29f\">《大前端高可用性建设》</a>李富强@美团资深前端工程师</p>\n <p><a href=\"http://dpurl.cn/aK72uB3\">《React fiber漫谈》</a>覃俊文@蚂蚁金服前端技术专家</p>\n <p><a href=\"http://dpurl.cn/uLlIi3q\">《小程序开发的新姿势 -mpvue 的应用和实践》</a>胡成全@美团前端技术专家</p>\n <p><a href=\"http://dpurl.cn/0n9ANpz\">《ReactNative性能优化企业级应用》</a>赵宏罡@腾讯资深前端开发工程师</p>\n <hr>\n <p><strong>Tech Salon 035：<a href=\"https://tech.meituan.com/salon/#/35673\">前端热点技术的企业级实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/04/21</strong></p>\n <p><a href=\"http://dpurl.cn/X8hmGar\">《前端遇上 Go——静态资源增量更新的新实践》</a>刘洋河@美团高级前端工程师</p>\n <p><a href=\"http://dpurl.cn/c2j4URx\">《金融扫码付 H5 迁移小程序拓荒之旅》</a>陈瑶@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/8VE6Q70\">《小程序开发的新姿势 - mpvue 开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 034：<a href=\"https://tech.meituan.com/salon/#/35161\">聊聊酒店系统高可用架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|许关飞 美团研究员 2018/04/14</strong></p>\n <p><a href=\"http://dpurl.cn/KwRRM3V\">《高可用之中间件技术》</a>吴湘@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9XzOUnT\">《分布式开源监控系统CAT在美团点评演进》</a>尤勇@美团研究员</p>\n <p><a href=\"http://dpurl.cn/3FHVwpo\">《美团旅行住宿产品中心系统高可用实战》</a>槐国涛@美团酒店CRS商品负责人</p>\n <p><a href=\"http://dpurl.cn/Ynt6aVE\">《美团旅行酒店住宿订单系统高可用实战》</a>李磊@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/2gLXCnH\">《美团旅行直连系统高可用实战》</a>秦浏杰@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 033：<a href=\"https://tech.meituan.com/salon/#/31815\">企业信息化建设和安全管理</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|邓昀泽 美团企业平台研发负责人 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/2Cpj4tO\">《美团点评内部系统构建之路》</a>邓昀泽@美团企业平台研发部负责人</p>\n <p><a href=\"http://dpurl.cn/IGFzn0f\">《企业信息防护体系建设》</a>陆平@美亚柏科企业电子数据取证事业部副总</p>\n <p><a href=\"http://dpurl.cn/BTYUxbh\">《企业如何应对安全威胁》</a>游兴旺@美团企业平台研发高级总监</p>\n <hr>\n <p><strong>Tech Salon 032：<a href=\"https://tech.meituan.com/salon/#/31816\">移动开发热点技术—动态日志、监控、Hybrid、插件化</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|方锦涛 美团高级技术专家 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/hi6x3tX\">《线上问题排查体系构建：动态日志》</a> 陈潼@美团Android资深工程师</p>\n <p><a href=\"http://dpurl.cn/BsmtuwJ\">《混合应用工程化实践》</a> 李罡@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/xXexGwG\">《Caesium iOS启动时间监控》</a> 吴君阳@美团iOS工程师</p>\n <hr>\n <p><strong>Tech Salon 031：<a href=\"https://tech.meituan.com/salon/#/31470\">线下支付千万级订单服务—前后端架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/01/27</strong></p>\n <p><a href=\"http://dpurl.cn/83yGayf\">《扫码付前端可用性保障实践》</a> 田泱@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/uQv3mVL\">《业务系统的建设之路》</a>刘运@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1HxNpDH\">《Web离线化加载》</a> 于秋@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/tbNSxRx\">《基于WTL框架的Windows开发最佳实践》</a> 钱声鹏@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 030：<a href=\"https://tech.meituan.com/salon/#/30554\">餐饮生态高可用系统实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|温华剑 美团技术专家 2018/01/13</strong></p>\n <p><a href=\"http://dpurl.cn/i40jBTG\">《从“0”开始-美团收银客户端》</a>聂龙羽@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/8qoK8Fa\">《美团餐饮生态大数据架构实践》</a>牛江浩@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/u49UVD9\">《餐饮开放平台的高可用实践》</a>朱洋波@美团技术专家</p>\n <hr>\n <h2 id=\"美团线上沙龙\">美团线上沙龙</h2>\n <p>任意点击标题，就能在线观看视频或者文章</p>\n <p><strong>On-Line Salon 33：<a href=\"https://m.lizhiweike.com/classroom/10038952\">美团大脑 智享生活</a></strong> 分享人：王仲远 美团点评高级研究员</p>\n <p><strong>On-Line Salon 32：<a href=\"https://gitbook.cn/books/5bcf24b6211d0e68b1b788f0/index.html\">基于深度学习的计算机视觉技术在无人驾驶中的应用</a></strong> 分享人：刘宇达 美团点评资深算法工程师</p>\n <p><strong>On-Line Salon 31：<a href=\"https://m.lizhiweike.com/classroom/9363553\">利用响应式来解决客户端问题</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 30：<a href=\"https://gitbook.cn/books/5b927473780fdb5e97d2a3bc/index.html\">美团针对 Redis Rehash 机制的探索和实践</a></strong> 分享人：葛春林 美团点评资深工程师</p>\n <p><strong>On-Line Salon 29：<a href=\"https://m.lizhiweike.com/classroom/8660084\">Flutter 原理与实践</a></strong> 分享人：李少杰 美团点评资深工程师</p>\n <p><strong>On-Line Salon 28：<a href=\"https://gitbook.cn/books/5b8746c7ea7bc512755e4e36/index.html\">如何基于深度学习实现图像的智能审核</a></strong> 分享人：魏晓明 美团点评高级技术专家</p>\n <p><strong>On-Line Salon 27：<a href=\"https://gitbook.cn/books/5b7e5a44a63144311b8dbf2d/index.html\">美团客户端响应式框架 EasyReact 开源</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 26：<a href=\"https://gitbook.cn/books/5b752e45e8b81c0748e349e1/index.html\">移动持续集成在大众点评的实践</a></strong> 分享人：何智聪、邢轶 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 25：Kotlin <a href=\"https://gitbook.cn/books/5b6c28169f4dd1284bf82f99/index.html\">代码检查探索与实践</a></strong> 分享人：周佳 美团点评前端开发工程师</p>\n <p><strong>On-Line Salon 24：<a href=\"https://gitbook.cn/books/5b67bceca51b8d5f8ecbcf79/index.html\">静态资源增量更新的新实践</a></strong> 分享人：刘洋河 美团点评资深工程师</p>\n <p><strong>On-Line Salon 23：<a href=\"https://gitbook.cn/books/5b5ab5721642ed2ba79b6630/index.html\">点评侧用户行为检索系统</a></strong> 分享人：朱凯 美团点评资深工程师</p>\n <p><strong>On-Line Salon 22：<a href=\"https://gitbook.cn/books/5b43fc6316959658636f059e/index.html\">深度学习在美团搜索广告排序的应用实践</a></strong> 分享人：薛欢、梁玉林、王新 美团点评资深工程师</p>\n <p><strong>On-Line Salon 21：<a href=\"https://gitbook.cn/books/5ae9bcbeb02ff82d0d1b0517/index.html\">使用 Mpvue 开发微信小程序的最佳实践</a></strong> 分享人：胡成全 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 20：<a href=\"https://gitbook.cn/books/5ad4a60daf8f2f35290f46d5/index.html\">亿级用户个性化品类推荐实战解析</a></strong> 分享人：张晓宇 美团高级工程师</p>\n <p><strong>On-Line Salon 19：<a href=\"https://gitbook.cn/books/5ac2325c9e924a1dc029c6b7/index.html\">MVVM 在美团点评酒旅业务中的实践</a></strong> 分享人：吴卓 美团点评技术专家</p>\n <p><strong>On-Line Salon 18：<a href=\"https://gitbook.cn/books/5aa6850a9c3cf94d4915f97c/index.html\">深度学习在美团点评推荐业务中实践</a></strong> 分享人：陈文石 美团点评算法专家</p>\n <p>感恩！99位出品人和讲师，70多个小时的分享，感谢他们给我们带来一线的技术实践分享，感谢他们给我们2万多小伙伴送上技术的“饕餮盛宴”。除了美团技术团队的讲师们，我们还要特别感谢来自腾讯、蚂蚁金服、百度、京东、去哪儿、美亚柏科等公司的讲师们，感谢你们的付出和努力，我们期待新的一年会有更多的合作！</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/1df24ed2.png\" alt=\"2018全年出品人及讲师\"></p>\n</div>', '2019-07-24 15:09:50', 'Java', '8790', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频0.9410340614139474', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频', '2019-07-24 15:09:50', ' 技术学院');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d091fd0151', '<div class=\"content\">\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/e62aba45.png\" alt></p>\n <p>你好，2019</p>\n <p>再见，2018</p>\n <p>又到了一年辞旧迎新的时候，大家应该也和美美一样，在忙着总结回顾和展望规划吧。</p>\n <p>按老惯例，我们该献上技术年货了。今年首先出场的，是我们的技术沙龙大套餐！</p>\n <p>美团技术沙龙是由美团技术团队和美团科协主办的线下技术活动，每期沙龙邀请美团和同行公司的技术专家分享来自一线的实践经验，覆盖前端、后台、系统、数据、算法、测试、运维等技术领域。目前已在北京、上海、厦门、成都等城市成功举办了48期，吸引了超过2万名工程师报名参会。除了现场亲密交流之外，大家还在会后继续进微信群里切磋问道。</p>\n <p>我们同时也定期举办线上沙龙，有更多的朋友已经在线收听或收看过我们的直播。</p>\n <p>过去的一年里，我们一共举办了19场线下沙龙，16次线上沙龙，包括99位讲师，85个演讲，70+小时分享。除美团的几十位专家之外，还邀请了百度、蚂蚁金服、去哪儿、京东等同行。主题既有最火的AI热点——深度学习、强化学习、知识图谱，新潮技术Go、Kotlin、Flutter的落地实践，也有大规模互联网平台不可或缺的稳定性保障、高可用架构、监控体系、持续集成，还有接地气的运营系统、数据平台、配送调度的经验，更少不了CAT、mpvue、EasyReact这些火爆的开源项目……</p>\n <p>我们整理了今年所有线上线下沙龙的演讲稿和视频，分享给大家，希望能帮助大家在技术之路上继续追求卓越。</p>\n <p>还没有关注美团技术团队公众号（meituantech）的同学，赶快关注哟。</p>\n <p>现在，大家请闭眼，大餐来了～～～</p>\n <h2 id=\"美团线下沙龙\">美团线下沙龙</h2>\n <p>任意点击标题，就能直接查看视频及演讲稿</p>\n <p><strong>Tech Salon 048：<a href=\"https://tech.meituan.com/salon/#/44602\">AI在复杂业务场景中的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|何仁清 美团研究员 2018/12/22</strong></p>\n <p><a href=\"http://dpurl.cn/1aGUjwA\">《深度强化学习技术在智能调度中的应用》</a>王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jtvI8lt\">《深度学习在物流配送舆情监控中的应用》</a>李超@京东物流NLP方向资深算法工程师</p>\n <p><a href=\"http://dpurl.cn/UxQxdqg\">《美团搜索中的深度学习实践》</a>周翔@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 047：<a href=\"https://tech.meituan.com/salon/#/44452\">运营效率系统架构演进之道</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|阳纯飞 美团高级技术专家 2018/12/08</strong></p>\n <p><a href=\"http://dpurl.cn/e5FWi1r\">《面向O2O大促活动的高效运营系统实践》</a>李力@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/umMxuem\">《京东物流实时数据平台性能优化实践》</a>杨国斌@京东技术专家</p>\n <p><a href=\"http://dpurl.cn/S9p9Rct\">《外卖商家菜品运营效率提升实践》</a>罗震@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/C0DTDPI\">《外卖商户数据化运营体系建设》</a>李觊@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 046：<a href=\"https://tech.meituan.com/salon/#/44246\">AI在外卖配送的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王兴星&amp;郝井华 美团研究员 2018/11/25</strong></p>\n <p><a href=\"http://dpurl.cn/OG1VITL\">《预估模型在外卖广告的演进》</a>谢乾龙@美团外卖广告算法专家</p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《即时配送中的运筹优化技术》</a>郝井华@美团配送智能调度平台负责人</p>\n <p><a href=\"http://dpurl.cn/b2demu3\">《即时配送中的机器学习技术》</a>何仁清@美团配送AI方向负责人</p>\n <hr>\n <p><strong>Tech Salon 045：<a href=\"https://tech.meituan.com/salon/#/44241\">如何构建高性能、稳定的后端服务系统</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 |方建平 美团技术总监 2018/11/24</strong></p>\n <p><a href=\"http://dpurl.cn/h2tSH0d\">《美团度假交易稳定性建设实践》</a>韩建起@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1eEmiJa\">《美团配送智能调度系统架构演进》</a>郑伟@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/mOM70TU\">《美团稳定性保障平台Rhino》</a>占军@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/36eUWw7\">《美团外卖LBS服务实践》</a>易奎@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 044：<a href=\"https://tech.meituan.com/salon/#/42521\">千万级日活App的质量保证</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|李永刚 美团研究员 2018/09/15</strong></p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《AI语音产品测试》</a>于海生@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/EkrvqQQ\">《美团外卖客户端 UI 自动化测试实践》</a>刘健@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9wTSjRP\">《客户端QA效率工具》</a>赵晔@美团测试开发架构师</p>\n <hr>\n <p><strong>Tech Salon 043：<a href=\"https://tech.meituan.com/salon/#/42318\">美团金融千万级交易系统质量保障之路</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|赫大龙 美团高级技术专家 2018/09/01</strong></p>\n <p><a href=\"http://dpurl.cn/WBj4g1R\">《智能支付稳定性测试实战》</a>范勋伟@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/S3QC9nw\">《去哪儿网服务端自动化测试体系》</a>郑希文@去哪儿</p>\n <p><a href=\"http://dpurl.cn/bxidDmT\">《线上支付SDK质量保证体系》</a>张朋飞@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/ICnY9EY\">《质量运营演变之道》</a>符欣@美团高级开发工程师</p>\n <hr>\n <p><strong>Tech Salon 042：<a href=\"https://tech.meituan.com/salon/#/42098\">高效率前端与架构实战</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王鹤 美团高级技术专家 2018/08/26</strong></p>\n <p><a href=\"http://dpurl.cn/4zd1g7v\">《EH — 用黑科技打造全新的 Hybrid 体验》</a> 陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/atWgFPm\">《mpvue小程序开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/uBGnNe7\">《美团金融前端工程化最佳实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/C21IwKR\">《前端架构师应该做的事——架构模型与技术实践》</a>王鹤@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 041：<a href=\"https://tech.meituan.com/salon/#/41922\">企业级前端开发360°实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/08/18</strong></p>\n <p><a href=\"http://dpurl.cn/6enzQ6K\">《浅谈流量劫持与防治》</a>刘洋河@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/wJLdbeB\">《前端高可用性保障实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/WvMgJ22\">《跨容器高性能的离线化方案在美团的实践和探索》</a>龙佳文@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/6ea1W3X\">《前端遇上Go: 静态资源增量更新的新实践》</a>杨义天@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 040：<a href=\"https://tech.meituan.com/salon/#/41406\">前端遇上黑科技，打造全新界面体验与效率</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 | 冯湧 美团研发总监 2018/08/04</strong></p>\n <p><a href=\"http://dpurl.cn/dcUUsv7\">《EH——用黑科技打造的全新的 Hybrid 体验》</a>陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/omiEOIh\">《Vix——如何打造一个高效的前端组件库》</a>张胜@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/eSbf7eY\">《委以重任的Node.js——百亿级访问实践》</a>迪波威@百度资深软件工程师</p>\n <p><a href=\"http://dpurl.cn/1NLlrH7\">《构建时预渲染——网页首帧优化实践》</a>尚寒阳@美团资深研发工程师</p>\n <hr>\n <p><strong>Tech Salon 039：<a href=\"https://tech.meituan.com/salon/#/41065\">新思路打造移动端高效研发体系</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|周辉 美团资深架构师 2018/07/21</strong></p>\n <p><a href=\"http://dpurl.cn/rtXsz0X\">《Picasso在大众点评首页的应用》</a>虞惠文@美团Android开发工程师</p>\n <p><a href=\"http://dpurl.cn/gJkC96U\">《移动前后端开发解耦》</a>林晨@美团后端技术专家</p>\n <p><a href=\"http://dpurl.cn/kcEERJD\">《打造稳定、灵活、高效的运营配置平台》</a>蒋国宝@美团后端技术架构师</p>\n <p><a href=\"http://dpurl.cn/GEdFow2\">《移动持续集成实践》</a>何智聪@美团iOS技术专家</p>\n <hr>\n <p><strong>Tech Salon 038：<a href=\"https://tech.meituan.com/salon/#/40348\">旅游电商架构攻略指南</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|金孟哲 美团高级技术专家 2018/07/07</strong></p>\n <p><a href=\"http://dpurl.cn/9NA3IDI\">《旅游度假预订系统架构演进实践》</a> 金孟哲@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/pdIQztt\">《旅游度假多要素动态打包实践》</a> 王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/1mx2Mhn\">《旅游度假商品中心架构演进》</a> 徐泼@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jUc9Krm\">《直连低可信系统，实现高可用服务实践》</a> 郑旭@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 037：<a href=\"https://tech.meituan.com/salon/#/39548\">美团外卖两千万日订单背后的客户端技术架构</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|吴凯 美团高级技术专家 2018/06/23</strong></p>\n <p><a href=\"http://dpurl.cn/9VqeRQP\">《美团外卖客户端技术架构演进》</a>朱瑞利@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/b4BhI2i\">《客户端监控体系建设》</a>冯天锡@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/0WglRb7\">《客户端多端复用架构》</a>郑金光@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/BN8S6uV\">《客户端容灾能力体系》</a>李富强@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 036：<a href=\"https://tech.meituan.com/salon/#/38188\">大前端的动态化与可用性建设</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|洪磊 美团高级技术专家 2018/06/02</strong></p>\n <p><a href=\"http://dpurl.cn/4x8m29f\">《大前端高可用性建设》</a>李富强@美团资深前端工程师</p>\n <p><a href=\"http://dpurl.cn/aK72uB3\">《React fiber漫谈》</a>覃俊文@蚂蚁金服前端技术专家</p>\n <p><a href=\"http://dpurl.cn/uLlIi3q\">《小程序开发的新姿势 -mpvue 的应用和实践》</a>胡成全@美团前端技术专家</p>\n <p><a href=\"http://dpurl.cn/0n9ANpz\">《ReactNative性能优化企业级应用》</a>赵宏罡@腾讯资深前端开发工程师</p>\n <hr>\n <p><strong>Tech Salon 035：<a href=\"https://tech.meituan.com/salon/#/35673\">前端热点技术的企业级实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/04/21</strong></p>\n <p><a href=\"http://dpurl.cn/X8hmGar\">《前端遇上 Go——静态资源增量更新的新实践》</a>刘洋河@美团高级前端工程师</p>\n <p><a href=\"http://dpurl.cn/c2j4URx\">《金融扫码付 H5 迁移小程序拓荒之旅》</a>陈瑶@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/8VE6Q70\">《小程序开发的新姿势 - mpvue 开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 034：<a href=\"https://tech.meituan.com/salon/#/35161\">聊聊酒店系统高可用架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|许关飞 美团研究员 2018/04/14</strong></p>\n <p><a href=\"http://dpurl.cn/KwRRM3V\">《高可用之中间件技术》</a>吴湘@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9XzOUnT\">《分布式开源监控系统CAT在美团点评演进》</a>尤勇@美团研究员</p>\n <p><a href=\"http://dpurl.cn/3FHVwpo\">《美团旅行住宿产品中心系统高可用实战》</a>槐国涛@美团酒店CRS商品负责人</p>\n <p><a href=\"http://dpurl.cn/Ynt6aVE\">《美团旅行酒店住宿订单系统高可用实战》</a>李磊@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/2gLXCnH\">《美团旅行直连系统高可用实战》</a>秦浏杰@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 033：<a href=\"https://tech.meituan.com/salon/#/31815\">企业信息化建设和安全管理</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|邓昀泽 美团企业平台研发负责人 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/2Cpj4tO\">《美团点评内部系统构建之路》</a>邓昀泽@美团企业平台研发部负责人</p>\n <p><a href=\"http://dpurl.cn/IGFzn0f\">《企业信息防护体系建设》</a>陆平@美亚柏科企业电子数据取证事业部副总</p>\n <p><a href=\"http://dpurl.cn/BTYUxbh\">《企业如何应对安全威胁》</a>游兴旺@美团企业平台研发高级总监</p>\n <hr>\n <p><strong>Tech Salon 032：<a href=\"https://tech.meituan.com/salon/#/31816\">移动开发热点技术—动态日志、监控、Hybrid、插件化</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|方锦涛 美团高级技术专家 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/hi6x3tX\">《线上问题排查体系构建：动态日志》</a> 陈潼@美团Android资深工程师</p>\n <p><a href=\"http://dpurl.cn/BsmtuwJ\">《混合应用工程化实践》</a> 李罡@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/xXexGwG\">《Caesium iOS启动时间监控》</a> 吴君阳@美团iOS工程师</p>\n <hr>\n <p><strong>Tech Salon 031：<a href=\"https://tech.meituan.com/salon/#/31470\">线下支付千万级订单服务—前后端架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/01/27</strong></p>\n <p><a href=\"http://dpurl.cn/83yGayf\">《扫码付前端可用性保障实践》</a> 田泱@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/uQv3mVL\">《业务系统的建设之路》</a>刘运@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1HxNpDH\">《Web离线化加载》</a> 于秋@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/tbNSxRx\">《基于WTL框架的Windows开发最佳实践》</a> 钱声鹏@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 030：<a href=\"https://tech.meituan.com/salon/#/30554\">餐饮生态高可用系统实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|温华剑 美团技术专家 2018/01/13</strong></p>\n <p><a href=\"http://dpurl.cn/i40jBTG\">《从“0”开始-美团收银客户端》</a>聂龙羽@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/8qoK8Fa\">《美团餐饮生态大数据架构实践》</a>牛江浩@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/u49UVD9\">《餐饮开放平台的高可用实践》</a>朱洋波@美团技术专家</p>\n <hr>\n <h2 id=\"美团线上沙龙\">美团线上沙龙</h2>\n <p>任意点击标题，就能在线观看视频或者文章</p>\n <p><strong>On-Line Salon 33：<a href=\"https://m.lizhiweike.com/classroom/10038952\">美团大脑 智享生活</a></strong> 分享人：王仲远 美团点评高级研究员</p>\n <p><strong>On-Line Salon 32：<a href=\"https://gitbook.cn/books/5bcf24b6211d0e68b1b788f0/index.html\">基于深度学习的计算机视觉技术在无人驾驶中的应用</a></strong> 分享人：刘宇达 美团点评资深算法工程师</p>\n <p><strong>On-Line Salon 31：<a href=\"https://m.lizhiweike.com/classroom/9363553\">利用响应式来解决客户端问题</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 30：<a href=\"https://gitbook.cn/books/5b927473780fdb5e97d2a3bc/index.html\">美团针对 Redis Rehash 机制的探索和实践</a></strong> 分享人：葛春林 美团点评资深工程师</p>\n <p><strong>On-Line Salon 29：<a href=\"https://m.lizhiweike.com/classroom/8660084\">Flutter 原理与实践</a></strong> 分享人：李少杰 美团点评资深工程师</p>\n <p><strong>On-Line Salon 28：<a href=\"https://gitbook.cn/books/5b8746c7ea7bc512755e4e36/index.html\">如何基于深度学习实现图像的智能审核</a></strong> 分享人：魏晓明 美团点评高级技术专家</p>\n <p><strong>On-Line Salon 27：<a href=\"https://gitbook.cn/books/5b7e5a44a63144311b8dbf2d/index.html\">美团客户端响应式框架 EasyReact 开源</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 26：<a href=\"https://gitbook.cn/books/5b752e45e8b81c0748e349e1/index.html\">移动持续集成在大众点评的实践</a></strong> 分享人：何智聪、邢轶 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 25：Kotlin <a href=\"https://gitbook.cn/books/5b6c28169f4dd1284bf82f99/index.html\">代码检查探索与实践</a></strong> 分享人：周佳 美团点评前端开发工程师</p>\n <p><strong>On-Line Salon 24：<a href=\"https://gitbook.cn/books/5b67bceca51b8d5f8ecbcf79/index.html\">静态资源增量更新的新实践</a></strong> 分享人：刘洋河 美团点评资深工程师</p>\n <p><strong>On-Line Salon 23：<a href=\"https://gitbook.cn/books/5b5ab5721642ed2ba79b6630/index.html\">点评侧用户行为检索系统</a></strong> 分享人：朱凯 美团点评资深工程师</p>\n <p><strong>On-Line Salon 22：<a href=\"https://gitbook.cn/books/5b43fc6316959658636f059e/index.html\">深度学习在美团搜索广告排序的应用实践</a></strong> 分享人：薛欢、梁玉林、王新 美团点评资深工程师</p>\n <p><strong>On-Line Salon 21：<a href=\"https://gitbook.cn/books/5ae9bcbeb02ff82d0d1b0517/index.html\">使用 Mpvue 开发微信小程序的最佳实践</a></strong> 分享人：胡成全 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 20：<a href=\"https://gitbook.cn/books/5ad4a60daf8f2f35290f46d5/index.html\">亿级用户个性化品类推荐实战解析</a></strong> 分享人：张晓宇 美团高级工程师</p>\n <p><strong>On-Line Salon 19：<a href=\"https://gitbook.cn/books/5ac2325c9e924a1dc029c6b7/index.html\">MVVM 在美团点评酒旅业务中的实践</a></strong> 分享人：吴卓 美团点评技术专家</p>\n <p><strong>On-Line Salon 18：<a href=\"https://gitbook.cn/books/5aa6850a9c3cf94d4915f97c/index.html\">深度学习在美团点评推荐业务中实践</a></strong> 分享人：陈文石 美团点评算法专家</p>\n <p>感恩！99位出品人和讲师，70多个小时的分享，感谢他们给我们带来一线的技术实践分享，感谢他们给我们2万多小伙伴送上技术的“饕餮盛宴”。除了美团技术团队的讲师们，我们还要特别感谢来自腾讯、蚂蚁金服、百度、京东、去哪儿、美亚柏科等公司的讲师们，感谢你们的付出和努力，我们期待新的一年会有更多的合作！</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/1df24ed2.png\" alt=\"2018全年出品人及讲师\"></p>\n</div>', '2019-07-24 15:09:50', '数据库', '8790', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频0.678335721423611', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频', '2019-07-24 15:09:50', ' 技术学院');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d0926f0152', '<div class=\"content\">\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/e62aba45.png\" alt></p>\n <p>你好，2019</p>\n <p>再见，2018</p>\n <p>又到了一年辞旧迎新的时候，大家应该也和美美一样，在忙着总结回顾和展望规划吧。</p>\n <p>按老惯例，我们该献上技术年货了。今年首先出场的，是我们的技术沙龙大套餐！</p>\n <p>美团技术沙龙是由美团技术团队和美团科协主办的线下技术活动，每期沙龙邀请美团和同行公司的技术专家分享来自一线的实践经验，覆盖前端、后台、系统、数据、算法、测试、运维等技术领域。目前已在北京、上海、厦门、成都等城市成功举办了48期，吸引了超过2万名工程师报名参会。除了现场亲密交流之外，大家还在会后继续进微信群里切磋问道。</p>\n <p>我们同时也定期举办线上沙龙，有更多的朋友已经在线收听或收看过我们的直播。</p>\n <p>过去的一年里，我们一共举办了19场线下沙龙，16次线上沙龙，包括99位讲师，85个演讲，70+小时分享。除美团的几十位专家之外，还邀请了百度、蚂蚁金服、去哪儿、京东等同行。主题既有最火的AI热点——深度学习、强化学习、知识图谱，新潮技术Go、Kotlin、Flutter的落地实践，也有大规模互联网平台不可或缺的稳定性保障、高可用架构、监控体系、持续集成，还有接地气的运营系统、数据平台、配送调度的经验，更少不了CAT、mpvue、EasyReact这些火爆的开源项目……</p>\n <p>我们整理了今年所有线上线下沙龙的演讲稿和视频，分享给大家，希望能帮助大家在技术之路上继续追求卓越。</p>\n <p>还没有关注美团技术团队公众号（meituantech）的同学，赶快关注哟。</p>\n <p>现在，大家请闭眼，大餐来了～～～</p>\n <h2 id=\"美团线下沙龙\">美团线下沙龙</h2>\n <p>任意点击标题，就能直接查看视频及演讲稿</p>\n <p><strong>Tech Salon 048：<a href=\"https://tech.meituan.com/salon/#/44602\">AI在复杂业务场景中的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|何仁清 美团研究员 2018/12/22</strong></p>\n <p><a href=\"http://dpurl.cn/1aGUjwA\">《深度强化学习技术在智能调度中的应用》</a>王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jtvI8lt\">《深度学习在物流配送舆情监控中的应用》</a>李超@京东物流NLP方向资深算法工程师</p>\n <p><a href=\"http://dpurl.cn/UxQxdqg\">《美团搜索中的深度学习实践》</a>周翔@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 047：<a href=\"https://tech.meituan.com/salon/#/44452\">运营效率系统架构演进之道</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|阳纯飞 美团高级技术专家 2018/12/08</strong></p>\n <p><a href=\"http://dpurl.cn/e5FWi1r\">《面向O2O大促活动的高效运营系统实践》</a>李力@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/umMxuem\">《京东物流实时数据平台性能优化实践》</a>杨国斌@京东技术专家</p>\n <p><a href=\"http://dpurl.cn/S9p9Rct\">《外卖商家菜品运营效率提升实践》</a>罗震@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/C0DTDPI\">《外卖商户数据化运营体系建设》</a>李觊@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 046：<a href=\"https://tech.meituan.com/salon/#/44246\">AI在外卖配送的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王兴星&amp;郝井华 美团研究员 2018/11/25</strong></p>\n <p><a href=\"http://dpurl.cn/OG1VITL\">《预估模型在外卖广告的演进》</a>谢乾龙@美团外卖广告算法专家</p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《即时配送中的运筹优化技术》</a>郝井华@美团配送智能调度平台负责人</p>\n <p><a href=\"http://dpurl.cn/b2demu3\">《即时配送中的机器学习技术》</a>何仁清@美团配送AI方向负责人</p>\n <hr>\n <p><strong>Tech Salon 045：<a href=\"https://tech.meituan.com/salon/#/44241\">如何构建高性能、稳定的后端服务系统</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 |方建平 美团技术总监 2018/11/24</strong></p>\n <p><a href=\"http://dpurl.cn/h2tSH0d\">《美团度假交易稳定性建设实践》</a>韩建起@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1eEmiJa\">《美团配送智能调度系统架构演进》</a>郑伟@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/mOM70TU\">《美团稳定性保障平台Rhino》</a>占军@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/36eUWw7\">《美团外卖LBS服务实践》</a>易奎@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 044：<a href=\"https://tech.meituan.com/salon/#/42521\">千万级日活App的质量保证</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|李永刚 美团研究员 2018/09/15</strong></p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《AI语音产品测试》</a>于海生@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/EkrvqQQ\">《美团外卖客户端 UI 自动化测试实践》</a>刘健@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9wTSjRP\">《客户端QA效率工具》</a>赵晔@美团测试开发架构师</p>\n <hr>\n <p><strong>Tech Salon 043：<a href=\"https://tech.meituan.com/salon/#/42318\">美团金融千万级交易系统质量保障之路</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|赫大龙 美团高级技术专家 2018/09/01</strong></p>\n <p><a href=\"http://dpurl.cn/WBj4g1R\">《智能支付稳定性测试实战》</a>范勋伟@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/S3QC9nw\">《去哪儿网服务端自动化测试体系》</a>郑希文@去哪儿</p>\n <p><a href=\"http://dpurl.cn/bxidDmT\">《线上支付SDK质量保证体系》</a>张朋飞@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/ICnY9EY\">《质量运营演变之道》</a>符欣@美团高级开发工程师</p>\n <hr>\n <p><strong>Tech Salon 042：<a href=\"https://tech.meituan.com/salon/#/42098\">高效率前端与架构实战</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王鹤 美团高级技术专家 2018/08/26</strong></p>\n <p><a href=\"http://dpurl.cn/4zd1g7v\">《EH — 用黑科技打造全新的 Hybrid 体验》</a> 陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/atWgFPm\">《mpvue小程序开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/uBGnNe7\">《美团金融前端工程化最佳实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/C21IwKR\">《前端架构师应该做的事——架构模型与技术实践》</a>王鹤@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 041：<a href=\"https://tech.meituan.com/salon/#/41922\">企业级前端开发360°实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/08/18</strong></p>\n <p><a href=\"http://dpurl.cn/6enzQ6K\">《浅谈流量劫持与防治》</a>刘洋河@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/wJLdbeB\">《前端高可用性保障实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/WvMgJ22\">《跨容器高性能的离线化方案在美团的实践和探索》</a>龙佳文@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/6ea1W3X\">《前端遇上Go: 静态资源增量更新的新实践》</a>杨义天@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 040：<a href=\"https://tech.meituan.com/salon/#/41406\">前端遇上黑科技，打造全新界面体验与效率</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 | 冯湧 美团研发总监 2018/08/04</strong></p>\n <p><a href=\"http://dpurl.cn/dcUUsv7\">《EH——用黑科技打造的全新的 Hybrid 体验》</a>陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/omiEOIh\">《Vix——如何打造一个高效的前端组件库》</a>张胜@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/eSbf7eY\">《委以重任的Node.js——百亿级访问实践》</a>迪波威@百度资深软件工程师</p>\n <p><a href=\"http://dpurl.cn/1NLlrH7\">《构建时预渲染——网页首帧优化实践》</a>尚寒阳@美团资深研发工程师</p>\n <hr>\n <p><strong>Tech Salon 039：<a href=\"https://tech.meituan.com/salon/#/41065\">新思路打造移动端高效研发体系</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|周辉 美团资深架构师 2018/07/21</strong></p>\n <p><a href=\"http://dpurl.cn/rtXsz0X\">《Picasso在大众点评首页的应用》</a>虞惠文@美团Android开发工程师</p>\n <p><a href=\"http://dpurl.cn/gJkC96U\">《移动前后端开发解耦》</a>林晨@美团后端技术专家</p>\n <p><a href=\"http://dpurl.cn/kcEERJD\">《打造稳定、灵活、高效的运营配置平台》</a>蒋国宝@美团后端技术架构师</p>\n <p><a href=\"http://dpurl.cn/GEdFow2\">《移动持续集成实践》</a>何智聪@美团iOS技术专家</p>\n <hr>\n <p><strong>Tech Salon 038：<a href=\"https://tech.meituan.com/salon/#/40348\">旅游电商架构攻略指南</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|金孟哲 美团高级技术专家 2018/07/07</strong></p>\n <p><a href=\"http://dpurl.cn/9NA3IDI\">《旅游度假预订系统架构演进实践》</a> 金孟哲@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/pdIQztt\">《旅游度假多要素动态打包实践》</a> 王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/1mx2Mhn\">《旅游度假商品中心架构演进》</a> 徐泼@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jUc9Krm\">《直连低可信系统，实现高可用服务实践》</a> 郑旭@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 037：<a href=\"https://tech.meituan.com/salon/#/39548\">美团外卖两千万日订单背后的客户端技术架构</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|吴凯 美团高级技术专家 2018/06/23</strong></p>\n <p><a href=\"http://dpurl.cn/9VqeRQP\">《美团外卖客户端技术架构演进》</a>朱瑞利@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/b4BhI2i\">《客户端监控体系建设》</a>冯天锡@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/0WglRb7\">《客户端多端复用架构》</a>郑金光@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/BN8S6uV\">《客户端容灾能力体系》</a>李富强@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 036：<a href=\"https://tech.meituan.com/salon/#/38188\">大前端的动态化与可用性建设</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|洪磊 美团高级技术专家 2018/06/02</strong></p>\n <p><a href=\"http://dpurl.cn/4x8m29f\">《大前端高可用性建设》</a>李富强@美团资深前端工程师</p>\n <p><a href=\"http://dpurl.cn/aK72uB3\">《React fiber漫谈》</a>覃俊文@蚂蚁金服前端技术专家</p>\n <p><a href=\"http://dpurl.cn/uLlIi3q\">《小程序开发的新姿势 -mpvue 的应用和实践》</a>胡成全@美团前端技术专家</p>\n <p><a href=\"http://dpurl.cn/0n9ANpz\">《ReactNative性能优化企业级应用》</a>赵宏罡@腾讯资深前端开发工程师</p>\n <hr>\n <p><strong>Tech Salon 035：<a href=\"https://tech.meituan.com/salon/#/35673\">前端热点技术的企业级实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/04/21</strong></p>\n <p><a href=\"http://dpurl.cn/X8hmGar\">《前端遇上 Go——静态资源增量更新的新实践》</a>刘洋河@美团高级前端工程师</p>\n <p><a href=\"http://dpurl.cn/c2j4URx\">《金融扫码付 H5 迁移小程序拓荒之旅》</a>陈瑶@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/8VE6Q70\">《小程序开发的新姿势 - mpvue 开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 034：<a href=\"https://tech.meituan.com/salon/#/35161\">聊聊酒店系统高可用架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|许关飞 美团研究员 2018/04/14</strong></p>\n <p><a href=\"http://dpurl.cn/KwRRM3V\">《高可用之中间件技术》</a>吴湘@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9XzOUnT\">《分布式开源监控系统CAT在美团点评演进》</a>尤勇@美团研究员</p>\n <p><a href=\"http://dpurl.cn/3FHVwpo\">《美团旅行住宿产品中心系统高可用实战》</a>槐国涛@美团酒店CRS商品负责人</p>\n <p><a href=\"http://dpurl.cn/Ynt6aVE\">《美团旅行酒店住宿订单系统高可用实战》</a>李磊@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/2gLXCnH\">《美团旅行直连系统高可用实战》</a>秦浏杰@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 033：<a href=\"https://tech.meituan.com/salon/#/31815\">企业信息化建设和安全管理</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|邓昀泽 美团企业平台研发负责人 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/2Cpj4tO\">《美团点评内部系统构建之路》</a>邓昀泽@美团企业平台研发部负责人</p>\n <p><a href=\"http://dpurl.cn/IGFzn0f\">《企业信息防护体系建设》</a>陆平@美亚柏科企业电子数据取证事业部副总</p>\n <p><a href=\"http://dpurl.cn/BTYUxbh\">《企业如何应对安全威胁》</a>游兴旺@美团企业平台研发高级总监</p>\n <hr>\n <p><strong>Tech Salon 032：<a href=\"https://tech.meituan.com/salon/#/31816\">移动开发热点技术—动态日志、监控、Hybrid、插件化</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|方锦涛 美团高级技术专家 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/hi6x3tX\">《线上问题排查体系构建：动态日志》</a> 陈潼@美团Android资深工程师</p>\n <p><a href=\"http://dpurl.cn/BsmtuwJ\">《混合应用工程化实践》</a> 李罡@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/xXexGwG\">《Caesium iOS启动时间监控》</a> 吴君阳@美团iOS工程师</p>\n <hr>\n <p><strong>Tech Salon 031：<a href=\"https://tech.meituan.com/salon/#/31470\">线下支付千万级订单服务—前后端架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/01/27</strong></p>\n <p><a href=\"http://dpurl.cn/83yGayf\">《扫码付前端可用性保障实践》</a> 田泱@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/uQv3mVL\">《业务系统的建设之路》</a>刘运@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1HxNpDH\">《Web离线化加载》</a> 于秋@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/tbNSxRx\">《基于WTL框架的Windows开发最佳实践》</a> 钱声鹏@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 030：<a href=\"https://tech.meituan.com/salon/#/30554\">餐饮生态高可用系统实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|温华剑 美团技术专家 2018/01/13</strong></p>\n <p><a href=\"http://dpurl.cn/i40jBTG\">《从“0”开始-美团收银客户端》</a>聂龙羽@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/8qoK8Fa\">《美团餐饮生态大数据架构实践》</a>牛江浩@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/u49UVD9\">《餐饮开放平台的高可用实践》</a>朱洋波@美团技术专家</p>\n <hr>\n <h2 id=\"美团线上沙龙\">美团线上沙龙</h2>\n <p>任意点击标题，就能在线观看视频或者文章</p>\n <p><strong>On-Line Salon 33：<a href=\"https://m.lizhiweike.com/classroom/10038952\">美团大脑 智享生活</a></strong> 分享人：王仲远 美团点评高级研究员</p>\n <p><strong>On-Line Salon 32：<a href=\"https://gitbook.cn/books/5bcf24b6211d0e68b1b788f0/index.html\">基于深度学习的计算机视觉技术在无人驾驶中的应用</a></strong> 分享人：刘宇达 美团点评资深算法工程师</p>\n <p><strong>On-Line Salon 31：<a href=\"https://m.lizhiweike.com/classroom/9363553\">利用响应式来解决客户端问题</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 30：<a href=\"https://gitbook.cn/books/5b927473780fdb5e97d2a3bc/index.html\">美团针对 Redis Rehash 机制的探索和实践</a></strong> 分享人：葛春林 美团点评资深工程师</p>\n <p><strong>On-Line Salon 29：<a href=\"https://m.lizhiweike.com/classroom/8660084\">Flutter 原理与实践</a></strong> 分享人：李少杰 美团点评资深工程师</p>\n <p><strong>On-Line Salon 28：<a href=\"https://gitbook.cn/books/5b8746c7ea7bc512755e4e36/index.html\">如何基于深度学习实现图像的智能审核</a></strong> 分享人：魏晓明 美团点评高级技术专家</p>\n <p><strong>On-Line Salon 27：<a href=\"https://gitbook.cn/books/5b7e5a44a63144311b8dbf2d/index.html\">美团客户端响应式框架 EasyReact 开源</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 26：<a href=\"https://gitbook.cn/books/5b752e45e8b81c0748e349e1/index.html\">移动持续集成在大众点评的实践</a></strong> 分享人：何智聪、邢轶 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 25：Kotlin <a href=\"https://gitbook.cn/books/5b6c28169f4dd1284bf82f99/index.html\">代码检查探索与实践</a></strong> 分享人：周佳 美团点评前端开发工程师</p>\n <p><strong>On-Line Salon 24：<a href=\"https://gitbook.cn/books/5b67bceca51b8d5f8ecbcf79/index.html\">静态资源增量更新的新实践</a></strong> 分享人：刘洋河 美团点评资深工程师</p>\n <p><strong>On-Line Salon 23：<a href=\"https://gitbook.cn/books/5b5ab5721642ed2ba79b6630/index.html\">点评侧用户行为检索系统</a></strong> 分享人：朱凯 美团点评资深工程师</p>\n <p><strong>On-Line Salon 22：<a href=\"https://gitbook.cn/books/5b43fc6316959658636f059e/index.html\">深度学习在美团搜索广告排序的应用实践</a></strong> 分享人：薛欢、梁玉林、王新 美团点评资深工程师</p>\n <p><strong>On-Line Salon 21：<a href=\"https://gitbook.cn/books/5ae9bcbeb02ff82d0d1b0517/index.html\">使用 Mpvue 开发微信小程序的最佳实践</a></strong> 分享人：胡成全 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 20：<a href=\"https://gitbook.cn/books/5ad4a60daf8f2f35290f46d5/index.html\">亿级用户个性化品类推荐实战解析</a></strong> 分享人：张晓宇 美团高级工程师</p>\n <p><strong>On-Line Salon 19：<a href=\"https://gitbook.cn/books/5ac2325c9e924a1dc029c6b7/index.html\">MVVM 在美团点评酒旅业务中的实践</a></strong> 分享人：吴卓 美团点评技术专家</p>\n <p><strong>On-Line Salon 18：<a href=\"https://gitbook.cn/books/5aa6850a9c3cf94d4915f97c/index.html\">深度学习在美团点评推荐业务中实践</a></strong> 分享人：陈文石 美团点评算法专家</p>\n <p>感恩！99位出品人和讲师，70多个小时的分享，感谢他们给我们带来一线的技术实践分享，感谢他们给我们2万多小伙伴送上技术的“饕餮盛宴”。除了美团技术团队的讲师们，我们还要特别感谢来自腾讯、蚂蚁金服、百度、京东、去哪儿、美亚柏科等公司的讲师们，感谢你们的付出和努力，我们期待新的一年会有更多的合作！</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/1df24ed2.png\" alt=\"2018全年出品人及讲师\"></p>\n</div>', '2019-07-24 15:09:50', 'Vuex', '8790', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频0.052850345901401585', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频', '2019-07-24 15:09:50', ' 技术学院');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d092af0153', '<div class=\"content\">\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/e62aba45.png\" alt></p>\n <p>你好，2019</p>\n <p>再见，2018</p>\n <p>又到了一年辞旧迎新的时候，大家应该也和美美一样，在忙着总结回顾和展望规划吧。</p>\n <p>按老惯例，我们该献上技术年货了。今年首先出场的，是我们的技术沙龙大套餐！</p>\n <p>美团技术沙龙是由美团技术团队和美团科协主办的线下技术活动，每期沙龙邀请美团和同行公司的技术专家分享来自一线的实践经验，覆盖前端、后台、系统、数据、算法、测试、运维等技术领域。目前已在北京、上海、厦门、成都等城市成功举办了48期，吸引了超过2万名工程师报名参会。除了现场亲密交流之外，大家还在会后继续进微信群里切磋问道。</p>\n <p>我们同时也定期举办线上沙龙，有更多的朋友已经在线收听或收看过我们的直播。</p>\n <p>过去的一年里，我们一共举办了19场线下沙龙，16次线上沙龙，包括99位讲师，85个演讲，70+小时分享。除美团的几十位专家之外，还邀请了百度、蚂蚁金服、去哪儿、京东等同行。主题既有最火的AI热点——深度学习、强化学习、知识图谱，新潮技术Go、Kotlin、Flutter的落地实践，也有大规模互联网平台不可或缺的稳定性保障、高可用架构、监控体系、持续集成，还有接地气的运营系统、数据平台、配送调度的经验，更少不了CAT、mpvue、EasyReact这些火爆的开源项目……</p>\n <p>我们整理了今年所有线上线下沙龙的演讲稿和视频，分享给大家，希望能帮助大家在技术之路上继续追求卓越。</p>\n <p>还没有关注美团技术团队公众号（meituantech）的同学，赶快关注哟。</p>\n <p>现在，大家请闭眼，大餐来了～～～</p>\n <h2 id=\"美团线下沙龙\">美团线下沙龙</h2>\n <p>任意点击标题，就能直接查看视频及演讲稿</p>\n <p><strong>Tech Salon 048：<a href=\"https://tech.meituan.com/salon/#/44602\">AI在复杂业务场景中的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|何仁清 美团研究员 2018/12/22</strong></p>\n <p><a href=\"http://dpurl.cn/1aGUjwA\">《深度强化学习技术在智能调度中的应用》</a>王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jtvI8lt\">《深度学习在物流配送舆情监控中的应用》</a>李超@京东物流NLP方向资深算法工程师</p>\n <p><a href=\"http://dpurl.cn/UxQxdqg\">《美团搜索中的深度学习实践》</a>周翔@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 047：<a href=\"https://tech.meituan.com/salon/#/44452\">运营效率系统架构演进之道</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|阳纯飞 美团高级技术专家 2018/12/08</strong></p>\n <p><a href=\"http://dpurl.cn/e5FWi1r\">《面向O2O大促活动的高效运营系统实践》</a>李力@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/umMxuem\">《京东物流实时数据平台性能优化实践》</a>杨国斌@京东技术专家</p>\n <p><a href=\"http://dpurl.cn/S9p9Rct\">《外卖商家菜品运营效率提升实践》</a>罗震@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/C0DTDPI\">《外卖商户数据化运营体系建设》</a>李觊@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 046：<a href=\"https://tech.meituan.com/salon/#/44246\">AI在外卖配送的应用</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王兴星&amp;郝井华 美团研究员 2018/11/25</strong></p>\n <p><a href=\"http://dpurl.cn/OG1VITL\">《预估模型在外卖广告的演进》</a>谢乾龙@美团外卖广告算法专家</p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《即时配送中的运筹优化技术》</a>郝井华@美团配送智能调度平台负责人</p>\n <p><a href=\"http://dpurl.cn/b2demu3\">《即时配送中的机器学习技术》</a>何仁清@美团配送AI方向负责人</p>\n <hr>\n <p><strong>Tech Salon 045：<a href=\"https://tech.meituan.com/salon/#/44241\">如何构建高性能、稳定的后端服务系统</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 |方建平 美团技术总监 2018/11/24</strong></p>\n <p><a href=\"http://dpurl.cn/h2tSH0d\">《美团度假交易稳定性建设实践》</a>韩建起@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1eEmiJa\">《美团配送智能调度系统架构演进》</a>郑伟@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/mOM70TU\">《美团稳定性保障平台Rhino》</a>占军@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/36eUWw7\">《美团外卖LBS服务实践》</a>易奎@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 044：<a href=\"https://tech.meituan.com/salon/#/42521\">千万级日活App的质量保证</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|李永刚 美团研究员 2018/09/15</strong></p>\n <p><a href=\"http://dpurl.cn/RIA0IBE\">《AI语音产品测试》</a>于海生@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/EkrvqQQ\">《美团外卖客户端 UI 自动化测试实践》</a>刘健@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9wTSjRP\">《客户端QA效率工具》</a>赵晔@美团测试开发架构师</p>\n <hr>\n <p><strong>Tech Salon 043：<a href=\"https://tech.meituan.com/salon/#/42318\">美团金融千万级交易系统质量保障之路</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|赫大龙 美团高级技术专家 2018/09/01</strong></p>\n <p><a href=\"http://dpurl.cn/WBj4g1R\">《智能支付稳定性测试实战》</a>范勋伟@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/S3QC9nw\">《去哪儿网服务端自动化测试体系》</a>郑希文@去哪儿</p>\n <p><a href=\"http://dpurl.cn/bxidDmT\">《线上支付SDK质量保证体系》</a>张朋飞@美团高级测试开发工程师</p>\n <p><a href=\"http://dpurl.cn/ICnY9EY\">《质量运营演变之道》</a>符欣@美团高级开发工程师</p>\n <hr>\n <p><strong>Tech Salon 042：<a href=\"https://tech.meituan.com/salon/#/42098\">高效率前端与架构实战</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|王鹤 美团高级技术专家 2018/08/26</strong></p>\n <p><a href=\"http://dpurl.cn/4zd1g7v\">《EH — 用黑科技打造全新的 Hybrid 体验》</a> 陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/atWgFPm\">《mpvue小程序开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/uBGnNe7\">《美团金融前端工程化最佳实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/C21IwKR\">《前端架构师应该做的事——架构模型与技术实践》</a>王鹤@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 041：<a href=\"https://tech.meituan.com/salon/#/41922\">企业级前端开发360°实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/08/18</strong></p>\n <p><a href=\"http://dpurl.cn/6enzQ6K\">《浅谈流量劫持与防治》</a>刘洋河@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/wJLdbeB\">《前端高可用性保障实践》</a>田泱@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/WvMgJ22\">《跨容器高性能的离线化方案在美团的实践和探索》</a>龙佳文@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/6ea1W3X\">《前端遇上Go: 静态资源增量更新的新实践》</a>杨义天@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 040：<a href=\"https://tech.meituan.com/salon/#/41406\">前端遇上黑科技，打造全新界面体验与效率</a></strong>（请在微信端打开）</p>\n <p><strong>出品人 | 冯湧 美团研发总监 2018/08/04</strong></p>\n <p><a href=\"http://dpurl.cn/dcUUsv7\">《EH——用黑科技打造的全新的 Hybrid 体验》</a>陈禹霖@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/omiEOIh\">《Vix——如何打造一个高效的前端组件库》</a>张胜@美团高级研发工程师</p>\n <p><a href=\"http://dpurl.cn/eSbf7eY\">《委以重任的Node.js——百亿级访问实践》</a>迪波威@百度资深软件工程师</p>\n <p><a href=\"http://dpurl.cn/1NLlrH7\">《构建时预渲染——网页首帧优化实践》</a>尚寒阳@美团资深研发工程师</p>\n <hr>\n <p><strong>Tech Salon 039：<a href=\"https://tech.meituan.com/salon/#/41065\">新思路打造移动端高效研发体系</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|周辉 美团资深架构师 2018/07/21</strong></p>\n <p><a href=\"http://dpurl.cn/rtXsz0X\">《Picasso在大众点评首页的应用》</a>虞惠文@美团Android开发工程师</p>\n <p><a href=\"http://dpurl.cn/gJkC96U\">《移动前后端开发解耦》</a>林晨@美团后端技术专家</p>\n <p><a href=\"http://dpurl.cn/kcEERJD\">《打造稳定、灵活、高效的运营配置平台》</a>蒋国宝@美团后端技术架构师</p>\n <p><a href=\"http://dpurl.cn/GEdFow2\">《移动持续集成实践》</a>何智聪@美团iOS技术专家</p>\n <hr>\n <p><strong>Tech Salon 038：<a href=\"https://tech.meituan.com/salon/#/40348\">旅游电商架构攻略指南</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|金孟哲 美团高级技术专家 2018/07/07</strong></p>\n <p><a href=\"http://dpurl.cn/9NA3IDI\">《旅游度假预订系统架构演进实践》</a> 金孟哲@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/pdIQztt\">《旅游度假多要素动态打包实践》</a> 王超@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/1mx2Mhn\">《旅游度假商品中心架构演进》</a> 徐泼@美团高级技术专家</p>\n <p><a href=\"http://dpurl.cn/jUc9Krm\">《直连低可信系统，实现高可用服务实践》</a> 郑旭@美团高级技术专家</p>\n <hr>\n <p><strong>Tech Salon 037：<a href=\"https://tech.meituan.com/salon/#/39548\">美团外卖两千万日订单背后的客户端技术架构</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|吴凯 美团高级技术专家 2018/06/23</strong></p>\n <p><a href=\"http://dpurl.cn/9VqeRQP\">《美团外卖客户端技术架构演进》</a>朱瑞利@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/b4BhI2i\">《客户端监控体系建设》</a>冯天锡@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/0WglRb7\">《客户端多端复用架构》</a>郑金光@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/BN8S6uV\">《客户端容灾能力体系》</a>李富强@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 036：<a href=\"https://tech.meituan.com/salon/#/38188\">大前端的动态化与可用性建设</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|洪磊 美团高级技术专家 2018/06/02</strong></p>\n <p><a href=\"http://dpurl.cn/4x8m29f\">《大前端高可用性建设》</a>李富强@美团资深前端工程师</p>\n <p><a href=\"http://dpurl.cn/aK72uB3\">《React fiber漫谈》</a>覃俊文@蚂蚁金服前端技术专家</p>\n <p><a href=\"http://dpurl.cn/uLlIi3q\">《小程序开发的新姿势 -mpvue 的应用和实践》</a>胡成全@美团前端技术专家</p>\n <p><a href=\"http://dpurl.cn/0n9ANpz\">《ReactNative性能优化企业级应用》</a>赵宏罡@腾讯资深前端开发工程师</p>\n <hr>\n <p><strong>Tech Salon 035：<a href=\"https://tech.meituan.com/salon/#/35673\">前端热点技术的企业级实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/04/21</strong></p>\n <p><a href=\"http://dpurl.cn/X8hmGar\">《前端遇上 Go——静态资源增量更新的新实践》</a>刘洋河@美团高级前端工程师</p>\n <p><a href=\"http://dpurl.cn/c2j4URx\">《金融扫码付 H5 迁移小程序拓荒之旅》</a>陈瑶@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/8VE6Q70\">《小程序开发的新姿势 - mpvue 开发框架和最佳实践》</a>胡成全@美团技术专家</p>\n <hr>\n <p><strong>Tech Salon 034：<a href=\"https://tech.meituan.com/salon/#/35161\">聊聊酒店系统高可用架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|许关飞 美团研究员 2018/04/14</strong></p>\n <p><a href=\"http://dpurl.cn/KwRRM3V\">《高可用之中间件技术》</a>吴湘@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/9XzOUnT\">《分布式开源监控系统CAT在美团点评演进》</a>尤勇@美团研究员</p>\n <p><a href=\"http://dpurl.cn/3FHVwpo\">《美团旅行住宿产品中心系统高可用实战》</a>槐国涛@美团酒店CRS商品负责人</p>\n <p><a href=\"http://dpurl.cn/Ynt6aVE\">《美团旅行酒店住宿订单系统高可用实战》</a>李磊@美团资深工程师</p>\n <p><a href=\"http://dpurl.cn/2gLXCnH\">《美团旅行直连系统高可用实战》</a>秦浏杰@美团资深工程师</p>\n <hr>\n <p><strong>Tech Salon 033：<a href=\"https://tech.meituan.com/salon/#/31815\">企业信息化建设和安全管理</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|邓昀泽 美团企业平台研发负责人 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/2Cpj4tO\">《美团点评内部系统构建之路》</a>邓昀泽@美团企业平台研发部负责人</p>\n <p><a href=\"http://dpurl.cn/IGFzn0f\">《企业信息防护体系建设》</a>陆平@美亚柏科企业电子数据取证事业部副总</p>\n <p><a href=\"http://dpurl.cn/BTYUxbh\">《企业如何应对安全威胁》</a>游兴旺@美团企业平台研发高级总监</p>\n <hr>\n <p><strong>Tech Salon 032：<a href=\"https://tech.meituan.com/salon/#/31816\">移动开发热点技术—动态日志、监控、Hybrid、插件化</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|方锦涛 美团高级技术专家 2018/02/03</strong></p>\n <p><a href=\"http://dpurl.cn/hi6x3tX\">《线上问题排查体系构建：动态日志》</a> 陈潼@美团Android资深工程师</p>\n <p><a href=\"http://dpurl.cn/BsmtuwJ\">《混合应用工程化实践》</a> 李罡@美团前端工程师</p>\n <p><a href=\"http://dpurl.cn/xXexGwG\">《Caesium iOS启动时间监控》</a> 吴君阳@美团iOS工程师</p>\n <hr>\n <p><strong>Tech Salon 031：<a href=\"https://tech.meituan.com/salon/#/31470\">线下支付千万级订单服务—前后端架构实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|任远 美团高级技术专家 2018/01/27</strong></p>\n <p><a href=\"http://dpurl.cn/83yGayf\">《扫码付前端可用性保障实践》</a> 田泱@美团高级工程师</p>\n <p><a href=\"http://dpurl.cn/uQv3mVL\">《业务系统的建设之路》</a>刘运@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/1HxNpDH\">《Web离线化加载》</a> 于秋@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/tbNSxRx\">《基于WTL框架的Windows开发最佳实践》</a> 钱声鹏@美团高级工程师</p>\n <hr>\n <p><strong>Tech Salon 030：<a href=\"https://tech.meituan.com/salon/#/30554\">餐饮生态高可用系统实践</a></strong>（请在微信端打开）</p>\n <p><strong>出品人|温华剑 美团技术专家 2018/01/13</strong></p>\n <p><a href=\"http://dpurl.cn/i40jBTG\">《从“0”开始-美团收银客户端》</a>聂龙羽@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/8qoK8Fa\">《美团餐饮生态大数据架构实践》</a>牛江浩@美团技术专家</p>\n <p><a href=\"http://dpurl.cn/u49UVD9\">《餐饮开放平台的高可用实践》</a>朱洋波@美团技术专家</p>\n <hr>\n <h2 id=\"美团线上沙龙\">美团线上沙龙</h2>\n <p>任意点击标题，就能在线观看视频或者文章</p>\n <p><strong>On-Line Salon 33：<a href=\"https://m.lizhiweike.com/classroom/10038952\">美团大脑 智享生活</a></strong> 分享人：王仲远 美团点评高级研究员</p>\n <p><strong>On-Line Salon 32：<a href=\"https://gitbook.cn/books/5bcf24b6211d0e68b1b788f0/index.html\">基于深度学习的计算机视觉技术在无人驾驶中的应用</a></strong> 分享人：刘宇达 美团点评资深算法工程师</p>\n <p><strong>On-Line Salon 31：<a href=\"https://m.lizhiweike.com/classroom/9363553\">利用响应式来解决客户端问题</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 30：<a href=\"https://gitbook.cn/books/5b927473780fdb5e97d2a3bc/index.html\">美团针对 Redis Rehash 机制的探索和实践</a></strong> 分享人：葛春林 美团点评资深工程师</p>\n <p><strong>On-Line Salon 29：<a href=\"https://m.lizhiweike.com/classroom/8660084\">Flutter 原理与实践</a></strong> 分享人：李少杰 美团点评资深工程师</p>\n <p><strong>On-Line Salon 28：<a href=\"https://gitbook.cn/books/5b8746c7ea7bc512755e4e36/index.html\">如何基于深度学习实现图像的智能审核</a></strong> 分享人：魏晓明 美团点评高级技术专家</p>\n <p><strong>On-Line Salon 27：<a href=\"https://gitbook.cn/books/5b7e5a44a63144311b8dbf2d/index.html\">美团客户端响应式框架 EasyReact 开源</a></strong> 分享人：臧成威 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 26：<a href=\"https://gitbook.cn/books/5b752e45e8b81c0748e349e1/index.html\">移动持续集成在大众点评的实践</a></strong> 分享人：何智聪、邢轶 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 25：Kotlin <a href=\"https://gitbook.cn/books/5b6c28169f4dd1284bf82f99/index.html\">代码检查探索与实践</a></strong> 分享人：周佳 美团点评前端开发工程师</p>\n <p><strong>On-Line Salon 24：<a href=\"https://gitbook.cn/books/5b67bceca51b8d5f8ecbcf79/index.html\">静态资源增量更新的新实践</a></strong> 分享人：刘洋河 美团点评资深工程师</p>\n <p><strong>On-Line Salon 23：<a href=\"https://gitbook.cn/books/5b5ab5721642ed2ba79b6630/index.html\">点评侧用户行为检索系统</a></strong> 分享人：朱凯 美团点评资深工程师</p>\n <p><strong>On-Line Salon 22：<a href=\"https://gitbook.cn/books/5b43fc6316959658636f059e/index.html\">深度学习在美团搜索广告排序的应用实践</a></strong> 分享人：薛欢、梁玉林、王新 美团点评资深工程师</p>\n <p><strong>On-Line Salon 21：<a href=\"https://gitbook.cn/books/5ae9bcbeb02ff82d0d1b0517/index.html\">使用 Mpvue 开发微信小程序的最佳实践</a></strong> 分享人：胡成全 美团点评前端技术专家</p>\n <p><strong>On-Line Salon 20：<a href=\"https://gitbook.cn/books/5ad4a60daf8f2f35290f46d5/index.html\">亿级用户个性化品类推荐实战解析</a></strong> 分享人：张晓宇 美团高级工程师</p>\n <p><strong>On-Line Salon 19：<a href=\"https://gitbook.cn/books/5ac2325c9e924a1dc029c6b7/index.html\">MVVM 在美团点评酒旅业务中的实践</a></strong> 分享人：吴卓 美团点评技术专家</p>\n <p><strong>On-Line Salon 18：<a href=\"https://gitbook.cn/books/5aa6850a9c3cf94d4915f97c/index.html\">深度学习在美团点评推荐业务中实践</a></strong> 分享人：陈文石 美团点评算法专家</p>\n <p>感恩！99位出品人和讲师，70多个小时的分享，感谢他们给我们带来一线的技术实践分享，感谢他们给我们2万多小伙伴送上技术的“饕餮盛宴”。除了美团技术团队的讲师们，我们还要特别感谢来自腾讯、蚂蚁金服、百度、京东、去哪儿、美亚柏科等公司的讲师们，感谢你们的付出和努力，我们期待新的一年会有更多的合作！</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2019a/1df24ed2.png\" alt=\"2018全年出品人及讲师\"></p>\n</div>', '2019-07-24 15:09:50', 'jQuery', '8790', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频0.23556180814926708', '技术年货：美团技术沙龙合辑大放送——85个演讲，70+小时视频', '2019-07-24 15:09:50', ' 技术学院');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d093370154', '<div class=\"content\">\n <h2 id=\"前言\">前言</h2>\n <p>自JavaScript诞生以来，前端技术发展非常迅速。移动端白屏优化是前端界面体验的一个重要优化方向，Web 前端诞生了 SSR 、CSR、预渲染等技术。在美团支付的前端技术体系里，通过预渲染提升网页首帧优化，从而优化了白屏问题，提升用户体验，并形成了最佳实践。</p>\n <p>在前端渲染领域，主要有以下几种方式可供选择：</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">CSR</th>\n    <th align=\"left\">预渲染</th>\n    <th align=\"left\">SSR</th>\n    <th align=\"left\">同构</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不依赖数据</li><li>FP 时间最快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>不依赖数据</li><li>FCP 时间比 CSR 快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li><li>客户端用户体验好</li><li>内存数据共享</li><li>客户端与服务端代码公用，开发效率高</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FCP 、FMP 慢</li></td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FMP 慢</li></td>\n    <td align=\"left\"><li>客户端数据共享成本高</li><li>模板维护成本高</li></td>\n    <td align=\"left\"><li>Node 容易形成性能瓶颈</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过对比，同构方案集合 CSR 与 SSR 的优点，可以适用于大部分业务场景。但由于在同构的系统架构中，连接前后端的 Node 中间层处于核心链路，系统可用性的瓶颈就依赖于 Node ，一旦作为短板的 Node 挂了，整个服务都不可用。</p>\n <p>结合到我们团队负责的支付业务场景里，由于支付业务追求极致的系统稳定性，服务不可用直接影响到客诉和资损，因此我们采用浏览器端渲染的架构。在保证系统稳定性的前提下，还需要保障用户体验，所以采用了预渲染的方式。</p>\n <p>那么究竟什么是预渲染呢？什么是 FCP/FMP 呢？我们先从最常见的 CSR 开始说起。</p>\n <p>以 Vue 举例，常见的 CSR 形式如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/6edb9a61.png\" alt></p>\n <p>一切看似很美好。然而，作为以用户体验为首要目标的我们发现了一个体验问题：<strong>首屏白屏问题</strong>。</p>\n <h2 id=\"为什么会首屏白屏\">为什么会首屏白屏</h2>\n <p>浏览器渲染包含 HTML 解析、DOM 树构建、CSSOM 构建、JavaScript 解析、布局、绘制等等，大致如下图所示：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f8d5d24b.png\" alt></p>\n <p>要搞清楚为什么会有白屏，就需要利用这个理论基础来对实际项目进行具体分析。通过 DevTools 进行分析：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f42e655e.png\" alt></p>\n <ul>\n  <li>等待 HTML 文档返回，此时处于白屏状态。</li>\n  <li>对 HTML 文档解析完成后进行首屏渲染，因为项目中对\n   <div id=\"app\"></div>加了灰色的背景色，因此呈现出灰屏。</li>\n  <li>进行文件加载、JS 解析等过程，导致界面长时间出于灰屏中。</li>\n  <li>当 Vue 实例触发了 mounted 后，界面显示出大体框架。</li>\n  <li>调用 API 获取到时机业务数据后才能展示出最终的页面内容。</li>\n </ul>\n <p>由此得出结论，因为要等待文件加载、CSSOM 构建、JS 解析等过程，而这些过程比较耗时，导致用户会长时间出于不可交互的首屏灰白屏状态，从而给用户一种网页很“慢”的感觉。那么一个网页太“慢”，会造成什么影响呢？</p>\n <h2 id=\"慢-的影响\">“慢”的影响</h2>\n <p><a href=\"https://www.cdnetworks.com/resources/whitepapers/us/Global%20Web%20Performance%20Matters.pdf\">Global Web Performance Matters for ecommerce</a>的报告中指出：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/267c29f0.png\" alt></p>\n <ul>\n  <li>57%的用户更在乎网页在3秒内是否完成加载。</li>\n  <li>52%的在线用户认为网页打开速度影响到他们对网站的忠实度。</li>\n  <li>每慢1秒造成页面 PV 降低11%，用户满意度也随之降低降低16%。</li>\n  <li>近半数移动用户因为在10秒内仍未打开页面从而放弃。</li>\n </ul>\n <p>我们团队主要负责美团支付相关的业务，如果网站太慢会影响用户的支付体验，会造成客诉或资损。既然网站太“慢”会造成如此重要的影响，那要如何优化呢？</p>\n <h2 id=\"优化思路\">优化思路</h2>\n <p>在<a href=\"https://developers.google.com/web/fundamentals/performance/user-centric-performance-metrics\">User-centric Performance Metrics</a>一文中，共提到了4个页面渲染的关键指标：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/ad2aa1a2.png\" alt></p>\n <p>基于这个理论基础，再回过头来看看之前项目的实际表现：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/78ef764e.png\" alt></p>\n <p>可见在 FP 的灰白屏界面停留了很长时间，用户不清楚网站是否有在正常加载，用户体验很差。</p>\n <p>试想：如果我们可以将 FCP 或 FMP 完整的 HTML 文档提前到 FP 时机预渲染，用户看到页面框架，能感受到页面正在加载而不是冷冰冰的灰白屏，那么用户更愿意等待页面加载完成，从而降低了流失率。并且这种改观在弱网环境下更明显。</p>\n <p>通过对比 FP、FCP、FMP 这三个时期 DOM 的差异，发现区别在于：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/431ac789.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/aef51a44.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/81cde23f.png\" alt></p>\n <ul>\n  <li>FP：仅有一个 div 根节点。</li>\n  <li>FCP：包含页面的基本框架，但没有数据内容。</li>\n  <li>FMP：包含页面所有元素及数据。</li>\n </ul>\n <p>仍然以 Vue 为例， 在其生命周期中，mounted 对应的是 FCP，updated 对应的是 FMP。那么具体应该使用哪个生命周期的 HTML 结构呢？</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">mounted (FCP)</th>\n    <th align=\"left\">updated (FMP)</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>只是视觉体验将 FCP 提前，实际的 TTI 时间变化不大</li></td>\n    <td align=\"left\"><li>构建时需要获取数据，编译速度慢</li><li>构建时与运行时的数据存在差异性</li><li>有复杂交互的页面，仍需等待，实际的 TTI 时间变化不大</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不受数据影响，编译速度快</li></td>\n    <td align=\"left\"><li>首屏体验好</li><li>对于纯展示类型的页面，FP 与 TTI 时间近乎一致</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过以上的对比，最终选择在 mounted 时触发构建时预渲染。由于我们采用的是 CSR 的架构，没有 Node 作为中间层，因此要实现 DOM 内容的预渲染，就需要在项目构建编译时完成对原始模板的更新替换。</p>\n <p>至此，我们明确了构建时预渲染的大体方案。</p>\n <h2 id=\"构建时预渲染方案\">构建时预渲染方案</h2>\n <p>构建时预渲染流程：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/8adc18c7.png\" alt></p>\n <h3 id=\"配置读取\">配置读取</h3>\n <p>由于 SPA 可以由多个路由构成，需要根据业务场景决定哪些路由需要用到预渲染。因此这里的配置文件主要是用于告知编译器需要进行预渲染的路由。</p>\n <p>在我们的系统架构里，脚手架是基于 Webpack 自研的，在此基础上可以自定义自动化构建任务和配置。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f44e3e64.png\" alt></p>\n <h3 id=\"触发构建\">触发构建</h3>\n <p>项目中主要是使用 TypeScript，利用 TS 的<a href=\"https://www.typescriptlang.org/docs/handbook/decorators.html\">装饰器</a>，我们封装了统一的预渲染构建的钩子方法，从而只用一行代码即可完成构建时预渲染的触发。</p>\n <p><strong>装饰器：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/7213a6c7.png\" alt></p>\n <p><strong>使用：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/cb713a1b.png\" alt></p>\n <h3 id=\"构建编译\">构建编译</h3>\n <p>从流程图上，需要在发布机上启动模拟的浏览器环境，并通过预渲染的事件钩子获取当前的页面内容，生成最终的 HTML 文件。</p>\n <p>由于我们在预渲染上的尝试比较早，当时还没有 <a href=\"https://developers.google.com/web/updates/2017/04/headless-chrome\">Headless Chrome</a> 、 <a href=\"https://github.com/GoogleChrome/puppeteer\">Puppeteer</a>、<a href=\"https://www.npmjs.com/package/prerender-spa-plugin\">Prerender SPA Plugin</a>等，因此在选型上使用的是 <a href=\"https://www.npmjs.com/package/phantomjs-prebuilt\">phantomjs-prebuilt</a>（Prerender SPA Plugin 早期版本也是基于 phantomjs-prebuilt 实现的）。</p>\n <p>通过 phantom 提供的 API 可获得当前 HTML，示例如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/202684fb.png\" alt></p>\n <p>为了提高构建效率，并行对配置的多个页面或路由进行预渲染构建，保证在 5S 内即可完成构建，流程图如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/e46f186e.png\" alt></p>\n <h2 id=\"方案优化\">方案优化</h2>\n <p>理想很丰满，现实很骨感。在实际投产中，构建时预渲染方案遇到了一个问题。</p>\n <p>我们梳理一下简化后的项目上线过程：</p>\n <p><strong>开发 -&gt; 编译 -&gt; 上线</strong></p>\n <p>假设本次修改了静态文件中的一个 JS 文件，这个文件会通过 CDN 方式在 HTML 里引用，那么最终在 HTML 文档中的引用方式是 <code>&lt;script src=\"http://cdn.com/index.js\"&gt;&lt;/script&gt;</code>。然而由于项目还没有上线，所以其实通过完整 URL 的方式是获取不到这个文件的；而预渲染的构建又是在上线动作之前，所以问题就产生了：</p>\n <p><strong>构建时预渲染无法正常获取文件，导致编译报错</strong></p>\n <p>怎么办？</p>\n <p><strong>请求劫持</strong></p>\n <p>因为在做预渲染时，我们使用启动了一个模拟的浏览器环境，根据 phantom 提供的 API，可以对发出的请求加以劫持，将获取 CDN 文件的请求劫持到本地，从而在根本上解决了这个问题。示例代码如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/9992b84f.png\" alt></p>\n <h2 id=\"构建时预渲染研发流程及效果\">构建时预渲染研发流程及效果</h2>\n <p>最终，构建时预渲染研发流程如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/af202144.png\" alt></p>\n <p><strong>开发阶段：</strong></p>\n <ul>\n  <li>通过 TypeScript 的装饰器单行引入预渲染构建触发的方法。</li>\n  <li>发布前修改编译构建的配置文件。</li>\n </ul>\n <p><strong>发布阶段：</strong></p>\n <ul>\n  <li>先进行常规的项目构建。</li>\n  <li>若有预渲染相关配置，则触发预渲染构建。</li>\n  <li>通过预渲染得到最终的文件，并完成发布上线动作。</li>\n </ul>\n <p><strong>完整的用户请求路径如下：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/999c7f32.png\" alt></p>\n <p>通过构建时预渲染在项目中的使用，FCP 的时间相比之前减少了 75%。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/53771784.png\" alt></p>\n <h3 id=\"作者简介\">作者简介</h3>\n <ul>\n  <li>寒阳，美团资深研发工程师，多年前端研发经历，负责美团支付钱包团队和美团支付前端基础技术。</li>\n </ul>\n <h3 id=\"招聘信息\">招聘信息</h3>\n <p>我们美团金融服务平台大前端研发组在高速成长中，我们欢迎更多优秀的 Web 前端研发工程师加入，感兴趣的朋友可以将简历发送到邮箱：shanghanyang@meituan.com。</p>\n</div>', '2019-07-24 15:09:50', 'JavaScript', '5204', '构建时预渲染：网页首帧优化实践0.685439965074367', '构建时预渲染：网页首帧优化实践', '2019-07-24 15:09:50', ' 寒阳');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d093c70155', '<div class=\"content\">\n <h2 id=\"前言\">前言</h2>\n <p>自JavaScript诞生以来，前端技术发展非常迅速。移动端白屏优化是前端界面体验的一个重要优化方向，Web 前端诞生了 SSR 、CSR、预渲染等技术。在美团支付的前端技术体系里，通过预渲染提升网页首帧优化，从而优化了白屏问题，提升用户体验，并形成了最佳实践。</p>\n <p>在前端渲染领域，主要有以下几种方式可供选择：</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">CSR</th>\n    <th align=\"left\">预渲染</th>\n    <th align=\"left\">SSR</th>\n    <th align=\"left\">同构</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不依赖数据</li><li>FP 时间最快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>不依赖数据</li><li>FCP 时间比 CSR 快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li><li>客户端用户体验好</li><li>内存数据共享</li><li>客户端与服务端代码公用，开发效率高</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FCP 、FMP 慢</li></td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FMP 慢</li></td>\n    <td align=\"left\"><li>客户端数据共享成本高</li><li>模板维护成本高</li></td>\n    <td align=\"left\"><li>Node 容易形成性能瓶颈</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过对比，同构方案集合 CSR 与 SSR 的优点，可以适用于大部分业务场景。但由于在同构的系统架构中，连接前后端的 Node 中间层处于核心链路，系统可用性的瓶颈就依赖于 Node ，一旦作为短板的 Node 挂了，整个服务都不可用。</p>\n <p>结合到我们团队负责的支付业务场景里，由于支付业务追求极致的系统稳定性，服务不可用直接影响到客诉和资损，因此我们采用浏览器端渲染的架构。在保证系统稳定性的前提下，还需要保障用户体验，所以采用了预渲染的方式。</p>\n <p>那么究竟什么是预渲染呢？什么是 FCP/FMP 呢？我们先从最常见的 CSR 开始说起。</p>\n <p>以 Vue 举例，常见的 CSR 形式如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/6edb9a61.png\" alt></p>\n <p>一切看似很美好。然而，作为以用户体验为首要目标的我们发现了一个体验问题：<strong>首屏白屏问题</strong>。</p>\n <h2 id=\"为什么会首屏白屏\">为什么会首屏白屏</h2>\n <p>浏览器渲染包含 HTML 解析、DOM 树构建、CSSOM 构建、JavaScript 解析、布局、绘制等等，大致如下图所示：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f8d5d24b.png\" alt></p>\n <p>要搞清楚为什么会有白屏，就需要利用这个理论基础来对实际项目进行具体分析。通过 DevTools 进行分析：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f42e655e.png\" alt></p>\n <ul>\n  <li>等待 HTML 文档返回，此时处于白屏状态。</li>\n  <li>对 HTML 文档解析完成后进行首屏渲染，因为项目中对\n   <div id=\"app\"></div>加了灰色的背景色，因此呈现出灰屏。</li>\n  <li>进行文件加载、JS 解析等过程，导致界面长时间出于灰屏中。</li>\n  <li>当 Vue 实例触发了 mounted 后，界面显示出大体框架。</li>\n  <li>调用 API 获取到时机业务数据后才能展示出最终的页面内容。</li>\n </ul>\n <p>由此得出结论，因为要等待文件加载、CSSOM 构建、JS 解析等过程，而这些过程比较耗时，导致用户会长时间出于不可交互的首屏灰白屏状态，从而给用户一种网页很“慢”的感觉。那么一个网页太“慢”，会造成什么影响呢？</p>\n <h2 id=\"慢-的影响\">“慢”的影响</h2>\n <p><a href=\"https://www.cdnetworks.com/resources/whitepapers/us/Global%20Web%20Performance%20Matters.pdf\">Global Web Performance Matters for ecommerce</a>的报告中指出：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/267c29f0.png\" alt></p>\n <ul>\n  <li>57%的用户更在乎网页在3秒内是否完成加载。</li>\n  <li>52%的在线用户认为网页打开速度影响到他们对网站的忠实度。</li>\n  <li>每慢1秒造成页面 PV 降低11%，用户满意度也随之降低降低16%。</li>\n  <li>近半数移动用户因为在10秒内仍未打开页面从而放弃。</li>\n </ul>\n <p>我们团队主要负责美团支付相关的业务，如果网站太慢会影响用户的支付体验，会造成客诉或资损。既然网站太“慢”会造成如此重要的影响，那要如何优化呢？</p>\n <h2 id=\"优化思路\">优化思路</h2>\n <p>在<a href=\"https://developers.google.com/web/fundamentals/performance/user-centric-performance-metrics\">User-centric Performance Metrics</a>一文中，共提到了4个页面渲染的关键指标：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/ad2aa1a2.png\" alt></p>\n <p>基于这个理论基础，再回过头来看看之前项目的实际表现：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/78ef764e.png\" alt></p>\n <p>可见在 FP 的灰白屏界面停留了很长时间，用户不清楚网站是否有在正常加载，用户体验很差。</p>\n <p>试想：如果我们可以将 FCP 或 FMP 完整的 HTML 文档提前到 FP 时机预渲染，用户看到页面框架，能感受到页面正在加载而不是冷冰冰的灰白屏，那么用户更愿意等待页面加载完成，从而降低了流失率。并且这种改观在弱网环境下更明显。</p>\n <p>通过对比 FP、FCP、FMP 这三个时期 DOM 的差异，发现区别在于：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/431ac789.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/aef51a44.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/81cde23f.png\" alt></p>\n <ul>\n  <li>FP：仅有一个 div 根节点。</li>\n  <li>FCP：包含页面的基本框架，但没有数据内容。</li>\n  <li>FMP：包含页面所有元素及数据。</li>\n </ul>\n <p>仍然以 Vue 为例， 在其生命周期中，mounted 对应的是 FCP，updated 对应的是 FMP。那么具体应该使用哪个生命周期的 HTML 结构呢？</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">mounted (FCP)</th>\n    <th align=\"left\">updated (FMP)</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>只是视觉体验将 FCP 提前，实际的 TTI 时间变化不大</li></td>\n    <td align=\"left\"><li>构建时需要获取数据，编译速度慢</li><li>构建时与运行时的数据存在差异性</li><li>有复杂交互的页面，仍需等待，实际的 TTI 时间变化不大</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不受数据影响，编译速度快</li></td>\n    <td align=\"left\"><li>首屏体验好</li><li>对于纯展示类型的页面，FP 与 TTI 时间近乎一致</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过以上的对比，最终选择在 mounted 时触发构建时预渲染。由于我们采用的是 CSR 的架构，没有 Node 作为中间层，因此要实现 DOM 内容的预渲染，就需要在项目构建编译时完成对原始模板的更新替换。</p>\n <p>至此，我们明确了构建时预渲染的大体方案。</p>\n <h2 id=\"构建时预渲染方案\">构建时预渲染方案</h2>\n <p>构建时预渲染流程：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/8adc18c7.png\" alt></p>\n <h3 id=\"配置读取\">配置读取</h3>\n <p>由于 SPA 可以由多个路由构成，需要根据业务场景决定哪些路由需要用到预渲染。因此这里的配置文件主要是用于告知编译器需要进行预渲染的路由。</p>\n <p>在我们的系统架构里，脚手架是基于 Webpack 自研的，在此基础上可以自定义自动化构建任务和配置。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f44e3e64.png\" alt></p>\n <h3 id=\"触发构建\">触发构建</h3>\n <p>项目中主要是使用 TypeScript，利用 TS 的<a href=\"https://www.typescriptlang.org/docs/handbook/decorators.html\">装饰器</a>，我们封装了统一的预渲染构建的钩子方法，从而只用一行代码即可完成构建时预渲染的触发。</p>\n <p><strong>装饰器：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/7213a6c7.png\" alt></p>\n <p><strong>使用：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/cb713a1b.png\" alt></p>\n <h3 id=\"构建编译\">构建编译</h3>\n <p>从流程图上，需要在发布机上启动模拟的浏览器环境，并通过预渲染的事件钩子获取当前的页面内容，生成最终的 HTML 文件。</p>\n <p>由于我们在预渲染上的尝试比较早，当时还没有 <a href=\"https://developers.google.com/web/updates/2017/04/headless-chrome\">Headless Chrome</a> 、 <a href=\"https://github.com/GoogleChrome/puppeteer\">Puppeteer</a>、<a href=\"https://www.npmjs.com/package/prerender-spa-plugin\">Prerender SPA Plugin</a>等，因此在选型上使用的是 <a href=\"https://www.npmjs.com/package/phantomjs-prebuilt\">phantomjs-prebuilt</a>（Prerender SPA Plugin 早期版本也是基于 phantomjs-prebuilt 实现的）。</p>\n <p>通过 phantom 提供的 API 可获得当前 HTML，示例如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/202684fb.png\" alt></p>\n <p>为了提高构建效率，并行对配置的多个页面或路由进行预渲染构建，保证在 5S 内即可完成构建，流程图如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/e46f186e.png\" alt></p>\n <h2 id=\"方案优化\">方案优化</h2>\n <p>理想很丰满，现实很骨感。在实际投产中，构建时预渲染方案遇到了一个问题。</p>\n <p>我们梳理一下简化后的项目上线过程：</p>\n <p><strong>开发 -&gt; 编译 -&gt; 上线</strong></p>\n <p>假设本次修改了静态文件中的一个 JS 文件，这个文件会通过 CDN 方式在 HTML 里引用，那么最终在 HTML 文档中的引用方式是 <code>&lt;script src=\"http://cdn.com/index.js\"&gt;&lt;/script&gt;</code>。然而由于项目还没有上线，所以其实通过完整 URL 的方式是获取不到这个文件的；而预渲染的构建又是在上线动作之前，所以问题就产生了：</p>\n <p><strong>构建时预渲染无法正常获取文件，导致编译报错</strong></p>\n <p>怎么办？</p>\n <p><strong>请求劫持</strong></p>\n <p>因为在做预渲染时，我们使用启动了一个模拟的浏览器环境，根据 phantom 提供的 API，可以对发出的请求加以劫持，将获取 CDN 文件的请求劫持到本地，从而在根本上解决了这个问题。示例代码如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/9992b84f.png\" alt></p>\n <h2 id=\"构建时预渲染研发流程及效果\">构建时预渲染研发流程及效果</h2>\n <p>最终，构建时预渲染研发流程如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/af202144.png\" alt></p>\n <p><strong>开发阶段：</strong></p>\n <ul>\n  <li>通过 TypeScript 的装饰器单行引入预渲染构建触发的方法。</li>\n  <li>发布前修改编译构建的配置文件。</li>\n </ul>\n <p><strong>发布阶段：</strong></p>\n <ul>\n  <li>先进行常规的项目构建。</li>\n  <li>若有预渲染相关配置，则触发预渲染构建。</li>\n  <li>通过预渲染得到最终的文件，并完成发布上线动作。</li>\n </ul>\n <p><strong>完整的用户请求路径如下：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/999c7f32.png\" alt></p>\n <p>通过构建时预渲染在项目中的使用，FCP 的时间相比之前减少了 75%。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/53771784.png\" alt></p>\n <h3 id=\"作者简介\">作者简介</h3>\n <ul>\n  <li>寒阳，美团资深研发工程师，多年前端研发经历，负责美团支付钱包团队和美团支付前端基础技术。</li>\n </ul>\n <h3 id=\"招聘信息\">招聘信息</h3>\n <p>我们美团金融服务平台大前端研发组在高速成长中，我们欢迎更多优秀的 Web 前端研发工程师加入，感兴趣的朋友可以将简历发送到邮箱：shanghanyang@meituan.com。</p>\n</div>', '2019-07-24 15:09:50', 'Java', '5204', '构建时预渲染：网页首帧优化实践0.4894166451401787', '构建时预渲染：网页首帧优化实践', '2019-07-24 15:09:50', ' 寒阳');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d0940d0156', '<div class=\"content\">\n <h2 id=\"前言\">前言</h2>\n <p>自JavaScript诞生以来，前端技术发展非常迅速。移动端白屏优化是前端界面体验的一个重要优化方向，Web 前端诞生了 SSR 、CSR、预渲染等技术。在美团支付的前端技术体系里，通过预渲染提升网页首帧优化，从而优化了白屏问题，提升用户体验，并形成了最佳实践。</p>\n <p>在前端渲染领域，主要有以下几种方式可供选择：</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">CSR</th>\n    <th align=\"left\">预渲染</th>\n    <th align=\"left\">SSR</th>\n    <th align=\"left\">同构</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不依赖数据</li><li>FP 时间最快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>不依赖数据</li><li>FCP 时间比 CSR 快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li><li>客户端用户体验好</li><li>内存数据共享</li><li>客户端与服务端代码公用，开发效率高</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FCP 、FMP 慢</li></td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FMP 慢</li></td>\n    <td align=\"left\"><li>客户端数据共享成本高</li><li>模板维护成本高</li></td>\n    <td align=\"left\"><li>Node 容易形成性能瓶颈</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过对比，同构方案集合 CSR 与 SSR 的优点，可以适用于大部分业务场景。但由于在同构的系统架构中，连接前后端的 Node 中间层处于核心链路，系统可用性的瓶颈就依赖于 Node ，一旦作为短板的 Node 挂了，整个服务都不可用。</p>\n <p>结合到我们团队负责的支付业务场景里，由于支付业务追求极致的系统稳定性，服务不可用直接影响到客诉和资损，因此我们采用浏览器端渲染的架构。在保证系统稳定性的前提下，还需要保障用户体验，所以采用了预渲染的方式。</p>\n <p>那么究竟什么是预渲染呢？什么是 FCP/FMP 呢？我们先从最常见的 CSR 开始说起。</p>\n <p>以 Vue 举例，常见的 CSR 形式如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/6edb9a61.png\" alt></p>\n <p>一切看似很美好。然而，作为以用户体验为首要目标的我们发现了一个体验问题：<strong>首屏白屏问题</strong>。</p>\n <h2 id=\"为什么会首屏白屏\">为什么会首屏白屏</h2>\n <p>浏览器渲染包含 HTML 解析、DOM 树构建、CSSOM 构建、JavaScript 解析、布局、绘制等等，大致如下图所示：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f8d5d24b.png\" alt></p>\n <p>要搞清楚为什么会有白屏，就需要利用这个理论基础来对实际项目进行具体分析。通过 DevTools 进行分析：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f42e655e.png\" alt></p>\n <ul>\n  <li>等待 HTML 文档返回，此时处于白屏状态。</li>\n  <li>对 HTML 文档解析完成后进行首屏渲染，因为项目中对\n   <div id=\"app\"></div>加了灰色的背景色，因此呈现出灰屏。</li>\n  <li>进行文件加载、JS 解析等过程，导致界面长时间出于灰屏中。</li>\n  <li>当 Vue 实例触发了 mounted 后，界面显示出大体框架。</li>\n  <li>调用 API 获取到时机业务数据后才能展示出最终的页面内容。</li>\n </ul>\n <p>由此得出结论，因为要等待文件加载、CSSOM 构建、JS 解析等过程，而这些过程比较耗时，导致用户会长时间出于不可交互的首屏灰白屏状态，从而给用户一种网页很“慢”的感觉。那么一个网页太“慢”，会造成什么影响呢？</p>\n <h2 id=\"慢-的影响\">“慢”的影响</h2>\n <p><a href=\"https://www.cdnetworks.com/resources/whitepapers/us/Global%20Web%20Performance%20Matters.pdf\">Global Web Performance Matters for ecommerce</a>的报告中指出：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/267c29f0.png\" alt></p>\n <ul>\n  <li>57%的用户更在乎网页在3秒内是否完成加载。</li>\n  <li>52%的在线用户认为网页打开速度影响到他们对网站的忠实度。</li>\n  <li>每慢1秒造成页面 PV 降低11%，用户满意度也随之降低降低16%。</li>\n  <li>近半数移动用户因为在10秒内仍未打开页面从而放弃。</li>\n </ul>\n <p>我们团队主要负责美团支付相关的业务，如果网站太慢会影响用户的支付体验，会造成客诉或资损。既然网站太“慢”会造成如此重要的影响，那要如何优化呢？</p>\n <h2 id=\"优化思路\">优化思路</h2>\n <p>在<a href=\"https://developers.google.com/web/fundamentals/performance/user-centric-performance-metrics\">User-centric Performance Metrics</a>一文中，共提到了4个页面渲染的关键指标：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/ad2aa1a2.png\" alt></p>\n <p>基于这个理论基础，再回过头来看看之前项目的实际表现：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/78ef764e.png\" alt></p>\n <p>可见在 FP 的灰白屏界面停留了很长时间，用户不清楚网站是否有在正常加载，用户体验很差。</p>\n <p>试想：如果我们可以将 FCP 或 FMP 完整的 HTML 文档提前到 FP 时机预渲染，用户看到页面框架，能感受到页面正在加载而不是冷冰冰的灰白屏，那么用户更愿意等待页面加载完成，从而降低了流失率。并且这种改观在弱网环境下更明显。</p>\n <p>通过对比 FP、FCP、FMP 这三个时期 DOM 的差异，发现区别在于：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/431ac789.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/aef51a44.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/81cde23f.png\" alt></p>\n <ul>\n  <li>FP：仅有一个 div 根节点。</li>\n  <li>FCP：包含页面的基本框架，但没有数据内容。</li>\n  <li>FMP：包含页面所有元素及数据。</li>\n </ul>\n <p>仍然以 Vue 为例， 在其生命周期中，mounted 对应的是 FCP，updated 对应的是 FMP。那么具体应该使用哪个生命周期的 HTML 结构呢？</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">mounted (FCP)</th>\n    <th align=\"left\">updated (FMP)</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>只是视觉体验将 FCP 提前，实际的 TTI 时间变化不大</li></td>\n    <td align=\"left\"><li>构建时需要获取数据，编译速度慢</li><li>构建时与运行时的数据存在差异性</li><li>有复杂交互的页面，仍需等待，实际的 TTI 时间变化不大</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不受数据影响，编译速度快</li></td>\n    <td align=\"left\"><li>首屏体验好</li><li>对于纯展示类型的页面，FP 与 TTI 时间近乎一致</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过以上的对比，最终选择在 mounted 时触发构建时预渲染。由于我们采用的是 CSR 的架构，没有 Node 作为中间层，因此要实现 DOM 内容的预渲染，就需要在项目构建编译时完成对原始模板的更新替换。</p>\n <p>至此，我们明确了构建时预渲染的大体方案。</p>\n <h2 id=\"构建时预渲染方案\">构建时预渲染方案</h2>\n <p>构建时预渲染流程：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/8adc18c7.png\" alt></p>\n <h3 id=\"配置读取\">配置读取</h3>\n <p>由于 SPA 可以由多个路由构成，需要根据业务场景决定哪些路由需要用到预渲染。因此这里的配置文件主要是用于告知编译器需要进行预渲染的路由。</p>\n <p>在我们的系统架构里，脚手架是基于 Webpack 自研的，在此基础上可以自定义自动化构建任务和配置。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f44e3e64.png\" alt></p>\n <h3 id=\"触发构建\">触发构建</h3>\n <p>项目中主要是使用 TypeScript，利用 TS 的<a href=\"https://www.typescriptlang.org/docs/handbook/decorators.html\">装饰器</a>，我们封装了统一的预渲染构建的钩子方法，从而只用一行代码即可完成构建时预渲染的触发。</p>\n <p><strong>装饰器：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/7213a6c7.png\" alt></p>\n <p><strong>使用：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/cb713a1b.png\" alt></p>\n <h3 id=\"构建编译\">构建编译</h3>\n <p>从流程图上，需要在发布机上启动模拟的浏览器环境，并通过预渲染的事件钩子获取当前的页面内容，生成最终的 HTML 文件。</p>\n <p>由于我们在预渲染上的尝试比较早，当时还没有 <a href=\"https://developers.google.com/web/updates/2017/04/headless-chrome\">Headless Chrome</a> 、 <a href=\"https://github.com/GoogleChrome/puppeteer\">Puppeteer</a>、<a href=\"https://www.npmjs.com/package/prerender-spa-plugin\">Prerender SPA Plugin</a>等，因此在选型上使用的是 <a href=\"https://www.npmjs.com/package/phantomjs-prebuilt\">phantomjs-prebuilt</a>（Prerender SPA Plugin 早期版本也是基于 phantomjs-prebuilt 实现的）。</p>\n <p>通过 phantom 提供的 API 可获得当前 HTML，示例如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/202684fb.png\" alt></p>\n <p>为了提高构建效率，并行对配置的多个页面或路由进行预渲染构建，保证在 5S 内即可完成构建，流程图如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/e46f186e.png\" alt></p>\n <h2 id=\"方案优化\">方案优化</h2>\n <p>理想很丰满，现实很骨感。在实际投产中，构建时预渲染方案遇到了一个问题。</p>\n <p>我们梳理一下简化后的项目上线过程：</p>\n <p><strong>开发 -&gt; 编译 -&gt; 上线</strong></p>\n <p>假设本次修改了静态文件中的一个 JS 文件，这个文件会通过 CDN 方式在 HTML 里引用，那么最终在 HTML 文档中的引用方式是 <code>&lt;script src=\"http://cdn.com/index.js\"&gt;&lt;/script&gt;</code>。然而由于项目还没有上线，所以其实通过完整 URL 的方式是获取不到这个文件的；而预渲染的构建又是在上线动作之前，所以问题就产生了：</p>\n <p><strong>构建时预渲染无法正常获取文件，导致编译报错</strong></p>\n <p>怎么办？</p>\n <p><strong>请求劫持</strong></p>\n <p>因为在做预渲染时，我们使用启动了一个模拟的浏览器环境，根据 phantom 提供的 API，可以对发出的请求加以劫持，将获取 CDN 文件的请求劫持到本地，从而在根本上解决了这个问题。示例代码如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/9992b84f.png\" alt></p>\n <h2 id=\"构建时预渲染研发流程及效果\">构建时预渲染研发流程及效果</h2>\n <p>最终，构建时预渲染研发流程如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/af202144.png\" alt></p>\n <p><strong>开发阶段：</strong></p>\n <ul>\n  <li>通过 TypeScript 的装饰器单行引入预渲染构建触发的方法。</li>\n  <li>发布前修改编译构建的配置文件。</li>\n </ul>\n <p><strong>发布阶段：</strong></p>\n <ul>\n  <li>先进行常规的项目构建。</li>\n  <li>若有预渲染相关配置，则触发预渲染构建。</li>\n  <li>通过预渲染得到最终的文件，并完成发布上线动作。</li>\n </ul>\n <p><strong>完整的用户请求路径如下：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/999c7f32.png\" alt></p>\n <p>通过构建时预渲染在项目中的使用，FCP 的时间相比之前减少了 75%。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/53771784.png\" alt></p>\n <h3 id=\"作者简介\">作者简介</h3>\n <ul>\n  <li>寒阳，美团资深研发工程师，多年前端研发经历，负责美团支付钱包团队和美团支付前端基础技术。</li>\n </ul>\n <h3 id=\"招聘信息\">招聘信息</h3>\n <p>我们美团金融服务平台大前端研发组在高速成长中，我们欢迎更多优秀的 Web 前端研发工程师加入，感兴趣的朋友可以将简历发送到邮箱：shanghanyang@meituan.com。</p>\n</div>', '2019-07-24 15:09:50', '数据库', '5204', '构建时预渲染：网页首帧优化实践0.9298065166211099', '构建时预渲染：网页首帧优化实践', '2019-07-24 15:09:50', ' 寒阳');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d094560157', '<div class=\"content\">\n <h2 id=\"前言\">前言</h2>\n <p>自JavaScript诞生以来，前端技术发展非常迅速。移动端白屏优化是前端界面体验的一个重要优化方向，Web 前端诞生了 SSR 、CSR、预渲染等技术。在美团支付的前端技术体系里，通过预渲染提升网页首帧优化，从而优化了白屏问题，提升用户体验，并形成了最佳实践。</p>\n <p>在前端渲染领域，主要有以下几种方式可供选择：</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">CSR</th>\n    <th align=\"left\">预渲染</th>\n    <th align=\"left\">SSR</th>\n    <th align=\"left\">同构</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不依赖数据</li><li>FP 时间最快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>不依赖数据</li><li>FCP 时间比 CSR 快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li><li>客户端用户体验好</li><li>内存数据共享</li><li>客户端与服务端代码公用，开发效率高</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FCP 、FMP 慢</li></td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FMP 慢</li></td>\n    <td align=\"left\"><li>客户端数据共享成本高</li><li>模板维护成本高</li></td>\n    <td align=\"left\"><li>Node 容易形成性能瓶颈</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过对比，同构方案集合 CSR 与 SSR 的优点，可以适用于大部分业务场景。但由于在同构的系统架构中，连接前后端的 Node 中间层处于核心链路，系统可用性的瓶颈就依赖于 Node ，一旦作为短板的 Node 挂了，整个服务都不可用。</p>\n <p>结合到我们团队负责的支付业务场景里，由于支付业务追求极致的系统稳定性，服务不可用直接影响到客诉和资损，因此我们采用浏览器端渲染的架构。在保证系统稳定性的前提下，还需要保障用户体验，所以采用了预渲染的方式。</p>\n <p>那么究竟什么是预渲染呢？什么是 FCP/FMP 呢？我们先从最常见的 CSR 开始说起。</p>\n <p>以 Vue 举例，常见的 CSR 形式如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/6edb9a61.png\" alt></p>\n <p>一切看似很美好。然而，作为以用户体验为首要目标的我们发现了一个体验问题：<strong>首屏白屏问题</strong>。</p>\n <h2 id=\"为什么会首屏白屏\">为什么会首屏白屏</h2>\n <p>浏览器渲染包含 HTML 解析、DOM 树构建、CSSOM 构建、JavaScript 解析、布局、绘制等等，大致如下图所示：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f8d5d24b.png\" alt></p>\n <p>要搞清楚为什么会有白屏，就需要利用这个理论基础来对实际项目进行具体分析。通过 DevTools 进行分析：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f42e655e.png\" alt></p>\n <ul>\n  <li>等待 HTML 文档返回，此时处于白屏状态。</li>\n  <li>对 HTML 文档解析完成后进行首屏渲染，因为项目中对\n   <div id=\"app\"></div>加了灰色的背景色，因此呈现出灰屏。</li>\n  <li>进行文件加载、JS 解析等过程，导致界面长时间出于灰屏中。</li>\n  <li>当 Vue 实例触发了 mounted 后，界面显示出大体框架。</li>\n  <li>调用 API 获取到时机业务数据后才能展示出最终的页面内容。</li>\n </ul>\n <p>由此得出结论，因为要等待文件加载、CSSOM 构建、JS 解析等过程，而这些过程比较耗时，导致用户会长时间出于不可交互的首屏灰白屏状态，从而给用户一种网页很“慢”的感觉。那么一个网页太“慢”，会造成什么影响呢？</p>\n <h2 id=\"慢-的影响\">“慢”的影响</h2>\n <p><a href=\"https://www.cdnetworks.com/resources/whitepapers/us/Global%20Web%20Performance%20Matters.pdf\">Global Web Performance Matters for ecommerce</a>的报告中指出：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/267c29f0.png\" alt></p>\n <ul>\n  <li>57%的用户更在乎网页在3秒内是否完成加载。</li>\n  <li>52%的在线用户认为网页打开速度影响到他们对网站的忠实度。</li>\n  <li>每慢1秒造成页面 PV 降低11%，用户满意度也随之降低降低16%。</li>\n  <li>近半数移动用户因为在10秒内仍未打开页面从而放弃。</li>\n </ul>\n <p>我们团队主要负责美团支付相关的业务，如果网站太慢会影响用户的支付体验，会造成客诉或资损。既然网站太“慢”会造成如此重要的影响，那要如何优化呢？</p>\n <h2 id=\"优化思路\">优化思路</h2>\n <p>在<a href=\"https://developers.google.com/web/fundamentals/performance/user-centric-performance-metrics\">User-centric Performance Metrics</a>一文中，共提到了4个页面渲染的关键指标：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/ad2aa1a2.png\" alt></p>\n <p>基于这个理论基础，再回过头来看看之前项目的实际表现：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/78ef764e.png\" alt></p>\n <p>可见在 FP 的灰白屏界面停留了很长时间，用户不清楚网站是否有在正常加载，用户体验很差。</p>\n <p>试想：如果我们可以将 FCP 或 FMP 完整的 HTML 文档提前到 FP 时机预渲染，用户看到页面框架，能感受到页面正在加载而不是冷冰冰的灰白屏，那么用户更愿意等待页面加载完成，从而降低了流失率。并且这种改观在弱网环境下更明显。</p>\n <p>通过对比 FP、FCP、FMP 这三个时期 DOM 的差异，发现区别在于：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/431ac789.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/aef51a44.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/81cde23f.png\" alt></p>\n <ul>\n  <li>FP：仅有一个 div 根节点。</li>\n  <li>FCP：包含页面的基本框架，但没有数据内容。</li>\n  <li>FMP：包含页面所有元素及数据。</li>\n </ul>\n <p>仍然以 Vue 为例， 在其生命周期中，mounted 对应的是 FCP，updated 对应的是 FMP。那么具体应该使用哪个生命周期的 HTML 结构呢？</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">mounted (FCP)</th>\n    <th align=\"left\">updated (FMP)</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>只是视觉体验将 FCP 提前，实际的 TTI 时间变化不大</li></td>\n    <td align=\"left\"><li>构建时需要获取数据，编译速度慢</li><li>构建时与运行时的数据存在差异性</li><li>有复杂交互的页面，仍需等待，实际的 TTI 时间变化不大</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不受数据影响，编译速度快</li></td>\n    <td align=\"left\"><li>首屏体验好</li><li>对于纯展示类型的页面，FP 与 TTI 时间近乎一致</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过以上的对比，最终选择在 mounted 时触发构建时预渲染。由于我们采用的是 CSR 的架构，没有 Node 作为中间层，因此要实现 DOM 内容的预渲染，就需要在项目构建编译时完成对原始模板的更新替换。</p>\n <p>至此，我们明确了构建时预渲染的大体方案。</p>\n <h2 id=\"构建时预渲染方案\">构建时预渲染方案</h2>\n <p>构建时预渲染流程：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/8adc18c7.png\" alt></p>\n <h3 id=\"配置读取\">配置读取</h3>\n <p>由于 SPA 可以由多个路由构成，需要根据业务场景决定哪些路由需要用到预渲染。因此这里的配置文件主要是用于告知编译器需要进行预渲染的路由。</p>\n <p>在我们的系统架构里，脚手架是基于 Webpack 自研的，在此基础上可以自定义自动化构建任务和配置。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f44e3e64.png\" alt></p>\n <h3 id=\"触发构建\">触发构建</h3>\n <p>项目中主要是使用 TypeScript，利用 TS 的<a href=\"https://www.typescriptlang.org/docs/handbook/decorators.html\">装饰器</a>，我们封装了统一的预渲染构建的钩子方法，从而只用一行代码即可完成构建时预渲染的触发。</p>\n <p><strong>装饰器：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/7213a6c7.png\" alt></p>\n <p><strong>使用：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/cb713a1b.png\" alt></p>\n <h3 id=\"构建编译\">构建编译</h3>\n <p>从流程图上，需要在发布机上启动模拟的浏览器环境，并通过预渲染的事件钩子获取当前的页面内容，生成最终的 HTML 文件。</p>\n <p>由于我们在预渲染上的尝试比较早，当时还没有 <a href=\"https://developers.google.com/web/updates/2017/04/headless-chrome\">Headless Chrome</a> 、 <a href=\"https://github.com/GoogleChrome/puppeteer\">Puppeteer</a>、<a href=\"https://www.npmjs.com/package/prerender-spa-plugin\">Prerender SPA Plugin</a>等，因此在选型上使用的是 <a href=\"https://www.npmjs.com/package/phantomjs-prebuilt\">phantomjs-prebuilt</a>（Prerender SPA Plugin 早期版本也是基于 phantomjs-prebuilt 实现的）。</p>\n <p>通过 phantom 提供的 API 可获得当前 HTML，示例如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/202684fb.png\" alt></p>\n <p>为了提高构建效率，并行对配置的多个页面或路由进行预渲染构建，保证在 5S 内即可完成构建，流程图如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/e46f186e.png\" alt></p>\n <h2 id=\"方案优化\">方案优化</h2>\n <p>理想很丰满，现实很骨感。在实际投产中，构建时预渲染方案遇到了一个问题。</p>\n <p>我们梳理一下简化后的项目上线过程：</p>\n <p><strong>开发 -&gt; 编译 -&gt; 上线</strong></p>\n <p>假设本次修改了静态文件中的一个 JS 文件，这个文件会通过 CDN 方式在 HTML 里引用，那么最终在 HTML 文档中的引用方式是 <code>&lt;script src=\"http://cdn.com/index.js\"&gt;&lt;/script&gt;</code>。然而由于项目还没有上线，所以其实通过完整 URL 的方式是获取不到这个文件的；而预渲染的构建又是在上线动作之前，所以问题就产生了：</p>\n <p><strong>构建时预渲染无法正常获取文件，导致编译报错</strong></p>\n <p>怎么办？</p>\n <p><strong>请求劫持</strong></p>\n <p>因为在做预渲染时，我们使用启动了一个模拟的浏览器环境，根据 phantom 提供的 API，可以对发出的请求加以劫持，将获取 CDN 文件的请求劫持到本地，从而在根本上解决了这个问题。示例代码如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/9992b84f.png\" alt></p>\n <h2 id=\"构建时预渲染研发流程及效果\">构建时预渲染研发流程及效果</h2>\n <p>最终，构建时预渲染研发流程如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/af202144.png\" alt></p>\n <p><strong>开发阶段：</strong></p>\n <ul>\n  <li>通过 TypeScript 的装饰器单行引入预渲染构建触发的方法。</li>\n  <li>发布前修改编译构建的配置文件。</li>\n </ul>\n <p><strong>发布阶段：</strong></p>\n <ul>\n  <li>先进行常规的项目构建。</li>\n  <li>若有预渲染相关配置，则触发预渲染构建。</li>\n  <li>通过预渲染得到最终的文件，并完成发布上线动作。</li>\n </ul>\n <p><strong>完整的用户请求路径如下：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/999c7f32.png\" alt></p>\n <p>通过构建时预渲染在项目中的使用，FCP 的时间相比之前减少了 75%。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/53771784.png\" alt></p>\n <h3 id=\"作者简介\">作者简介</h3>\n <ul>\n  <li>寒阳，美团资深研发工程师，多年前端研发经历，负责美团支付钱包团队和美团支付前端基础技术。</li>\n </ul>\n <h3 id=\"招聘信息\">招聘信息</h3>\n <p>我们美团金融服务平台大前端研发组在高速成长中，我们欢迎更多优秀的 Web 前端研发工程师加入，感兴趣的朋友可以将简历发送到邮箱：shanghanyang@meituan.com。</p>\n</div>', '2019-07-24 15:09:51', 'Vuex', '5204', '构建时预渲染：网页首帧优化实践0.279387796770308', '构建时预渲染：网页首帧优化实践', '2019-07-24 15:09:51', ' 寒阳');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d094c60158', '<div class=\"content\">\n <h2 id=\"前言\">前言</h2>\n <p>自JavaScript诞生以来，前端技术发展非常迅速。移动端白屏优化是前端界面体验的一个重要优化方向，Web 前端诞生了 SSR 、CSR、预渲染等技术。在美团支付的前端技术体系里，通过预渲染提升网页首帧优化，从而优化了白屏问题，提升用户体验，并形成了最佳实践。</p>\n <p>在前端渲染领域，主要有以下几种方式可供选择：</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">CSR</th>\n    <th align=\"left\">预渲染</th>\n    <th align=\"left\">SSR</th>\n    <th align=\"left\">同构</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不依赖数据</li><li>FP 时间最快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>不依赖数据</li><li>FCP 时间比 CSR 快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li><li>客户端用户体验好</li><li>内存数据共享</li><li>客户端与服务端代码公用，开发效率高</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FCP 、FMP 慢</li></td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FMP 慢</li></td>\n    <td align=\"left\"><li>客户端数据共享成本高</li><li>模板维护成本高</li></td>\n    <td align=\"left\"><li>Node 容易形成性能瓶颈</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过对比，同构方案集合 CSR 与 SSR 的优点，可以适用于大部分业务场景。但由于在同构的系统架构中，连接前后端的 Node 中间层处于核心链路，系统可用性的瓶颈就依赖于 Node ，一旦作为短板的 Node 挂了，整个服务都不可用。</p>\n <p>结合到我们团队负责的支付业务场景里，由于支付业务追求极致的系统稳定性，服务不可用直接影响到客诉和资损，因此我们采用浏览器端渲染的架构。在保证系统稳定性的前提下，还需要保障用户体验，所以采用了预渲染的方式。</p>\n <p>那么究竟什么是预渲染呢？什么是 FCP/FMP 呢？我们先从最常见的 CSR 开始说起。</p>\n <p>以 Vue 举例，常见的 CSR 形式如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/6edb9a61.png\" alt></p>\n <p>一切看似很美好。然而，作为以用户体验为首要目标的我们发现了一个体验问题：<strong>首屏白屏问题</strong>。</p>\n <h2 id=\"为什么会首屏白屏\">为什么会首屏白屏</h2>\n <p>浏览器渲染包含 HTML 解析、DOM 树构建、CSSOM 构建、JavaScript 解析、布局、绘制等等，大致如下图所示：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f8d5d24b.png\" alt></p>\n <p>要搞清楚为什么会有白屏，就需要利用这个理论基础来对实际项目进行具体分析。通过 DevTools 进行分析：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f42e655e.png\" alt></p>\n <ul>\n  <li>等待 HTML 文档返回，此时处于白屏状态。</li>\n  <li>对 HTML 文档解析完成后进行首屏渲染，因为项目中对\n   <div id=\"app\"></div>加了灰色的背景色，因此呈现出灰屏。</li>\n  <li>进行文件加载、JS 解析等过程，导致界面长时间出于灰屏中。</li>\n  <li>当 Vue 实例触发了 mounted 后，界面显示出大体框架。</li>\n  <li>调用 API 获取到时机业务数据后才能展示出最终的页面内容。</li>\n </ul>\n <p>由此得出结论，因为要等待文件加载、CSSOM 构建、JS 解析等过程，而这些过程比较耗时，导致用户会长时间出于不可交互的首屏灰白屏状态，从而给用户一种网页很“慢”的感觉。那么一个网页太“慢”，会造成什么影响呢？</p>\n <h2 id=\"慢-的影响\">“慢”的影响</h2>\n <p><a href=\"https://www.cdnetworks.com/resources/whitepapers/us/Global%20Web%20Performance%20Matters.pdf\">Global Web Performance Matters for ecommerce</a>的报告中指出：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/267c29f0.png\" alt></p>\n <ul>\n  <li>57%的用户更在乎网页在3秒内是否完成加载。</li>\n  <li>52%的在线用户认为网页打开速度影响到他们对网站的忠实度。</li>\n  <li>每慢1秒造成页面 PV 降低11%，用户满意度也随之降低降低16%。</li>\n  <li>近半数移动用户因为在10秒内仍未打开页面从而放弃。</li>\n </ul>\n <p>我们团队主要负责美团支付相关的业务，如果网站太慢会影响用户的支付体验，会造成客诉或资损。既然网站太“慢”会造成如此重要的影响，那要如何优化呢？</p>\n <h2 id=\"优化思路\">优化思路</h2>\n <p>在<a href=\"https://developers.google.com/web/fundamentals/performance/user-centric-performance-metrics\">User-centric Performance Metrics</a>一文中，共提到了4个页面渲染的关键指标：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/ad2aa1a2.png\" alt></p>\n <p>基于这个理论基础，再回过头来看看之前项目的实际表现：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/78ef764e.png\" alt></p>\n <p>可见在 FP 的灰白屏界面停留了很长时间，用户不清楚网站是否有在正常加载，用户体验很差。</p>\n <p>试想：如果我们可以将 FCP 或 FMP 完整的 HTML 文档提前到 FP 时机预渲染，用户看到页面框架，能感受到页面正在加载而不是冷冰冰的灰白屏，那么用户更愿意等待页面加载完成，从而降低了流失率。并且这种改观在弱网环境下更明显。</p>\n <p>通过对比 FP、FCP、FMP 这三个时期 DOM 的差异，发现区别在于：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/431ac789.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/aef51a44.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/81cde23f.png\" alt></p>\n <ul>\n  <li>FP：仅有一个 div 根节点。</li>\n  <li>FCP：包含页面的基本框架，但没有数据内容。</li>\n  <li>FMP：包含页面所有元素及数据。</li>\n </ul>\n <p>仍然以 Vue 为例， 在其生命周期中，mounted 对应的是 FCP，updated 对应的是 FMP。那么具体应该使用哪个生命周期的 HTML 结构呢？</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">mounted (FCP)</th>\n    <th align=\"left\">updated (FMP)</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>只是视觉体验将 FCP 提前，实际的 TTI 时间变化不大</li></td>\n    <td align=\"left\"><li>构建时需要获取数据，编译速度慢</li><li>构建时与运行时的数据存在差异性</li><li>有复杂交互的页面，仍需等待，实际的 TTI 时间变化不大</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不受数据影响，编译速度快</li></td>\n    <td align=\"left\"><li>首屏体验好</li><li>对于纯展示类型的页面，FP 与 TTI 时间近乎一致</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过以上的对比，最终选择在 mounted 时触发构建时预渲染。由于我们采用的是 CSR 的架构，没有 Node 作为中间层，因此要实现 DOM 内容的预渲染，就需要在项目构建编译时完成对原始模板的更新替换。</p>\n <p>至此，我们明确了构建时预渲染的大体方案。</p>\n <h2 id=\"构建时预渲染方案\">构建时预渲染方案</h2>\n <p>构建时预渲染流程：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/8adc18c7.png\" alt></p>\n <h3 id=\"配置读取\">配置读取</h3>\n <p>由于 SPA 可以由多个路由构成，需要根据业务场景决定哪些路由需要用到预渲染。因此这里的配置文件主要是用于告知编译器需要进行预渲染的路由。</p>\n <p>在我们的系统架构里，脚手架是基于 Webpack 自研的，在此基础上可以自定义自动化构建任务和配置。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f44e3e64.png\" alt></p>\n <h3 id=\"触发构建\">触发构建</h3>\n <p>项目中主要是使用 TypeScript，利用 TS 的<a href=\"https://www.typescriptlang.org/docs/handbook/decorators.html\">装饰器</a>，我们封装了统一的预渲染构建的钩子方法，从而只用一行代码即可完成构建时预渲染的触发。</p>\n <p><strong>装饰器：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/7213a6c7.png\" alt></p>\n <p><strong>使用：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/cb713a1b.png\" alt></p>\n <h3 id=\"构建编译\">构建编译</h3>\n <p>从流程图上，需要在发布机上启动模拟的浏览器环境，并通过预渲染的事件钩子获取当前的页面内容，生成最终的 HTML 文件。</p>\n <p>由于我们在预渲染上的尝试比较早，当时还没有 <a href=\"https://developers.google.com/web/updates/2017/04/headless-chrome\">Headless Chrome</a> 、 <a href=\"https://github.com/GoogleChrome/puppeteer\">Puppeteer</a>、<a href=\"https://www.npmjs.com/package/prerender-spa-plugin\">Prerender SPA Plugin</a>等，因此在选型上使用的是 <a href=\"https://www.npmjs.com/package/phantomjs-prebuilt\">phantomjs-prebuilt</a>（Prerender SPA Plugin 早期版本也是基于 phantomjs-prebuilt 实现的）。</p>\n <p>通过 phantom 提供的 API 可获得当前 HTML，示例如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/202684fb.png\" alt></p>\n <p>为了提高构建效率，并行对配置的多个页面或路由进行预渲染构建，保证在 5S 内即可完成构建，流程图如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/e46f186e.png\" alt></p>\n <h2 id=\"方案优化\">方案优化</h2>\n <p>理想很丰满，现实很骨感。在实际投产中，构建时预渲染方案遇到了一个问题。</p>\n <p>我们梳理一下简化后的项目上线过程：</p>\n <p><strong>开发 -&gt; 编译 -&gt; 上线</strong></p>\n <p>假设本次修改了静态文件中的一个 JS 文件，这个文件会通过 CDN 方式在 HTML 里引用，那么最终在 HTML 文档中的引用方式是 <code>&lt;script src=\"http://cdn.com/index.js\"&gt;&lt;/script&gt;</code>。然而由于项目还没有上线，所以其实通过完整 URL 的方式是获取不到这个文件的；而预渲染的构建又是在上线动作之前，所以问题就产生了：</p>\n <p><strong>构建时预渲染无法正常获取文件，导致编译报错</strong></p>\n <p>怎么办？</p>\n <p><strong>请求劫持</strong></p>\n <p>因为在做预渲染时，我们使用启动了一个模拟的浏览器环境，根据 phantom 提供的 API，可以对发出的请求加以劫持，将获取 CDN 文件的请求劫持到本地，从而在根本上解决了这个问题。示例代码如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/9992b84f.png\" alt></p>\n <h2 id=\"构建时预渲染研发流程及效果\">构建时预渲染研发流程及效果</h2>\n <p>最终，构建时预渲染研发流程如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/af202144.png\" alt></p>\n <p><strong>开发阶段：</strong></p>\n <ul>\n  <li>通过 TypeScript 的装饰器单行引入预渲染构建触发的方法。</li>\n  <li>发布前修改编译构建的配置文件。</li>\n </ul>\n <p><strong>发布阶段：</strong></p>\n <ul>\n  <li>先进行常规的项目构建。</li>\n  <li>若有预渲染相关配置，则触发预渲染构建。</li>\n  <li>通过预渲染得到最终的文件，并完成发布上线动作。</li>\n </ul>\n <p><strong>完整的用户请求路径如下：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/999c7f32.png\" alt></p>\n <p>通过构建时预渲染在项目中的使用，FCP 的时间相比之前减少了 75%。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/53771784.png\" alt></p>\n <h3 id=\"作者简介\">作者简介</h3>\n <ul>\n  <li>寒阳，美团资深研发工程师，多年前端研发经历，负责美团支付钱包团队和美团支付前端基础技术。</li>\n </ul>\n <h3 id=\"招聘信息\">招聘信息</h3>\n <p>我们美团金融服务平台大前端研发组在高速成长中，我们欢迎更多优秀的 Web 前端研发工程师加入，感兴趣的朋友可以将简历发送到邮箱：shanghanyang@meituan.com。</p>\n</div>', '2019-07-24 15:09:51', 'jQuery', '5204', '构建时预渲染：网页首帧优化实践0.23740718271907046', '构建时预渲染：网页首帧优化实践', '2019-07-24 15:09:51', ' 寒阳');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d0950b0159', '<div class=\"content\">\n <h2 id=\"前言\">前言</h2>\n <p>自JavaScript诞生以来，前端技术发展非常迅速。移动端白屏优化是前端界面体验的一个重要优化方向，Web 前端诞生了 SSR 、CSR、预渲染等技术。在美团支付的前端技术体系里，通过预渲染提升网页首帧优化，从而优化了白屏问题，提升用户体验，并形成了最佳实践。</p>\n <p>在前端渲染领域，主要有以下几种方式可供选择：</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">CSR</th>\n    <th align=\"left\">预渲染</th>\n    <th align=\"left\">SSR</th>\n    <th align=\"left\">同构</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不依赖数据</li><li>FP 时间最快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>不依赖数据</li><li>FCP 时间比 CSR 快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li><li>客户端用户体验好</li><li>内存数据共享</li><li>客户端与服务端代码公用，开发效率高</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FCP 、FMP 慢</li></td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FMP 慢</li></td>\n    <td align=\"left\"><li>客户端数据共享成本高</li><li>模板维护成本高</li></td>\n    <td align=\"left\"><li>Node 容易形成性能瓶颈</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过对比，同构方案集合 CSR 与 SSR 的优点，可以适用于大部分业务场景。但由于在同构的系统架构中，连接前后端的 Node 中间层处于核心链路，系统可用性的瓶颈就依赖于 Node ，一旦作为短板的 Node 挂了，整个服务都不可用。</p>\n <p>结合到我们团队负责的支付业务场景里，由于支付业务追求极致的系统稳定性，服务不可用直接影响到客诉和资损，因此我们采用浏览器端渲染的架构。在保证系统稳定性的前提下，还需要保障用户体验，所以采用了预渲染的方式。</p>\n <p>那么究竟什么是预渲染呢？什么是 FCP/FMP 呢？我们先从最常见的 CSR 开始说起。</p>\n <p>以 Vue 举例，常见的 CSR 形式如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/6edb9a61.png\" alt></p>\n <p>一切看似很美好。然而，作为以用户体验为首要目标的我们发现了一个体验问题：<strong>首屏白屏问题</strong>。</p>\n <h2 id=\"为什么会首屏白屏\">为什么会首屏白屏</h2>\n <p>浏览器渲染包含 HTML 解析、DOM 树构建、CSSOM 构建、JavaScript 解析、布局、绘制等等，大致如下图所示：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f8d5d24b.png\" alt></p>\n <p>要搞清楚为什么会有白屏，就需要利用这个理论基础来对实际项目进行具体分析。通过 DevTools 进行分析：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f42e655e.png\" alt></p>\n <ul>\n  <li>等待 HTML 文档返回，此时处于白屏状态。</li>\n  <li>对 HTML 文档解析完成后进行首屏渲染，因为项目中对\n   <div id=\"app\"></div>加了灰色的背景色，因此呈现出灰屏。</li>\n  <li>进行文件加载、JS 解析等过程，导致界面长时间出于灰屏中。</li>\n  <li>当 Vue 实例触发了 mounted 后，界面显示出大体框架。</li>\n  <li>调用 API 获取到时机业务数据后才能展示出最终的页面内容。</li>\n </ul>\n <p>由此得出结论，因为要等待文件加载、CSSOM 构建、JS 解析等过程，而这些过程比较耗时，导致用户会长时间出于不可交互的首屏灰白屏状态，从而给用户一种网页很“慢”的感觉。那么一个网页太“慢”，会造成什么影响呢？</p>\n <h2 id=\"慢-的影响\">“慢”的影响</h2>\n <p><a href=\"https://www.cdnetworks.com/resources/whitepapers/us/Global%20Web%20Performance%20Matters.pdf\">Global Web Performance Matters for ecommerce</a>的报告中指出：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/267c29f0.png\" alt></p>\n <ul>\n  <li>57%的用户更在乎网页在3秒内是否完成加载。</li>\n  <li>52%的在线用户认为网页打开速度影响到他们对网站的忠实度。</li>\n  <li>每慢1秒造成页面 PV 降低11%，用户满意度也随之降低降低16%。</li>\n  <li>近半数移动用户因为在10秒内仍未打开页面从而放弃。</li>\n </ul>\n <p>我们团队主要负责美团支付相关的业务，如果网站太慢会影响用户的支付体验，会造成客诉或资损。既然网站太“慢”会造成如此重要的影响，那要如何优化呢？</p>\n <h2 id=\"优化思路\">优化思路</h2>\n <p>在<a href=\"https://developers.google.com/web/fundamentals/performance/user-centric-performance-metrics\">User-centric Performance Metrics</a>一文中，共提到了4个页面渲染的关键指标：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/ad2aa1a2.png\" alt></p>\n <p>基于这个理论基础，再回过头来看看之前项目的实际表现：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/78ef764e.png\" alt></p>\n <p>可见在 FP 的灰白屏界面停留了很长时间，用户不清楚网站是否有在正常加载，用户体验很差。</p>\n <p>试想：如果我们可以将 FCP 或 FMP 完整的 HTML 文档提前到 FP 时机预渲染，用户看到页面框架，能感受到页面正在加载而不是冷冰冰的灰白屏，那么用户更愿意等待页面加载完成，从而降低了流失率。并且这种改观在弱网环境下更明显。</p>\n <p>通过对比 FP、FCP、FMP 这三个时期 DOM 的差异，发现区别在于：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/431ac789.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/aef51a44.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/81cde23f.png\" alt></p>\n <ul>\n  <li>FP：仅有一个 div 根节点。</li>\n  <li>FCP：包含页面的基本框架，但没有数据内容。</li>\n  <li>FMP：包含页面所有元素及数据。</li>\n </ul>\n <p>仍然以 Vue 为例， 在其生命周期中，mounted 对应的是 FCP，updated 对应的是 FMP。那么具体应该使用哪个生命周期的 HTML 结构呢？</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">mounted (FCP)</th>\n    <th align=\"left\">updated (FMP)</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>只是视觉体验将 FCP 提前，实际的 TTI 时间变化不大</li></td>\n    <td align=\"left\"><li>构建时需要获取数据，编译速度慢</li><li>构建时与运行时的数据存在差异性</li><li>有复杂交互的页面，仍需等待，实际的 TTI 时间变化不大</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不受数据影响，编译速度快</li></td>\n    <td align=\"left\"><li>首屏体验好</li><li>对于纯展示类型的页面，FP 与 TTI 时间近乎一致</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过以上的对比，最终选择在 mounted 时触发构建时预渲染。由于我们采用的是 CSR 的架构，没有 Node 作为中间层，因此要实现 DOM 内容的预渲染，就需要在项目构建编译时完成对原始模板的更新替换。</p>\n <p>至此，我们明确了构建时预渲染的大体方案。</p>\n <h2 id=\"构建时预渲染方案\">构建时预渲染方案</h2>\n <p>构建时预渲染流程：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/8adc18c7.png\" alt></p>\n <h3 id=\"配置读取\">配置读取</h3>\n <p>由于 SPA 可以由多个路由构成，需要根据业务场景决定哪些路由需要用到预渲染。因此这里的配置文件主要是用于告知编译器需要进行预渲染的路由。</p>\n <p>在我们的系统架构里，脚手架是基于 Webpack 自研的，在此基础上可以自定义自动化构建任务和配置。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f44e3e64.png\" alt></p>\n <h3 id=\"触发构建\">触发构建</h3>\n <p>项目中主要是使用 TypeScript，利用 TS 的<a href=\"https://www.typescriptlang.org/docs/handbook/decorators.html\">装饰器</a>，我们封装了统一的预渲染构建的钩子方法，从而只用一行代码即可完成构建时预渲染的触发。</p>\n <p><strong>装饰器：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/7213a6c7.png\" alt></p>\n <p><strong>使用：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/cb713a1b.png\" alt></p>\n <h3 id=\"构建编译\">构建编译</h3>\n <p>从流程图上，需要在发布机上启动模拟的浏览器环境，并通过预渲染的事件钩子获取当前的页面内容，生成最终的 HTML 文件。</p>\n <p>由于我们在预渲染上的尝试比较早，当时还没有 <a href=\"https://developers.google.com/web/updates/2017/04/headless-chrome\">Headless Chrome</a> 、 <a href=\"https://github.com/GoogleChrome/puppeteer\">Puppeteer</a>、<a href=\"https://www.npmjs.com/package/prerender-spa-plugin\">Prerender SPA Plugin</a>等，因此在选型上使用的是 <a href=\"https://www.npmjs.com/package/phantomjs-prebuilt\">phantomjs-prebuilt</a>（Prerender SPA Plugin 早期版本也是基于 phantomjs-prebuilt 实现的）。</p>\n <p>通过 phantom 提供的 API 可获得当前 HTML，示例如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/202684fb.png\" alt></p>\n <p>为了提高构建效率，并行对配置的多个页面或路由进行预渲染构建，保证在 5S 内即可完成构建，流程图如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/e46f186e.png\" alt></p>\n <h2 id=\"方案优化\">方案优化</h2>\n <p>理想很丰满，现实很骨感。在实际投产中，构建时预渲染方案遇到了一个问题。</p>\n <p>我们梳理一下简化后的项目上线过程：</p>\n <p><strong>开发 -&gt; 编译 -&gt; 上线</strong></p>\n <p>假设本次修改了静态文件中的一个 JS 文件，这个文件会通过 CDN 方式在 HTML 里引用，那么最终在 HTML 文档中的引用方式是 <code>&lt;script src=\"http://cdn.com/index.js\"&gt;&lt;/script&gt;</code>。然而由于项目还没有上线，所以其实通过完整 URL 的方式是获取不到这个文件的；而预渲染的构建又是在上线动作之前，所以问题就产生了：</p>\n <p><strong>构建时预渲染无法正常获取文件，导致编译报错</strong></p>\n <p>怎么办？</p>\n <p><strong>请求劫持</strong></p>\n <p>因为在做预渲染时，我们使用启动了一个模拟的浏览器环境，根据 phantom 提供的 API，可以对发出的请求加以劫持，将获取 CDN 文件的请求劫持到本地，从而在根本上解决了这个问题。示例代码如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/9992b84f.png\" alt></p>\n <h2 id=\"构建时预渲染研发流程及效果\">构建时预渲染研发流程及效果</h2>\n <p>最终，构建时预渲染研发流程如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/af202144.png\" alt></p>\n <p><strong>开发阶段：</strong></p>\n <ul>\n  <li>通过 TypeScript 的装饰器单行引入预渲染构建触发的方法。</li>\n  <li>发布前修改编译构建的配置文件。</li>\n </ul>\n <p><strong>发布阶段：</strong></p>\n <ul>\n  <li>先进行常规的项目构建。</li>\n  <li>若有预渲染相关配置，则触发预渲染构建。</li>\n  <li>通过预渲染得到最终的文件，并完成发布上线动作。</li>\n </ul>\n <p><strong>完整的用户请求路径如下：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/999c7f32.png\" alt></p>\n <p>通过构建时预渲染在项目中的使用，FCP 的时间相比之前减少了 75%。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/53771784.png\" alt></p>\n <h3 id=\"作者简介\">作者简介</h3>\n <ul>\n  <li>寒阳，美团资深研发工程师，多年前端研发经历，负责美团支付钱包团队和美团支付前端基础技术。</li>\n </ul>\n <h3 id=\"招聘信息\">招聘信息</h3>\n <p>我们美团金融服务平台大前端研发组在高速成长中，我们欢迎更多优秀的 Web 前端研发工程师加入，感兴趣的朋友可以将简历发送到邮箱：shanghanyang@meituan.com。</p>\n</div>', '2019-07-24 15:09:51', 'JavaScript', '5204', '构建时预渲染：网页首帧优化实践0.539419383307516', '构建时预渲染：网页首帧优化实践', '2019-07-24 15:09:51', ' 寒阳');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d0954f015a', '<div class=\"content\">\n <h2 id=\"前言\">前言</h2>\n <p>自JavaScript诞生以来，前端技术发展非常迅速。移动端白屏优化是前端界面体验的一个重要优化方向，Web 前端诞生了 SSR 、CSR、预渲染等技术。在美团支付的前端技术体系里，通过预渲染提升网页首帧优化，从而优化了白屏问题，提升用户体验，并形成了最佳实践。</p>\n <p>在前端渲染领域，主要有以下几种方式可供选择：</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">CSR</th>\n    <th align=\"left\">预渲染</th>\n    <th align=\"left\">SSR</th>\n    <th align=\"left\">同构</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不依赖数据</li><li>FP 时间最快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>不依赖数据</li><li>FCP 时间比 CSR 快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li><li>客户端用户体验好</li><li>内存数据共享</li><li>客户端与服务端代码公用，开发效率高</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FCP 、FMP 慢</li></td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FMP 慢</li></td>\n    <td align=\"left\"><li>客户端数据共享成本高</li><li>模板维护成本高</li></td>\n    <td align=\"left\"><li>Node 容易形成性能瓶颈</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过对比，同构方案集合 CSR 与 SSR 的优点，可以适用于大部分业务场景。但由于在同构的系统架构中，连接前后端的 Node 中间层处于核心链路，系统可用性的瓶颈就依赖于 Node ，一旦作为短板的 Node 挂了，整个服务都不可用。</p>\n <p>结合到我们团队负责的支付业务场景里，由于支付业务追求极致的系统稳定性，服务不可用直接影响到客诉和资损，因此我们采用浏览器端渲染的架构。在保证系统稳定性的前提下，还需要保障用户体验，所以采用了预渲染的方式。</p>\n <p>那么究竟什么是预渲染呢？什么是 FCP/FMP 呢？我们先从最常见的 CSR 开始说起。</p>\n <p>以 Vue 举例，常见的 CSR 形式如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/6edb9a61.png\" alt></p>\n <p>一切看似很美好。然而，作为以用户体验为首要目标的我们发现了一个体验问题：<strong>首屏白屏问题</strong>。</p>\n <h2 id=\"为什么会首屏白屏\">为什么会首屏白屏</h2>\n <p>浏览器渲染包含 HTML 解析、DOM 树构建、CSSOM 构建、JavaScript 解析、布局、绘制等等，大致如下图所示：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f8d5d24b.png\" alt></p>\n <p>要搞清楚为什么会有白屏，就需要利用这个理论基础来对实际项目进行具体分析。通过 DevTools 进行分析：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f42e655e.png\" alt></p>\n <ul>\n  <li>等待 HTML 文档返回，此时处于白屏状态。</li>\n  <li>对 HTML 文档解析完成后进行首屏渲染，因为项目中对\n   <div id=\"app\"></div>加了灰色的背景色，因此呈现出灰屏。</li>\n  <li>进行文件加载、JS 解析等过程，导致界面长时间出于灰屏中。</li>\n  <li>当 Vue 实例触发了 mounted 后，界面显示出大体框架。</li>\n  <li>调用 API 获取到时机业务数据后才能展示出最终的页面内容。</li>\n </ul>\n <p>由此得出结论，因为要等待文件加载、CSSOM 构建、JS 解析等过程，而这些过程比较耗时，导致用户会长时间出于不可交互的首屏灰白屏状态，从而给用户一种网页很“慢”的感觉。那么一个网页太“慢”，会造成什么影响呢？</p>\n <h2 id=\"慢-的影响\">“慢”的影响</h2>\n <p><a href=\"https://www.cdnetworks.com/resources/whitepapers/us/Global%20Web%20Performance%20Matters.pdf\">Global Web Performance Matters for ecommerce</a>的报告中指出：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/267c29f0.png\" alt></p>\n <ul>\n  <li>57%的用户更在乎网页在3秒内是否完成加载。</li>\n  <li>52%的在线用户认为网页打开速度影响到他们对网站的忠实度。</li>\n  <li>每慢1秒造成页面 PV 降低11%，用户满意度也随之降低降低16%。</li>\n  <li>近半数移动用户因为在10秒内仍未打开页面从而放弃。</li>\n </ul>\n <p>我们团队主要负责美团支付相关的业务，如果网站太慢会影响用户的支付体验，会造成客诉或资损。既然网站太“慢”会造成如此重要的影响，那要如何优化呢？</p>\n <h2 id=\"优化思路\">优化思路</h2>\n <p>在<a href=\"https://developers.google.com/web/fundamentals/performance/user-centric-performance-metrics\">User-centric Performance Metrics</a>一文中，共提到了4个页面渲染的关键指标：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/ad2aa1a2.png\" alt></p>\n <p>基于这个理论基础，再回过头来看看之前项目的实际表现：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/78ef764e.png\" alt></p>\n <p>可见在 FP 的灰白屏界面停留了很长时间，用户不清楚网站是否有在正常加载，用户体验很差。</p>\n <p>试想：如果我们可以将 FCP 或 FMP 完整的 HTML 文档提前到 FP 时机预渲染，用户看到页面框架，能感受到页面正在加载而不是冷冰冰的灰白屏，那么用户更愿意等待页面加载完成，从而降低了流失率。并且这种改观在弱网环境下更明显。</p>\n <p>通过对比 FP、FCP、FMP 这三个时期 DOM 的差异，发现区别在于：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/431ac789.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/aef51a44.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/81cde23f.png\" alt></p>\n <ul>\n  <li>FP：仅有一个 div 根节点。</li>\n  <li>FCP：包含页面的基本框架，但没有数据内容。</li>\n  <li>FMP：包含页面所有元素及数据。</li>\n </ul>\n <p>仍然以 Vue 为例， 在其生命周期中，mounted 对应的是 FCP，updated 对应的是 FMP。那么具体应该使用哪个生命周期的 HTML 结构呢？</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">mounted (FCP)</th>\n    <th align=\"left\">updated (FMP)</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>只是视觉体验将 FCP 提前，实际的 TTI 时间变化不大</li></td>\n    <td align=\"left\"><li>构建时需要获取数据，编译速度慢</li><li>构建时与运行时的数据存在差异性</li><li>有复杂交互的页面，仍需等待，实际的 TTI 时间变化不大</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不受数据影响，编译速度快</li></td>\n    <td align=\"left\"><li>首屏体验好</li><li>对于纯展示类型的页面，FP 与 TTI 时间近乎一致</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过以上的对比，最终选择在 mounted 时触发构建时预渲染。由于我们采用的是 CSR 的架构，没有 Node 作为中间层，因此要实现 DOM 内容的预渲染，就需要在项目构建编译时完成对原始模板的更新替换。</p>\n <p>至此，我们明确了构建时预渲染的大体方案。</p>\n <h2 id=\"构建时预渲染方案\">构建时预渲染方案</h2>\n <p>构建时预渲染流程：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/8adc18c7.png\" alt></p>\n <h3 id=\"配置读取\">配置读取</h3>\n <p>由于 SPA 可以由多个路由构成，需要根据业务场景决定哪些路由需要用到预渲染。因此这里的配置文件主要是用于告知编译器需要进行预渲染的路由。</p>\n <p>在我们的系统架构里，脚手架是基于 Webpack 自研的，在此基础上可以自定义自动化构建任务和配置。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f44e3e64.png\" alt></p>\n <h3 id=\"触发构建\">触发构建</h3>\n <p>项目中主要是使用 TypeScript，利用 TS 的<a href=\"https://www.typescriptlang.org/docs/handbook/decorators.html\">装饰器</a>，我们封装了统一的预渲染构建的钩子方法，从而只用一行代码即可完成构建时预渲染的触发。</p>\n <p><strong>装饰器：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/7213a6c7.png\" alt></p>\n <p><strong>使用：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/cb713a1b.png\" alt></p>\n <h3 id=\"构建编译\">构建编译</h3>\n <p>从流程图上，需要在发布机上启动模拟的浏览器环境，并通过预渲染的事件钩子获取当前的页面内容，生成最终的 HTML 文件。</p>\n <p>由于我们在预渲染上的尝试比较早，当时还没有 <a href=\"https://developers.google.com/web/updates/2017/04/headless-chrome\">Headless Chrome</a> 、 <a href=\"https://github.com/GoogleChrome/puppeteer\">Puppeteer</a>、<a href=\"https://www.npmjs.com/package/prerender-spa-plugin\">Prerender SPA Plugin</a>等，因此在选型上使用的是 <a href=\"https://www.npmjs.com/package/phantomjs-prebuilt\">phantomjs-prebuilt</a>（Prerender SPA Plugin 早期版本也是基于 phantomjs-prebuilt 实现的）。</p>\n <p>通过 phantom 提供的 API 可获得当前 HTML，示例如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/202684fb.png\" alt></p>\n <p>为了提高构建效率，并行对配置的多个页面或路由进行预渲染构建，保证在 5S 内即可完成构建，流程图如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/e46f186e.png\" alt></p>\n <h2 id=\"方案优化\">方案优化</h2>\n <p>理想很丰满，现实很骨感。在实际投产中，构建时预渲染方案遇到了一个问题。</p>\n <p>我们梳理一下简化后的项目上线过程：</p>\n <p><strong>开发 -&gt; 编译 -&gt; 上线</strong></p>\n <p>假设本次修改了静态文件中的一个 JS 文件，这个文件会通过 CDN 方式在 HTML 里引用，那么最终在 HTML 文档中的引用方式是 <code>&lt;script src=\"http://cdn.com/index.js\"&gt;&lt;/script&gt;</code>。然而由于项目还没有上线，所以其实通过完整 URL 的方式是获取不到这个文件的；而预渲染的构建又是在上线动作之前，所以问题就产生了：</p>\n <p><strong>构建时预渲染无法正常获取文件，导致编译报错</strong></p>\n <p>怎么办？</p>\n <p><strong>请求劫持</strong></p>\n <p>因为在做预渲染时，我们使用启动了一个模拟的浏览器环境，根据 phantom 提供的 API，可以对发出的请求加以劫持，将获取 CDN 文件的请求劫持到本地，从而在根本上解决了这个问题。示例代码如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/9992b84f.png\" alt></p>\n <h2 id=\"构建时预渲染研发流程及效果\">构建时预渲染研发流程及效果</h2>\n <p>最终，构建时预渲染研发流程如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/af202144.png\" alt></p>\n <p><strong>开发阶段：</strong></p>\n <ul>\n  <li>通过 TypeScript 的装饰器单行引入预渲染构建触发的方法。</li>\n  <li>发布前修改编译构建的配置文件。</li>\n </ul>\n <p><strong>发布阶段：</strong></p>\n <ul>\n  <li>先进行常规的项目构建。</li>\n  <li>若有预渲染相关配置，则触发预渲染构建。</li>\n  <li>通过预渲染得到最终的文件，并完成发布上线动作。</li>\n </ul>\n <p><strong>完整的用户请求路径如下：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/999c7f32.png\" alt></p>\n <p>通过构建时预渲染在项目中的使用，FCP 的时间相比之前减少了 75%。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/53771784.png\" alt></p>\n <h3 id=\"作者简介\">作者简介</h3>\n <ul>\n  <li>寒阳，美团资深研发工程师，多年前端研发经历，负责美团支付钱包团队和美团支付前端基础技术。</li>\n </ul>\n <h3 id=\"招聘信息\">招聘信息</h3>\n <p>我们美团金融服务平台大前端研发组在高速成长中，我们欢迎更多优秀的 Web 前端研发工程师加入，感兴趣的朋友可以将简历发送到邮箱：shanghanyang@meituan.com。</p>\n</div>', '2019-07-24 15:09:51', 'Java', '5204', '构建时预渲染：网页首帧优化实践0.22444423391102697', '构建时预渲染：网页首帧优化实践', '2019-07-24 15:09:51', ' 寒阳');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d096ff015b', '<div class=\"content\">\n <h2 id=\"前言\">前言</h2>\n <p>自JavaScript诞生以来，前端技术发展非常迅速。移动端白屏优化是前端界面体验的一个重要优化方向，Web 前端诞生了 SSR 、CSR、预渲染等技术。在美团支付的前端技术体系里，通过预渲染提升网页首帧优化，从而优化了白屏问题，提升用户体验，并形成了最佳实践。</p>\n <p>在前端渲染领域，主要有以下几种方式可供选择：</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">CSR</th>\n    <th align=\"left\">预渲染</th>\n    <th align=\"left\">SSR</th>\n    <th align=\"left\">同构</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不依赖数据</li><li>FP 时间最快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>不依赖数据</li><li>FCP 时间比 CSR 快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li><li>客户端用户体验好</li><li>内存数据共享</li><li>客户端与服务端代码公用，开发效率高</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FCP 、FMP 慢</li></td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FMP 慢</li></td>\n    <td align=\"left\"><li>客户端数据共享成本高</li><li>模板维护成本高</li></td>\n    <td align=\"left\"><li>Node 容易形成性能瓶颈</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过对比，同构方案集合 CSR 与 SSR 的优点，可以适用于大部分业务场景。但由于在同构的系统架构中，连接前后端的 Node 中间层处于核心链路，系统可用性的瓶颈就依赖于 Node ，一旦作为短板的 Node 挂了，整个服务都不可用。</p>\n <p>结合到我们团队负责的支付业务场景里，由于支付业务追求极致的系统稳定性，服务不可用直接影响到客诉和资损，因此我们采用浏览器端渲染的架构。在保证系统稳定性的前提下，还需要保障用户体验，所以采用了预渲染的方式。</p>\n <p>那么究竟什么是预渲染呢？什么是 FCP/FMP 呢？我们先从最常见的 CSR 开始说起。</p>\n <p>以 Vue 举例，常见的 CSR 形式如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/6edb9a61.png\" alt></p>\n <p>一切看似很美好。然而，作为以用户体验为首要目标的我们发现了一个体验问题：<strong>首屏白屏问题</strong>。</p>\n <h2 id=\"为什么会首屏白屏\">为什么会首屏白屏</h2>\n <p>浏览器渲染包含 HTML 解析、DOM 树构建、CSSOM 构建、JavaScript 解析、布局、绘制等等，大致如下图所示：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f8d5d24b.png\" alt></p>\n <p>要搞清楚为什么会有白屏，就需要利用这个理论基础来对实际项目进行具体分析。通过 DevTools 进行分析：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f42e655e.png\" alt></p>\n <ul>\n  <li>等待 HTML 文档返回，此时处于白屏状态。</li>\n  <li>对 HTML 文档解析完成后进行首屏渲染，因为项目中对\n   <div id=\"app\"></div>加了灰色的背景色，因此呈现出灰屏。</li>\n  <li>进行文件加载、JS 解析等过程，导致界面长时间出于灰屏中。</li>\n  <li>当 Vue 实例触发了 mounted 后，界面显示出大体框架。</li>\n  <li>调用 API 获取到时机业务数据后才能展示出最终的页面内容。</li>\n </ul>\n <p>由此得出结论，因为要等待文件加载、CSSOM 构建、JS 解析等过程，而这些过程比较耗时，导致用户会长时间出于不可交互的首屏灰白屏状态，从而给用户一种网页很“慢”的感觉。那么一个网页太“慢”，会造成什么影响呢？</p>\n <h2 id=\"慢-的影响\">“慢”的影响</h2>\n <p><a href=\"https://www.cdnetworks.com/resources/whitepapers/us/Global%20Web%20Performance%20Matters.pdf\">Global Web Performance Matters for ecommerce</a>的报告中指出：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/267c29f0.png\" alt></p>\n <ul>\n  <li>57%的用户更在乎网页在3秒内是否完成加载。</li>\n  <li>52%的在线用户认为网页打开速度影响到他们对网站的忠实度。</li>\n  <li>每慢1秒造成页面 PV 降低11%，用户满意度也随之降低降低16%。</li>\n  <li>近半数移动用户因为在10秒内仍未打开页面从而放弃。</li>\n </ul>\n <p>我们团队主要负责美团支付相关的业务，如果网站太慢会影响用户的支付体验，会造成客诉或资损。既然网站太“慢”会造成如此重要的影响，那要如何优化呢？</p>\n <h2 id=\"优化思路\">优化思路</h2>\n <p>在<a href=\"https://developers.google.com/web/fundamentals/performance/user-centric-performance-metrics\">User-centric Performance Metrics</a>一文中，共提到了4个页面渲染的关键指标：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/ad2aa1a2.png\" alt></p>\n <p>基于这个理论基础，再回过头来看看之前项目的实际表现：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/78ef764e.png\" alt></p>\n <p>可见在 FP 的灰白屏界面停留了很长时间，用户不清楚网站是否有在正常加载，用户体验很差。</p>\n <p>试想：如果我们可以将 FCP 或 FMP 完整的 HTML 文档提前到 FP 时机预渲染，用户看到页面框架，能感受到页面正在加载而不是冷冰冰的灰白屏，那么用户更愿意等待页面加载完成，从而降低了流失率。并且这种改观在弱网环境下更明显。</p>\n <p>通过对比 FP、FCP、FMP 这三个时期 DOM 的差异，发现区别在于：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/431ac789.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/aef51a44.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/81cde23f.png\" alt></p>\n <ul>\n  <li>FP：仅有一个 div 根节点。</li>\n  <li>FCP：包含页面的基本框架，但没有数据内容。</li>\n  <li>FMP：包含页面所有元素及数据。</li>\n </ul>\n <p>仍然以 Vue 为例， 在其生命周期中，mounted 对应的是 FCP，updated 对应的是 FMP。那么具体应该使用哪个生命周期的 HTML 结构呢？</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">mounted (FCP)</th>\n    <th align=\"left\">updated (FMP)</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>只是视觉体验将 FCP 提前，实际的 TTI 时间变化不大</li></td>\n    <td align=\"left\"><li>构建时需要获取数据，编译速度慢</li><li>构建时与运行时的数据存在差异性</li><li>有复杂交互的页面，仍需等待，实际的 TTI 时间变化不大</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不受数据影响，编译速度快</li></td>\n    <td align=\"left\"><li>首屏体验好</li><li>对于纯展示类型的页面，FP 与 TTI 时间近乎一致</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过以上的对比，最终选择在 mounted 时触发构建时预渲染。由于我们采用的是 CSR 的架构，没有 Node 作为中间层，因此要实现 DOM 内容的预渲染，就需要在项目构建编译时完成对原始模板的更新替换。</p>\n <p>至此，我们明确了构建时预渲染的大体方案。</p>\n <h2 id=\"构建时预渲染方案\">构建时预渲染方案</h2>\n <p>构建时预渲染流程：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/8adc18c7.png\" alt></p>\n <h3 id=\"配置读取\">配置读取</h3>\n <p>由于 SPA 可以由多个路由构成，需要根据业务场景决定哪些路由需要用到预渲染。因此这里的配置文件主要是用于告知编译器需要进行预渲染的路由。</p>\n <p>在我们的系统架构里，脚手架是基于 Webpack 自研的，在此基础上可以自定义自动化构建任务和配置。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f44e3e64.png\" alt></p>\n <h3 id=\"触发构建\">触发构建</h3>\n <p>项目中主要是使用 TypeScript，利用 TS 的<a href=\"https://www.typescriptlang.org/docs/handbook/decorators.html\">装饰器</a>，我们封装了统一的预渲染构建的钩子方法，从而只用一行代码即可完成构建时预渲染的触发。</p>\n <p><strong>装饰器：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/7213a6c7.png\" alt></p>\n <p><strong>使用：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/cb713a1b.png\" alt></p>\n <h3 id=\"构建编译\">构建编译</h3>\n <p>从流程图上，需要在发布机上启动模拟的浏览器环境，并通过预渲染的事件钩子获取当前的页面内容，生成最终的 HTML 文件。</p>\n <p>由于我们在预渲染上的尝试比较早，当时还没有 <a href=\"https://developers.google.com/web/updates/2017/04/headless-chrome\">Headless Chrome</a> 、 <a href=\"https://github.com/GoogleChrome/puppeteer\">Puppeteer</a>、<a href=\"https://www.npmjs.com/package/prerender-spa-plugin\">Prerender SPA Plugin</a>等，因此在选型上使用的是 <a href=\"https://www.npmjs.com/package/phantomjs-prebuilt\">phantomjs-prebuilt</a>（Prerender SPA Plugin 早期版本也是基于 phantomjs-prebuilt 实现的）。</p>\n <p>通过 phantom 提供的 API 可获得当前 HTML，示例如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/202684fb.png\" alt></p>\n <p>为了提高构建效率，并行对配置的多个页面或路由进行预渲染构建，保证在 5S 内即可完成构建，流程图如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/e46f186e.png\" alt></p>\n <h2 id=\"方案优化\">方案优化</h2>\n <p>理想很丰满，现实很骨感。在实际投产中，构建时预渲染方案遇到了一个问题。</p>\n <p>我们梳理一下简化后的项目上线过程：</p>\n <p><strong>开发 -&gt; 编译 -&gt; 上线</strong></p>\n <p>假设本次修改了静态文件中的一个 JS 文件，这个文件会通过 CDN 方式在 HTML 里引用，那么最终在 HTML 文档中的引用方式是 <code>&lt;script src=\"http://cdn.com/index.js\"&gt;&lt;/script&gt;</code>。然而由于项目还没有上线，所以其实通过完整 URL 的方式是获取不到这个文件的；而预渲染的构建又是在上线动作之前，所以问题就产生了：</p>\n <p><strong>构建时预渲染无法正常获取文件，导致编译报错</strong></p>\n <p>怎么办？</p>\n <p><strong>请求劫持</strong></p>\n <p>因为在做预渲染时，我们使用启动了一个模拟的浏览器环境，根据 phantom 提供的 API，可以对发出的请求加以劫持，将获取 CDN 文件的请求劫持到本地，从而在根本上解决了这个问题。示例代码如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/9992b84f.png\" alt></p>\n <h2 id=\"构建时预渲染研发流程及效果\">构建时预渲染研发流程及效果</h2>\n <p>最终，构建时预渲染研发流程如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/af202144.png\" alt></p>\n <p><strong>开发阶段：</strong></p>\n <ul>\n  <li>通过 TypeScript 的装饰器单行引入预渲染构建触发的方法。</li>\n  <li>发布前修改编译构建的配置文件。</li>\n </ul>\n <p><strong>发布阶段：</strong></p>\n <ul>\n  <li>先进行常规的项目构建。</li>\n  <li>若有预渲染相关配置，则触发预渲染构建。</li>\n  <li>通过预渲染得到最终的文件，并完成发布上线动作。</li>\n </ul>\n <p><strong>完整的用户请求路径如下：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/999c7f32.png\" alt></p>\n <p>通过构建时预渲染在项目中的使用，FCP 的时间相比之前减少了 75%。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/53771784.png\" alt></p>\n <h3 id=\"作者简介\">作者简介</h3>\n <ul>\n  <li>寒阳，美团资深研发工程师，多年前端研发经历，负责美团支付钱包团队和美团支付前端基础技术。</li>\n </ul>\n <h3 id=\"招聘信息\">招聘信息</h3>\n <p>我们美团金融服务平台大前端研发组在高速成长中，我们欢迎更多优秀的 Web 前端研发工程师加入，感兴趣的朋友可以将简历发送到邮箱：shanghanyang@meituan.com。</p>\n</div>', '2019-07-24 15:09:51', '数据库', '5204', '构建时预渲染：网页首帧优化实践0.16271933383150905', '构建时预渲染：网页首帧优化实践', '2019-07-24 15:09:51', ' 寒阳');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d097b5015c', '<div class=\"content\">\n <h2 id=\"前言\">前言</h2>\n <p>自JavaScript诞生以来，前端技术发展非常迅速。移动端白屏优化是前端界面体验的一个重要优化方向，Web 前端诞生了 SSR 、CSR、预渲染等技术。在美团支付的前端技术体系里，通过预渲染提升网页首帧优化，从而优化了白屏问题，提升用户体验，并形成了最佳实践。</p>\n <p>在前端渲染领域，主要有以下几种方式可供选择：</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">CSR</th>\n    <th align=\"left\">预渲染</th>\n    <th align=\"left\">SSR</th>\n    <th align=\"left\">同构</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不依赖数据</li><li>FP 时间最快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>不依赖数据</li><li>FCP 时间比 CSR 快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li><li>客户端用户体验好</li><li>内存数据共享</li><li>客户端与服务端代码公用，开发效率高</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FCP 、FMP 慢</li></td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FMP 慢</li></td>\n    <td align=\"left\"><li>客户端数据共享成本高</li><li>模板维护成本高</li></td>\n    <td align=\"left\"><li>Node 容易形成性能瓶颈</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过对比，同构方案集合 CSR 与 SSR 的优点，可以适用于大部分业务场景。但由于在同构的系统架构中，连接前后端的 Node 中间层处于核心链路，系统可用性的瓶颈就依赖于 Node ，一旦作为短板的 Node 挂了，整个服务都不可用。</p>\n <p>结合到我们团队负责的支付业务场景里，由于支付业务追求极致的系统稳定性，服务不可用直接影响到客诉和资损，因此我们采用浏览器端渲染的架构。在保证系统稳定性的前提下，还需要保障用户体验，所以采用了预渲染的方式。</p>\n <p>那么究竟什么是预渲染呢？什么是 FCP/FMP 呢？我们先从最常见的 CSR 开始说起。</p>\n <p>以 Vue 举例，常见的 CSR 形式如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/6edb9a61.png\" alt></p>\n <p>一切看似很美好。然而，作为以用户体验为首要目标的我们发现了一个体验问题：<strong>首屏白屏问题</strong>。</p>\n <h2 id=\"为什么会首屏白屏\">为什么会首屏白屏</h2>\n <p>浏览器渲染包含 HTML 解析、DOM 树构建、CSSOM 构建、JavaScript 解析、布局、绘制等等，大致如下图所示：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f8d5d24b.png\" alt></p>\n <p>要搞清楚为什么会有白屏，就需要利用这个理论基础来对实际项目进行具体分析。通过 DevTools 进行分析：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f42e655e.png\" alt></p>\n <ul>\n  <li>等待 HTML 文档返回，此时处于白屏状态。</li>\n  <li>对 HTML 文档解析完成后进行首屏渲染，因为项目中对\n   <div id=\"app\"></div>加了灰色的背景色，因此呈现出灰屏。</li>\n  <li>进行文件加载、JS 解析等过程，导致界面长时间出于灰屏中。</li>\n  <li>当 Vue 实例触发了 mounted 后，界面显示出大体框架。</li>\n  <li>调用 API 获取到时机业务数据后才能展示出最终的页面内容。</li>\n </ul>\n <p>由此得出结论，因为要等待文件加载、CSSOM 构建、JS 解析等过程，而这些过程比较耗时，导致用户会长时间出于不可交互的首屏灰白屏状态，从而给用户一种网页很“慢”的感觉。那么一个网页太“慢”，会造成什么影响呢？</p>\n <h2 id=\"慢-的影响\">“慢”的影响</h2>\n <p><a href=\"https://www.cdnetworks.com/resources/whitepapers/us/Global%20Web%20Performance%20Matters.pdf\">Global Web Performance Matters for ecommerce</a>的报告中指出：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/267c29f0.png\" alt></p>\n <ul>\n  <li>57%的用户更在乎网页在3秒内是否完成加载。</li>\n  <li>52%的在线用户认为网页打开速度影响到他们对网站的忠实度。</li>\n  <li>每慢1秒造成页面 PV 降低11%，用户满意度也随之降低降低16%。</li>\n  <li>近半数移动用户因为在10秒内仍未打开页面从而放弃。</li>\n </ul>\n <p>我们团队主要负责美团支付相关的业务，如果网站太慢会影响用户的支付体验，会造成客诉或资损。既然网站太“慢”会造成如此重要的影响，那要如何优化呢？</p>\n <h2 id=\"优化思路\">优化思路</h2>\n <p>在<a href=\"https://developers.google.com/web/fundamentals/performance/user-centric-performance-metrics\">User-centric Performance Metrics</a>一文中，共提到了4个页面渲染的关键指标：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/ad2aa1a2.png\" alt></p>\n <p>基于这个理论基础，再回过头来看看之前项目的实际表现：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/78ef764e.png\" alt></p>\n <p>可见在 FP 的灰白屏界面停留了很长时间，用户不清楚网站是否有在正常加载，用户体验很差。</p>\n <p>试想：如果我们可以将 FCP 或 FMP 完整的 HTML 文档提前到 FP 时机预渲染，用户看到页面框架，能感受到页面正在加载而不是冷冰冰的灰白屏，那么用户更愿意等待页面加载完成，从而降低了流失率。并且这种改观在弱网环境下更明显。</p>\n <p>通过对比 FP、FCP、FMP 这三个时期 DOM 的差异，发现区别在于：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/431ac789.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/aef51a44.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/81cde23f.png\" alt></p>\n <ul>\n  <li>FP：仅有一个 div 根节点。</li>\n  <li>FCP：包含页面的基本框架，但没有数据内容。</li>\n  <li>FMP：包含页面所有元素及数据。</li>\n </ul>\n <p>仍然以 Vue 为例， 在其生命周期中，mounted 对应的是 FCP，updated 对应的是 FMP。那么具体应该使用哪个生命周期的 HTML 结构呢？</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">mounted (FCP)</th>\n    <th align=\"left\">updated (FMP)</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>只是视觉体验将 FCP 提前，实际的 TTI 时间变化不大</li></td>\n    <td align=\"left\"><li>构建时需要获取数据，编译速度慢</li><li>构建时与运行时的数据存在差异性</li><li>有复杂交互的页面，仍需等待，实际的 TTI 时间变化不大</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不受数据影响，编译速度快</li></td>\n    <td align=\"left\"><li>首屏体验好</li><li>对于纯展示类型的页面，FP 与 TTI 时间近乎一致</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过以上的对比，最终选择在 mounted 时触发构建时预渲染。由于我们采用的是 CSR 的架构，没有 Node 作为中间层，因此要实现 DOM 内容的预渲染，就需要在项目构建编译时完成对原始模板的更新替换。</p>\n <p>至此，我们明确了构建时预渲染的大体方案。</p>\n <h2 id=\"构建时预渲染方案\">构建时预渲染方案</h2>\n <p>构建时预渲染流程：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/8adc18c7.png\" alt></p>\n <h3 id=\"配置读取\">配置读取</h3>\n <p>由于 SPA 可以由多个路由构成，需要根据业务场景决定哪些路由需要用到预渲染。因此这里的配置文件主要是用于告知编译器需要进行预渲染的路由。</p>\n <p>在我们的系统架构里，脚手架是基于 Webpack 自研的，在此基础上可以自定义自动化构建任务和配置。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f44e3e64.png\" alt></p>\n <h3 id=\"触发构建\">触发构建</h3>\n <p>项目中主要是使用 TypeScript，利用 TS 的<a href=\"https://www.typescriptlang.org/docs/handbook/decorators.html\">装饰器</a>，我们封装了统一的预渲染构建的钩子方法，从而只用一行代码即可完成构建时预渲染的触发。</p>\n <p><strong>装饰器：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/7213a6c7.png\" alt></p>\n <p><strong>使用：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/cb713a1b.png\" alt></p>\n <h3 id=\"构建编译\">构建编译</h3>\n <p>从流程图上，需要在发布机上启动模拟的浏览器环境，并通过预渲染的事件钩子获取当前的页面内容，生成最终的 HTML 文件。</p>\n <p>由于我们在预渲染上的尝试比较早，当时还没有 <a href=\"https://developers.google.com/web/updates/2017/04/headless-chrome\">Headless Chrome</a> 、 <a href=\"https://github.com/GoogleChrome/puppeteer\">Puppeteer</a>、<a href=\"https://www.npmjs.com/package/prerender-spa-plugin\">Prerender SPA Plugin</a>等，因此在选型上使用的是 <a href=\"https://www.npmjs.com/package/phantomjs-prebuilt\">phantomjs-prebuilt</a>（Prerender SPA Plugin 早期版本也是基于 phantomjs-prebuilt 实现的）。</p>\n <p>通过 phantom 提供的 API 可获得当前 HTML，示例如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/202684fb.png\" alt></p>\n <p>为了提高构建效率，并行对配置的多个页面或路由进行预渲染构建，保证在 5S 内即可完成构建，流程图如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/e46f186e.png\" alt></p>\n <h2 id=\"方案优化\">方案优化</h2>\n <p>理想很丰满，现实很骨感。在实际投产中，构建时预渲染方案遇到了一个问题。</p>\n <p>我们梳理一下简化后的项目上线过程：</p>\n <p><strong>开发 -&gt; 编译 -&gt; 上线</strong></p>\n <p>假设本次修改了静态文件中的一个 JS 文件，这个文件会通过 CDN 方式在 HTML 里引用，那么最终在 HTML 文档中的引用方式是 <code>&lt;script src=\"http://cdn.com/index.js\"&gt;&lt;/script&gt;</code>。然而由于项目还没有上线，所以其实通过完整 URL 的方式是获取不到这个文件的；而预渲染的构建又是在上线动作之前，所以问题就产生了：</p>\n <p><strong>构建时预渲染无法正常获取文件，导致编译报错</strong></p>\n <p>怎么办？</p>\n <p><strong>请求劫持</strong></p>\n <p>因为在做预渲染时，我们使用启动了一个模拟的浏览器环境，根据 phantom 提供的 API，可以对发出的请求加以劫持，将获取 CDN 文件的请求劫持到本地，从而在根本上解决了这个问题。示例代码如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/9992b84f.png\" alt></p>\n <h2 id=\"构建时预渲染研发流程及效果\">构建时预渲染研发流程及效果</h2>\n <p>最终，构建时预渲染研发流程如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/af202144.png\" alt></p>\n <p><strong>开发阶段：</strong></p>\n <ul>\n  <li>通过 TypeScript 的装饰器单行引入预渲染构建触发的方法。</li>\n  <li>发布前修改编译构建的配置文件。</li>\n </ul>\n <p><strong>发布阶段：</strong></p>\n <ul>\n  <li>先进行常规的项目构建。</li>\n  <li>若有预渲染相关配置，则触发预渲染构建。</li>\n  <li>通过预渲染得到最终的文件，并完成发布上线动作。</li>\n </ul>\n <p><strong>完整的用户请求路径如下：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/999c7f32.png\" alt></p>\n <p>通过构建时预渲染在项目中的使用，FCP 的时间相比之前减少了 75%。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/53771784.png\" alt></p>\n <h3 id=\"作者简介\">作者简介</h3>\n <ul>\n  <li>寒阳，美团资深研发工程师，多年前端研发经历，负责美团支付钱包团队和美团支付前端基础技术。</li>\n </ul>\n <h3 id=\"招聘信息\">招聘信息</h3>\n <p>我们美团金融服务平台大前端研发组在高速成长中，我们欢迎更多优秀的 Web 前端研发工程师加入，感兴趣的朋友可以将简历发送到邮箱：shanghanyang@meituan.com。</p>\n</div>', '2019-07-24 15:09:51', 'Vuex', '5204', '构建时预渲染：网页首帧优化实践0.29501520352748767', '构建时预渲染：网页首帧优化实践', '2019-07-24 15:09:51', ' 寒阳');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d0982d015d', '<div class=\"content\">\n <h2 id=\"前言\">前言</h2>\n <p>自JavaScript诞生以来，前端技术发展非常迅速。移动端白屏优化是前端界面体验的一个重要优化方向，Web 前端诞生了 SSR 、CSR、预渲染等技术。在美团支付的前端技术体系里，通过预渲染提升网页首帧优化，从而优化了白屏问题，提升用户体验，并形成了最佳实践。</p>\n <p>在前端渲染领域，主要有以下几种方式可供选择：</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">CSR</th>\n    <th align=\"left\">预渲染</th>\n    <th align=\"left\">SSR</th>\n    <th align=\"left\">同构</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不依赖数据</li><li>FP 时间最快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>不依赖数据</li><li>FCP 时间比 CSR 快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li><li>客户端用户体验好</li><li>内存数据共享</li><li>客户端与服务端代码公用，开发效率高</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FCP 、FMP 慢</li></td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FMP 慢</li></td>\n    <td align=\"left\"><li>客户端数据共享成本高</li><li>模板维护成本高</li></td>\n    <td align=\"left\"><li>Node 容易形成性能瓶颈</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过对比，同构方案集合 CSR 与 SSR 的优点，可以适用于大部分业务场景。但由于在同构的系统架构中，连接前后端的 Node 中间层处于核心链路，系统可用性的瓶颈就依赖于 Node ，一旦作为短板的 Node 挂了，整个服务都不可用。</p>\n <p>结合到我们团队负责的支付业务场景里，由于支付业务追求极致的系统稳定性，服务不可用直接影响到客诉和资损，因此我们采用浏览器端渲染的架构。在保证系统稳定性的前提下，还需要保障用户体验，所以采用了预渲染的方式。</p>\n <p>那么究竟什么是预渲染呢？什么是 FCP/FMP 呢？我们先从最常见的 CSR 开始说起。</p>\n <p>以 Vue 举例，常见的 CSR 形式如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/6edb9a61.png\" alt></p>\n <p>一切看似很美好。然而，作为以用户体验为首要目标的我们发现了一个体验问题：<strong>首屏白屏问题</strong>。</p>\n <h2 id=\"为什么会首屏白屏\">为什么会首屏白屏</h2>\n <p>浏览器渲染包含 HTML 解析、DOM 树构建、CSSOM 构建、JavaScript 解析、布局、绘制等等，大致如下图所示：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f8d5d24b.png\" alt></p>\n <p>要搞清楚为什么会有白屏，就需要利用这个理论基础来对实际项目进行具体分析。通过 DevTools 进行分析：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f42e655e.png\" alt></p>\n <ul>\n  <li>等待 HTML 文档返回，此时处于白屏状态。</li>\n  <li>对 HTML 文档解析完成后进行首屏渲染，因为项目中对\n   <div id=\"app\"></div>加了灰色的背景色，因此呈现出灰屏。</li>\n  <li>进行文件加载、JS 解析等过程，导致界面长时间出于灰屏中。</li>\n  <li>当 Vue 实例触发了 mounted 后，界面显示出大体框架。</li>\n  <li>调用 API 获取到时机业务数据后才能展示出最终的页面内容。</li>\n </ul>\n <p>由此得出结论，因为要等待文件加载、CSSOM 构建、JS 解析等过程，而这些过程比较耗时，导致用户会长时间出于不可交互的首屏灰白屏状态，从而给用户一种网页很“慢”的感觉。那么一个网页太“慢”，会造成什么影响呢？</p>\n <h2 id=\"慢-的影响\">“慢”的影响</h2>\n <p><a href=\"https://www.cdnetworks.com/resources/whitepapers/us/Global%20Web%20Performance%20Matters.pdf\">Global Web Performance Matters for ecommerce</a>的报告中指出：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/267c29f0.png\" alt></p>\n <ul>\n  <li>57%的用户更在乎网页在3秒内是否完成加载。</li>\n  <li>52%的在线用户认为网页打开速度影响到他们对网站的忠实度。</li>\n  <li>每慢1秒造成页面 PV 降低11%，用户满意度也随之降低降低16%。</li>\n  <li>近半数移动用户因为在10秒内仍未打开页面从而放弃。</li>\n </ul>\n <p>我们团队主要负责美团支付相关的业务，如果网站太慢会影响用户的支付体验，会造成客诉或资损。既然网站太“慢”会造成如此重要的影响，那要如何优化呢？</p>\n <h2 id=\"优化思路\">优化思路</h2>\n <p>在<a href=\"https://developers.google.com/web/fundamentals/performance/user-centric-performance-metrics\">User-centric Performance Metrics</a>一文中，共提到了4个页面渲染的关键指标：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/ad2aa1a2.png\" alt></p>\n <p>基于这个理论基础，再回过头来看看之前项目的实际表现：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/78ef764e.png\" alt></p>\n <p>可见在 FP 的灰白屏界面停留了很长时间，用户不清楚网站是否有在正常加载，用户体验很差。</p>\n <p>试想：如果我们可以将 FCP 或 FMP 完整的 HTML 文档提前到 FP 时机预渲染，用户看到页面框架，能感受到页面正在加载而不是冷冰冰的灰白屏，那么用户更愿意等待页面加载完成，从而降低了流失率。并且这种改观在弱网环境下更明显。</p>\n <p>通过对比 FP、FCP、FMP 这三个时期 DOM 的差异，发现区别在于：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/431ac789.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/aef51a44.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/81cde23f.png\" alt></p>\n <ul>\n  <li>FP：仅有一个 div 根节点。</li>\n  <li>FCP：包含页面的基本框架，但没有数据内容。</li>\n  <li>FMP：包含页面所有元素及数据。</li>\n </ul>\n <p>仍然以 Vue 为例， 在其生命周期中，mounted 对应的是 FCP，updated 对应的是 FMP。那么具体应该使用哪个生命周期的 HTML 结构呢？</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">mounted (FCP)</th>\n    <th align=\"left\">updated (FMP)</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>只是视觉体验将 FCP 提前，实际的 TTI 时间变化不大</li></td>\n    <td align=\"left\"><li>构建时需要获取数据，编译速度慢</li><li>构建时与运行时的数据存在差异性</li><li>有复杂交互的页面，仍需等待，实际的 TTI 时间变化不大</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不受数据影响，编译速度快</li></td>\n    <td align=\"left\"><li>首屏体验好</li><li>对于纯展示类型的页面，FP 与 TTI 时间近乎一致</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过以上的对比，最终选择在 mounted 时触发构建时预渲染。由于我们采用的是 CSR 的架构，没有 Node 作为中间层，因此要实现 DOM 内容的预渲染，就需要在项目构建编译时完成对原始模板的更新替换。</p>\n <p>至此，我们明确了构建时预渲染的大体方案。</p>\n <h2 id=\"构建时预渲染方案\">构建时预渲染方案</h2>\n <p>构建时预渲染流程：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/8adc18c7.png\" alt></p>\n <h3 id=\"配置读取\">配置读取</h3>\n <p>由于 SPA 可以由多个路由构成，需要根据业务场景决定哪些路由需要用到预渲染。因此这里的配置文件主要是用于告知编译器需要进行预渲染的路由。</p>\n <p>在我们的系统架构里，脚手架是基于 Webpack 自研的，在此基础上可以自定义自动化构建任务和配置。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f44e3e64.png\" alt></p>\n <h3 id=\"触发构建\">触发构建</h3>\n <p>项目中主要是使用 TypeScript，利用 TS 的<a href=\"https://www.typescriptlang.org/docs/handbook/decorators.html\">装饰器</a>，我们封装了统一的预渲染构建的钩子方法，从而只用一行代码即可完成构建时预渲染的触发。</p>\n <p><strong>装饰器：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/7213a6c7.png\" alt></p>\n <p><strong>使用：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/cb713a1b.png\" alt></p>\n <h3 id=\"构建编译\">构建编译</h3>\n <p>从流程图上，需要在发布机上启动模拟的浏览器环境，并通过预渲染的事件钩子获取当前的页面内容，生成最终的 HTML 文件。</p>\n <p>由于我们在预渲染上的尝试比较早，当时还没有 <a href=\"https://developers.google.com/web/updates/2017/04/headless-chrome\">Headless Chrome</a> 、 <a href=\"https://github.com/GoogleChrome/puppeteer\">Puppeteer</a>、<a href=\"https://www.npmjs.com/package/prerender-spa-plugin\">Prerender SPA Plugin</a>等，因此在选型上使用的是 <a href=\"https://www.npmjs.com/package/phantomjs-prebuilt\">phantomjs-prebuilt</a>（Prerender SPA Plugin 早期版本也是基于 phantomjs-prebuilt 实现的）。</p>\n <p>通过 phantom 提供的 API 可获得当前 HTML，示例如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/202684fb.png\" alt></p>\n <p>为了提高构建效率，并行对配置的多个页面或路由进行预渲染构建，保证在 5S 内即可完成构建，流程图如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/e46f186e.png\" alt></p>\n <h2 id=\"方案优化\">方案优化</h2>\n <p>理想很丰满，现实很骨感。在实际投产中，构建时预渲染方案遇到了一个问题。</p>\n <p>我们梳理一下简化后的项目上线过程：</p>\n <p><strong>开发 -&gt; 编译 -&gt; 上线</strong></p>\n <p>假设本次修改了静态文件中的一个 JS 文件，这个文件会通过 CDN 方式在 HTML 里引用，那么最终在 HTML 文档中的引用方式是 <code>&lt;script src=\"http://cdn.com/index.js\"&gt;&lt;/script&gt;</code>。然而由于项目还没有上线，所以其实通过完整 URL 的方式是获取不到这个文件的；而预渲染的构建又是在上线动作之前，所以问题就产生了：</p>\n <p><strong>构建时预渲染无法正常获取文件，导致编译报错</strong></p>\n <p>怎么办？</p>\n <p><strong>请求劫持</strong></p>\n <p>因为在做预渲染时，我们使用启动了一个模拟的浏览器环境，根据 phantom 提供的 API，可以对发出的请求加以劫持，将获取 CDN 文件的请求劫持到本地，从而在根本上解决了这个问题。示例代码如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/9992b84f.png\" alt></p>\n <h2 id=\"构建时预渲染研发流程及效果\">构建时预渲染研发流程及效果</h2>\n <p>最终，构建时预渲染研发流程如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/af202144.png\" alt></p>\n <p><strong>开发阶段：</strong></p>\n <ul>\n  <li>通过 TypeScript 的装饰器单行引入预渲染构建触发的方法。</li>\n  <li>发布前修改编译构建的配置文件。</li>\n </ul>\n <p><strong>发布阶段：</strong></p>\n <ul>\n  <li>先进行常规的项目构建。</li>\n  <li>若有预渲染相关配置，则触发预渲染构建。</li>\n  <li>通过预渲染得到最终的文件，并完成发布上线动作。</li>\n </ul>\n <p><strong>完整的用户请求路径如下：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/999c7f32.png\" alt></p>\n <p>通过构建时预渲染在项目中的使用，FCP 的时间相比之前减少了 75%。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/53771784.png\" alt></p>\n <h3 id=\"作者简介\">作者简介</h3>\n <ul>\n  <li>寒阳，美团资深研发工程师，多年前端研发经历，负责美团支付钱包团队和美团支付前端基础技术。</li>\n </ul>\n <h3 id=\"招聘信息\">招聘信息</h3>\n <p>我们美团金融服务平台大前端研发组在高速成长中，我们欢迎更多优秀的 Web 前端研发工程师加入，感兴趣的朋友可以将简历发送到邮箱：shanghanyang@meituan.com。</p>\n</div>', '2019-07-24 15:09:52', 'jQuery', '5204', '构建时预渲染：网页首帧优化实践0.46827008368620215', '构建时预渲染：网页首帧优化实践', '2019-07-24 15:09:52', ' 寒阳');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d09876015e', '<div class=\"content\">\n <h2 id=\"前言\">前言</h2>\n <p>自JavaScript诞生以来，前端技术发展非常迅速。移动端白屏优化是前端界面体验的一个重要优化方向，Web 前端诞生了 SSR 、CSR、预渲染等技术。在美团支付的前端技术体系里，通过预渲染提升网页首帧优化，从而优化了白屏问题，提升用户体验，并形成了最佳实践。</p>\n <p>在前端渲染领域，主要有以下几种方式可供选择：</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">CSR</th>\n    <th align=\"left\">预渲染</th>\n    <th align=\"left\">SSR</th>\n    <th align=\"left\">同构</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不依赖数据</li><li>FP 时间最快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>不依赖数据</li><li>FCP 时间比 CSR 快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li><li>客户端用户体验好</li><li>内存数据共享</li><li>客户端与服务端代码公用，开发效率高</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FCP 、FMP 慢</li></td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FMP 慢</li></td>\n    <td align=\"left\"><li>客户端数据共享成本高</li><li>模板维护成本高</li></td>\n    <td align=\"left\"><li>Node 容易形成性能瓶颈</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过对比，同构方案集合 CSR 与 SSR 的优点，可以适用于大部分业务场景。但由于在同构的系统架构中，连接前后端的 Node 中间层处于核心链路，系统可用性的瓶颈就依赖于 Node ，一旦作为短板的 Node 挂了，整个服务都不可用。</p>\n <p>结合到我们团队负责的支付业务场景里，由于支付业务追求极致的系统稳定性，服务不可用直接影响到客诉和资损，因此我们采用浏览器端渲染的架构。在保证系统稳定性的前提下，还需要保障用户体验，所以采用了预渲染的方式。</p>\n <p>那么究竟什么是预渲染呢？什么是 FCP/FMP 呢？我们先从最常见的 CSR 开始说起。</p>\n <p>以 Vue 举例，常见的 CSR 形式如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/6edb9a61.png\" alt></p>\n <p>一切看似很美好。然而，作为以用户体验为首要目标的我们发现了一个体验问题：<strong>首屏白屏问题</strong>。</p>\n <h2 id=\"为什么会首屏白屏\">为什么会首屏白屏</h2>\n <p>浏览器渲染包含 HTML 解析、DOM 树构建、CSSOM 构建、JavaScript 解析、布局、绘制等等，大致如下图所示：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f8d5d24b.png\" alt></p>\n <p>要搞清楚为什么会有白屏，就需要利用这个理论基础来对实际项目进行具体分析。通过 DevTools 进行分析：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f42e655e.png\" alt></p>\n <ul>\n  <li>等待 HTML 文档返回，此时处于白屏状态。</li>\n  <li>对 HTML 文档解析完成后进行首屏渲染，因为项目中对\n   <div id=\"app\"></div>加了灰色的背景色，因此呈现出灰屏。</li>\n  <li>进行文件加载、JS 解析等过程，导致界面长时间出于灰屏中。</li>\n  <li>当 Vue 实例触发了 mounted 后，界面显示出大体框架。</li>\n  <li>调用 API 获取到时机业务数据后才能展示出最终的页面内容。</li>\n </ul>\n <p>由此得出结论，因为要等待文件加载、CSSOM 构建、JS 解析等过程，而这些过程比较耗时，导致用户会长时间出于不可交互的首屏灰白屏状态，从而给用户一种网页很“慢”的感觉。那么一个网页太“慢”，会造成什么影响呢？</p>\n <h2 id=\"慢-的影响\">“慢”的影响</h2>\n <p><a href=\"https://www.cdnetworks.com/resources/whitepapers/us/Global%20Web%20Performance%20Matters.pdf\">Global Web Performance Matters for ecommerce</a>的报告中指出：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/267c29f0.png\" alt></p>\n <ul>\n  <li>57%的用户更在乎网页在3秒内是否完成加载。</li>\n  <li>52%的在线用户认为网页打开速度影响到他们对网站的忠实度。</li>\n  <li>每慢1秒造成页面 PV 降低11%，用户满意度也随之降低降低16%。</li>\n  <li>近半数移动用户因为在10秒内仍未打开页面从而放弃。</li>\n </ul>\n <p>我们团队主要负责美团支付相关的业务，如果网站太慢会影响用户的支付体验，会造成客诉或资损。既然网站太“慢”会造成如此重要的影响，那要如何优化呢？</p>\n <h2 id=\"优化思路\">优化思路</h2>\n <p>在<a href=\"https://developers.google.com/web/fundamentals/performance/user-centric-performance-metrics\">User-centric Performance Metrics</a>一文中，共提到了4个页面渲染的关键指标：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/ad2aa1a2.png\" alt></p>\n <p>基于这个理论基础，再回过头来看看之前项目的实际表现：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/78ef764e.png\" alt></p>\n <p>可见在 FP 的灰白屏界面停留了很长时间，用户不清楚网站是否有在正常加载，用户体验很差。</p>\n <p>试想：如果我们可以将 FCP 或 FMP 完整的 HTML 文档提前到 FP 时机预渲染，用户看到页面框架，能感受到页面正在加载而不是冷冰冰的灰白屏，那么用户更愿意等待页面加载完成，从而降低了流失率。并且这种改观在弱网环境下更明显。</p>\n <p>通过对比 FP、FCP、FMP 这三个时期 DOM 的差异，发现区别在于：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/431ac789.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/aef51a44.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/81cde23f.png\" alt></p>\n <ul>\n  <li>FP：仅有一个 div 根节点。</li>\n  <li>FCP：包含页面的基本框架，但没有数据内容。</li>\n  <li>FMP：包含页面所有元素及数据。</li>\n </ul>\n <p>仍然以 Vue 为例， 在其生命周期中，mounted 对应的是 FCP，updated 对应的是 FMP。那么具体应该使用哪个生命周期的 HTML 结构呢？</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">mounted (FCP)</th>\n    <th align=\"left\">updated (FMP)</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>只是视觉体验将 FCP 提前，实际的 TTI 时间变化不大</li></td>\n    <td align=\"left\"><li>构建时需要获取数据，编译速度慢</li><li>构建时与运行时的数据存在差异性</li><li>有复杂交互的页面，仍需等待，实际的 TTI 时间变化不大</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不受数据影响，编译速度快</li></td>\n    <td align=\"left\"><li>首屏体验好</li><li>对于纯展示类型的页面，FP 与 TTI 时间近乎一致</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过以上的对比，最终选择在 mounted 时触发构建时预渲染。由于我们采用的是 CSR 的架构，没有 Node 作为中间层，因此要实现 DOM 内容的预渲染，就需要在项目构建编译时完成对原始模板的更新替换。</p>\n <p>至此，我们明确了构建时预渲染的大体方案。</p>\n <h2 id=\"构建时预渲染方案\">构建时预渲染方案</h2>\n <p>构建时预渲染流程：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/8adc18c7.png\" alt></p>\n <h3 id=\"配置读取\">配置读取</h3>\n <p>由于 SPA 可以由多个路由构成，需要根据业务场景决定哪些路由需要用到预渲染。因此这里的配置文件主要是用于告知编译器需要进行预渲染的路由。</p>\n <p>在我们的系统架构里，脚手架是基于 Webpack 自研的，在此基础上可以自定义自动化构建任务和配置。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f44e3e64.png\" alt></p>\n <h3 id=\"触发构建\">触发构建</h3>\n <p>项目中主要是使用 TypeScript，利用 TS 的<a href=\"https://www.typescriptlang.org/docs/handbook/decorators.html\">装饰器</a>，我们封装了统一的预渲染构建的钩子方法，从而只用一行代码即可完成构建时预渲染的触发。</p>\n <p><strong>装饰器：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/7213a6c7.png\" alt></p>\n <p><strong>使用：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/cb713a1b.png\" alt></p>\n <h3 id=\"构建编译\">构建编译</h3>\n <p>从流程图上，需要在发布机上启动模拟的浏览器环境，并通过预渲染的事件钩子获取当前的页面内容，生成最终的 HTML 文件。</p>\n <p>由于我们在预渲染上的尝试比较早，当时还没有 <a href=\"https://developers.google.com/web/updates/2017/04/headless-chrome\">Headless Chrome</a> 、 <a href=\"https://github.com/GoogleChrome/puppeteer\">Puppeteer</a>、<a href=\"https://www.npmjs.com/package/prerender-spa-plugin\">Prerender SPA Plugin</a>等，因此在选型上使用的是 <a href=\"https://www.npmjs.com/package/phantomjs-prebuilt\">phantomjs-prebuilt</a>（Prerender SPA Plugin 早期版本也是基于 phantomjs-prebuilt 实现的）。</p>\n <p>通过 phantom 提供的 API 可获得当前 HTML，示例如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/202684fb.png\" alt></p>\n <p>为了提高构建效率，并行对配置的多个页面或路由进行预渲染构建，保证在 5S 内即可完成构建，流程图如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/e46f186e.png\" alt></p>\n <h2 id=\"方案优化\">方案优化</h2>\n <p>理想很丰满，现实很骨感。在实际投产中，构建时预渲染方案遇到了一个问题。</p>\n <p>我们梳理一下简化后的项目上线过程：</p>\n <p><strong>开发 -&gt; 编译 -&gt; 上线</strong></p>\n <p>假设本次修改了静态文件中的一个 JS 文件，这个文件会通过 CDN 方式在 HTML 里引用，那么最终在 HTML 文档中的引用方式是 <code>&lt;script src=\"http://cdn.com/index.js\"&gt;&lt;/script&gt;</code>。然而由于项目还没有上线，所以其实通过完整 URL 的方式是获取不到这个文件的；而预渲染的构建又是在上线动作之前，所以问题就产生了：</p>\n <p><strong>构建时预渲染无法正常获取文件，导致编译报错</strong></p>\n <p>怎么办？</p>\n <p><strong>请求劫持</strong></p>\n <p>因为在做预渲染时，我们使用启动了一个模拟的浏览器环境，根据 phantom 提供的 API，可以对发出的请求加以劫持，将获取 CDN 文件的请求劫持到本地，从而在根本上解决了这个问题。示例代码如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/9992b84f.png\" alt></p>\n <h2 id=\"构建时预渲染研发流程及效果\">构建时预渲染研发流程及效果</h2>\n <p>最终，构建时预渲染研发流程如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/af202144.png\" alt></p>\n <p><strong>开发阶段：</strong></p>\n <ul>\n  <li>通过 TypeScript 的装饰器单行引入预渲染构建触发的方法。</li>\n  <li>发布前修改编译构建的配置文件。</li>\n </ul>\n <p><strong>发布阶段：</strong></p>\n <ul>\n  <li>先进行常规的项目构建。</li>\n  <li>若有预渲染相关配置，则触发预渲染构建。</li>\n  <li>通过预渲染得到最终的文件，并完成发布上线动作。</li>\n </ul>\n <p><strong>完整的用户请求路径如下：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/999c7f32.png\" alt></p>\n <p>通过构建时预渲染在项目中的使用，FCP 的时间相比之前减少了 75%。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/53771784.png\" alt></p>\n <h3 id=\"作者简介\">作者简介</h3>\n <ul>\n  <li>寒阳，美团资深研发工程师，多年前端研发经历，负责美团支付钱包团队和美团支付前端基础技术。</li>\n </ul>\n <h3 id=\"招聘信息\">招聘信息</h3>\n <p>我们美团金融服务平台大前端研发组在高速成长中，我们欢迎更多优秀的 Web 前端研发工程师加入，感兴趣的朋友可以将简历发送到邮箱：shanghanyang@meituan.com。</p>\n</div>', '2019-07-24 15:09:52', 'JavaScript', '5204', '构建时预渲染：网页首帧优化实践0.8982634938688392', '构建时预渲染：网页首帧优化实践', '2019-07-24 15:09:52', ' 寒阳');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d098c9015f', '<div class=\"content\">\n <h2 id=\"前言\">前言</h2>\n <p>自JavaScript诞生以来，前端技术发展非常迅速。移动端白屏优化是前端界面体验的一个重要优化方向，Web 前端诞生了 SSR 、CSR、预渲染等技术。在美团支付的前端技术体系里，通过预渲染提升网页首帧优化，从而优化了白屏问题，提升用户体验，并形成了最佳实践。</p>\n <p>在前端渲染领域，主要有以下几种方式可供选择：</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">CSR</th>\n    <th align=\"left\">预渲染</th>\n    <th align=\"left\">SSR</th>\n    <th align=\"left\">同构</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不依赖数据</li><li>FP 时间最快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>不依赖数据</li><li>FCP 时间比 CSR 快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li><li>客户端用户体验好</li><li>内存数据共享</li><li>客户端与服务端代码公用，开发效率高</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FCP 、FMP 慢</li></td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FMP 慢</li></td>\n    <td align=\"left\"><li>客户端数据共享成本高</li><li>模板维护成本高</li></td>\n    <td align=\"left\"><li>Node 容易形成性能瓶颈</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过对比，同构方案集合 CSR 与 SSR 的优点，可以适用于大部分业务场景。但由于在同构的系统架构中，连接前后端的 Node 中间层处于核心链路，系统可用性的瓶颈就依赖于 Node ，一旦作为短板的 Node 挂了，整个服务都不可用。</p>\n <p>结合到我们团队负责的支付业务场景里，由于支付业务追求极致的系统稳定性，服务不可用直接影响到客诉和资损，因此我们采用浏览器端渲染的架构。在保证系统稳定性的前提下，还需要保障用户体验，所以采用了预渲染的方式。</p>\n <p>那么究竟什么是预渲染呢？什么是 FCP/FMP 呢？我们先从最常见的 CSR 开始说起。</p>\n <p>以 Vue 举例，常见的 CSR 形式如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/6edb9a61.png\" alt></p>\n <p>一切看似很美好。然而，作为以用户体验为首要目标的我们发现了一个体验问题：<strong>首屏白屏问题</strong>。</p>\n <h2 id=\"为什么会首屏白屏\">为什么会首屏白屏</h2>\n <p>浏览器渲染包含 HTML 解析、DOM 树构建、CSSOM 构建、JavaScript 解析、布局、绘制等等，大致如下图所示：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f8d5d24b.png\" alt></p>\n <p>要搞清楚为什么会有白屏，就需要利用这个理论基础来对实际项目进行具体分析。通过 DevTools 进行分析：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f42e655e.png\" alt></p>\n <ul>\n  <li>等待 HTML 文档返回，此时处于白屏状态。</li>\n  <li>对 HTML 文档解析完成后进行首屏渲染，因为项目中对\n   <div id=\"app\"></div>加了灰色的背景色，因此呈现出灰屏。</li>\n  <li>进行文件加载、JS 解析等过程，导致界面长时间出于灰屏中。</li>\n  <li>当 Vue 实例触发了 mounted 后，界面显示出大体框架。</li>\n  <li>调用 API 获取到时机业务数据后才能展示出最终的页面内容。</li>\n </ul>\n <p>由此得出结论，因为要等待文件加载、CSSOM 构建、JS 解析等过程，而这些过程比较耗时，导致用户会长时间出于不可交互的首屏灰白屏状态，从而给用户一种网页很“慢”的感觉。那么一个网页太“慢”，会造成什么影响呢？</p>\n <h2 id=\"慢-的影响\">“慢”的影响</h2>\n <p><a href=\"https://www.cdnetworks.com/resources/whitepapers/us/Global%20Web%20Performance%20Matters.pdf\">Global Web Performance Matters for ecommerce</a>的报告中指出：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/267c29f0.png\" alt></p>\n <ul>\n  <li>57%的用户更在乎网页在3秒内是否完成加载。</li>\n  <li>52%的在线用户认为网页打开速度影响到他们对网站的忠实度。</li>\n  <li>每慢1秒造成页面 PV 降低11%，用户满意度也随之降低降低16%。</li>\n  <li>近半数移动用户因为在10秒内仍未打开页面从而放弃。</li>\n </ul>\n <p>我们团队主要负责美团支付相关的业务，如果网站太慢会影响用户的支付体验，会造成客诉或资损。既然网站太“慢”会造成如此重要的影响，那要如何优化呢？</p>\n <h2 id=\"优化思路\">优化思路</h2>\n <p>在<a href=\"https://developers.google.com/web/fundamentals/performance/user-centric-performance-metrics\">User-centric Performance Metrics</a>一文中，共提到了4个页面渲染的关键指标：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/ad2aa1a2.png\" alt></p>\n <p>基于这个理论基础，再回过头来看看之前项目的实际表现：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/78ef764e.png\" alt></p>\n <p>可见在 FP 的灰白屏界面停留了很长时间，用户不清楚网站是否有在正常加载，用户体验很差。</p>\n <p>试想：如果我们可以将 FCP 或 FMP 完整的 HTML 文档提前到 FP 时机预渲染，用户看到页面框架，能感受到页面正在加载而不是冷冰冰的灰白屏，那么用户更愿意等待页面加载完成，从而降低了流失率。并且这种改观在弱网环境下更明显。</p>\n <p>通过对比 FP、FCP、FMP 这三个时期 DOM 的差异，发现区别在于：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/431ac789.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/aef51a44.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/81cde23f.png\" alt></p>\n <ul>\n  <li>FP：仅有一个 div 根节点。</li>\n  <li>FCP：包含页面的基本框架，但没有数据内容。</li>\n  <li>FMP：包含页面所有元素及数据。</li>\n </ul>\n <p>仍然以 Vue 为例， 在其生命周期中，mounted 对应的是 FCP，updated 对应的是 FMP。那么具体应该使用哪个生命周期的 HTML 结构呢？</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">mounted (FCP)</th>\n    <th align=\"left\">updated (FMP)</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>只是视觉体验将 FCP 提前，实际的 TTI 时间变化不大</li></td>\n    <td align=\"left\"><li>构建时需要获取数据，编译速度慢</li><li>构建时与运行时的数据存在差异性</li><li>有复杂交互的页面，仍需等待，实际的 TTI 时间变化不大</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不受数据影响，编译速度快</li></td>\n    <td align=\"left\"><li>首屏体验好</li><li>对于纯展示类型的页面，FP 与 TTI 时间近乎一致</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过以上的对比，最终选择在 mounted 时触发构建时预渲染。由于我们采用的是 CSR 的架构，没有 Node 作为中间层，因此要实现 DOM 内容的预渲染，就需要在项目构建编译时完成对原始模板的更新替换。</p>\n <p>至此，我们明确了构建时预渲染的大体方案。</p>\n <h2 id=\"构建时预渲染方案\">构建时预渲染方案</h2>\n <p>构建时预渲染流程：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/8adc18c7.png\" alt></p>\n <h3 id=\"配置读取\">配置读取</h3>\n <p>由于 SPA 可以由多个路由构成，需要根据业务场景决定哪些路由需要用到预渲染。因此这里的配置文件主要是用于告知编译器需要进行预渲染的路由。</p>\n <p>在我们的系统架构里，脚手架是基于 Webpack 自研的，在此基础上可以自定义自动化构建任务和配置。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f44e3e64.png\" alt></p>\n <h3 id=\"触发构建\">触发构建</h3>\n <p>项目中主要是使用 TypeScript，利用 TS 的<a href=\"https://www.typescriptlang.org/docs/handbook/decorators.html\">装饰器</a>，我们封装了统一的预渲染构建的钩子方法，从而只用一行代码即可完成构建时预渲染的触发。</p>\n <p><strong>装饰器：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/7213a6c7.png\" alt></p>\n <p><strong>使用：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/cb713a1b.png\" alt></p>\n <h3 id=\"构建编译\">构建编译</h3>\n <p>从流程图上，需要在发布机上启动模拟的浏览器环境，并通过预渲染的事件钩子获取当前的页面内容，生成最终的 HTML 文件。</p>\n <p>由于我们在预渲染上的尝试比较早，当时还没有 <a href=\"https://developers.google.com/web/updates/2017/04/headless-chrome\">Headless Chrome</a> 、 <a href=\"https://github.com/GoogleChrome/puppeteer\">Puppeteer</a>、<a href=\"https://www.npmjs.com/package/prerender-spa-plugin\">Prerender SPA Plugin</a>等，因此在选型上使用的是 <a href=\"https://www.npmjs.com/package/phantomjs-prebuilt\">phantomjs-prebuilt</a>（Prerender SPA Plugin 早期版本也是基于 phantomjs-prebuilt 实现的）。</p>\n <p>通过 phantom 提供的 API 可获得当前 HTML，示例如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/202684fb.png\" alt></p>\n <p>为了提高构建效率，并行对配置的多个页面或路由进行预渲染构建，保证在 5S 内即可完成构建，流程图如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/e46f186e.png\" alt></p>\n <h2 id=\"方案优化\">方案优化</h2>\n <p>理想很丰满，现实很骨感。在实际投产中，构建时预渲染方案遇到了一个问题。</p>\n <p>我们梳理一下简化后的项目上线过程：</p>\n <p><strong>开发 -&gt; 编译 -&gt; 上线</strong></p>\n <p>假设本次修改了静态文件中的一个 JS 文件，这个文件会通过 CDN 方式在 HTML 里引用，那么最终在 HTML 文档中的引用方式是 <code>&lt;script src=\"http://cdn.com/index.js\"&gt;&lt;/script&gt;</code>。然而由于项目还没有上线，所以其实通过完整 URL 的方式是获取不到这个文件的；而预渲染的构建又是在上线动作之前，所以问题就产生了：</p>\n <p><strong>构建时预渲染无法正常获取文件，导致编译报错</strong></p>\n <p>怎么办？</p>\n <p><strong>请求劫持</strong></p>\n <p>因为在做预渲染时，我们使用启动了一个模拟的浏览器环境，根据 phantom 提供的 API，可以对发出的请求加以劫持，将获取 CDN 文件的请求劫持到本地，从而在根本上解决了这个问题。示例代码如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/9992b84f.png\" alt></p>\n <h2 id=\"构建时预渲染研发流程及效果\">构建时预渲染研发流程及效果</h2>\n <p>最终，构建时预渲染研发流程如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/af202144.png\" alt></p>\n <p><strong>开发阶段：</strong></p>\n <ul>\n  <li>通过 TypeScript 的装饰器单行引入预渲染构建触发的方法。</li>\n  <li>发布前修改编译构建的配置文件。</li>\n </ul>\n <p><strong>发布阶段：</strong></p>\n <ul>\n  <li>先进行常规的项目构建。</li>\n  <li>若有预渲染相关配置，则触发预渲染构建。</li>\n  <li>通过预渲染得到最终的文件，并完成发布上线动作。</li>\n </ul>\n <p><strong>完整的用户请求路径如下：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/999c7f32.png\" alt></p>\n <p>通过构建时预渲染在项目中的使用，FCP 的时间相比之前减少了 75%。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/53771784.png\" alt></p>\n <h3 id=\"作者简介\">作者简介</h3>\n <ul>\n  <li>寒阳，美团资深研发工程师，多年前端研发经历，负责美团支付钱包团队和美团支付前端基础技术。</li>\n </ul>\n <h3 id=\"招聘信息\">招聘信息</h3>\n <p>我们美团金融服务平台大前端研发组在高速成长中，我们欢迎更多优秀的 Web 前端研发工程师加入，感兴趣的朋友可以将简历发送到邮箱：shanghanyang@meituan.com。</p>\n</div>', '2019-07-24 15:09:52', 'Java', '5204', '构建时预渲染：网页首帧优化实践0.12225002910597427', '构建时预渲染：网页首帧优化实践', '2019-07-24 15:09:52', ' 寒阳');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d099390160', '<div class=\"content\">\n <h2 id=\"前言\">前言</h2>\n <p>自JavaScript诞生以来，前端技术发展非常迅速。移动端白屏优化是前端界面体验的一个重要优化方向，Web 前端诞生了 SSR 、CSR、预渲染等技术。在美团支付的前端技术体系里，通过预渲染提升网页首帧优化，从而优化了白屏问题，提升用户体验，并形成了最佳实践。</p>\n <p>在前端渲染领域，主要有以下几种方式可供选择：</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">CSR</th>\n    <th align=\"left\">预渲染</th>\n    <th align=\"left\">SSR</th>\n    <th align=\"left\">同构</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不依赖数据</li><li>FP 时间最快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>不依赖数据</li><li>FCP 时间比 CSR 快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li><li>客户端用户体验好</li><li>内存数据共享</li><li>客户端与服务端代码公用，开发效率高</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FCP 、FMP 慢</li></td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FMP 慢</li></td>\n    <td align=\"left\"><li>客户端数据共享成本高</li><li>模板维护成本高</li></td>\n    <td align=\"left\"><li>Node 容易形成性能瓶颈</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过对比，同构方案集合 CSR 与 SSR 的优点，可以适用于大部分业务场景。但由于在同构的系统架构中，连接前后端的 Node 中间层处于核心链路，系统可用性的瓶颈就依赖于 Node ，一旦作为短板的 Node 挂了，整个服务都不可用。</p>\n <p>结合到我们团队负责的支付业务场景里，由于支付业务追求极致的系统稳定性，服务不可用直接影响到客诉和资损，因此我们采用浏览器端渲染的架构。在保证系统稳定性的前提下，还需要保障用户体验，所以采用了预渲染的方式。</p>\n <p>那么究竟什么是预渲染呢？什么是 FCP/FMP 呢？我们先从最常见的 CSR 开始说起。</p>\n <p>以 Vue 举例，常见的 CSR 形式如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/6edb9a61.png\" alt></p>\n <p>一切看似很美好。然而，作为以用户体验为首要目标的我们发现了一个体验问题：<strong>首屏白屏问题</strong>。</p>\n <h2 id=\"为什么会首屏白屏\">为什么会首屏白屏</h2>\n <p>浏览器渲染包含 HTML 解析、DOM 树构建、CSSOM 构建、JavaScript 解析、布局、绘制等等，大致如下图所示：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f8d5d24b.png\" alt></p>\n <p>要搞清楚为什么会有白屏，就需要利用这个理论基础来对实际项目进行具体分析。通过 DevTools 进行分析：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f42e655e.png\" alt></p>\n <ul>\n  <li>等待 HTML 文档返回，此时处于白屏状态。</li>\n  <li>对 HTML 文档解析完成后进行首屏渲染，因为项目中对\n   <div id=\"app\"></div>加了灰色的背景色，因此呈现出灰屏。</li>\n  <li>进行文件加载、JS 解析等过程，导致界面长时间出于灰屏中。</li>\n  <li>当 Vue 实例触发了 mounted 后，界面显示出大体框架。</li>\n  <li>调用 API 获取到时机业务数据后才能展示出最终的页面内容。</li>\n </ul>\n <p>由此得出结论，因为要等待文件加载、CSSOM 构建、JS 解析等过程，而这些过程比较耗时，导致用户会长时间出于不可交互的首屏灰白屏状态，从而给用户一种网页很“慢”的感觉。那么一个网页太“慢”，会造成什么影响呢？</p>\n <h2 id=\"慢-的影响\">“慢”的影响</h2>\n <p><a href=\"https://www.cdnetworks.com/resources/whitepapers/us/Global%20Web%20Performance%20Matters.pdf\">Global Web Performance Matters for ecommerce</a>的报告中指出：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/267c29f0.png\" alt></p>\n <ul>\n  <li>57%的用户更在乎网页在3秒内是否完成加载。</li>\n  <li>52%的在线用户认为网页打开速度影响到他们对网站的忠实度。</li>\n  <li>每慢1秒造成页面 PV 降低11%，用户满意度也随之降低降低16%。</li>\n  <li>近半数移动用户因为在10秒内仍未打开页面从而放弃。</li>\n </ul>\n <p>我们团队主要负责美团支付相关的业务，如果网站太慢会影响用户的支付体验，会造成客诉或资损。既然网站太“慢”会造成如此重要的影响，那要如何优化呢？</p>\n <h2 id=\"优化思路\">优化思路</h2>\n <p>在<a href=\"https://developers.google.com/web/fundamentals/performance/user-centric-performance-metrics\">User-centric Performance Metrics</a>一文中，共提到了4个页面渲染的关键指标：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/ad2aa1a2.png\" alt></p>\n <p>基于这个理论基础，再回过头来看看之前项目的实际表现：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/78ef764e.png\" alt></p>\n <p>可见在 FP 的灰白屏界面停留了很长时间，用户不清楚网站是否有在正常加载，用户体验很差。</p>\n <p>试想：如果我们可以将 FCP 或 FMP 完整的 HTML 文档提前到 FP 时机预渲染，用户看到页面框架，能感受到页面正在加载而不是冷冰冰的灰白屏，那么用户更愿意等待页面加载完成，从而降低了流失率。并且这种改观在弱网环境下更明显。</p>\n <p>通过对比 FP、FCP、FMP 这三个时期 DOM 的差异，发现区别在于：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/431ac789.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/aef51a44.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/81cde23f.png\" alt></p>\n <ul>\n  <li>FP：仅有一个 div 根节点。</li>\n  <li>FCP：包含页面的基本框架，但没有数据内容。</li>\n  <li>FMP：包含页面所有元素及数据。</li>\n </ul>\n <p>仍然以 Vue 为例， 在其生命周期中，mounted 对应的是 FCP，updated 对应的是 FMP。那么具体应该使用哪个生命周期的 HTML 结构呢？</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">mounted (FCP)</th>\n    <th align=\"left\">updated (FMP)</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>只是视觉体验将 FCP 提前，实际的 TTI 时间变化不大</li></td>\n    <td align=\"left\"><li>构建时需要获取数据，编译速度慢</li><li>构建时与运行时的数据存在差异性</li><li>有复杂交互的页面，仍需等待，实际的 TTI 时间变化不大</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不受数据影响，编译速度快</li></td>\n    <td align=\"left\"><li>首屏体验好</li><li>对于纯展示类型的页面，FP 与 TTI 时间近乎一致</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过以上的对比，最终选择在 mounted 时触发构建时预渲染。由于我们采用的是 CSR 的架构，没有 Node 作为中间层，因此要实现 DOM 内容的预渲染，就需要在项目构建编译时完成对原始模板的更新替换。</p>\n <p>至此，我们明确了构建时预渲染的大体方案。</p>\n <h2 id=\"构建时预渲染方案\">构建时预渲染方案</h2>\n <p>构建时预渲染流程：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/8adc18c7.png\" alt></p>\n <h3 id=\"配置读取\">配置读取</h3>\n <p>由于 SPA 可以由多个路由构成，需要根据业务场景决定哪些路由需要用到预渲染。因此这里的配置文件主要是用于告知编译器需要进行预渲染的路由。</p>\n <p>在我们的系统架构里，脚手架是基于 Webpack 自研的，在此基础上可以自定义自动化构建任务和配置。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f44e3e64.png\" alt></p>\n <h3 id=\"触发构建\">触发构建</h3>\n <p>项目中主要是使用 TypeScript，利用 TS 的<a href=\"https://www.typescriptlang.org/docs/handbook/decorators.html\">装饰器</a>，我们封装了统一的预渲染构建的钩子方法，从而只用一行代码即可完成构建时预渲染的触发。</p>\n <p><strong>装饰器：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/7213a6c7.png\" alt></p>\n <p><strong>使用：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/cb713a1b.png\" alt></p>\n <h3 id=\"构建编译\">构建编译</h3>\n <p>从流程图上，需要在发布机上启动模拟的浏览器环境，并通过预渲染的事件钩子获取当前的页面内容，生成最终的 HTML 文件。</p>\n <p>由于我们在预渲染上的尝试比较早，当时还没有 <a href=\"https://developers.google.com/web/updates/2017/04/headless-chrome\">Headless Chrome</a> 、 <a href=\"https://github.com/GoogleChrome/puppeteer\">Puppeteer</a>、<a href=\"https://www.npmjs.com/package/prerender-spa-plugin\">Prerender SPA Plugin</a>等，因此在选型上使用的是 <a href=\"https://www.npmjs.com/package/phantomjs-prebuilt\">phantomjs-prebuilt</a>（Prerender SPA Plugin 早期版本也是基于 phantomjs-prebuilt 实现的）。</p>\n <p>通过 phantom 提供的 API 可获得当前 HTML，示例如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/202684fb.png\" alt></p>\n <p>为了提高构建效率，并行对配置的多个页面或路由进行预渲染构建，保证在 5S 内即可完成构建，流程图如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/e46f186e.png\" alt></p>\n <h2 id=\"方案优化\">方案优化</h2>\n <p>理想很丰满，现实很骨感。在实际投产中，构建时预渲染方案遇到了一个问题。</p>\n <p>我们梳理一下简化后的项目上线过程：</p>\n <p><strong>开发 -&gt; 编译 -&gt; 上线</strong></p>\n <p>假设本次修改了静态文件中的一个 JS 文件，这个文件会通过 CDN 方式在 HTML 里引用，那么最终在 HTML 文档中的引用方式是 <code>&lt;script src=\"http://cdn.com/index.js\"&gt;&lt;/script&gt;</code>。然而由于项目还没有上线，所以其实通过完整 URL 的方式是获取不到这个文件的；而预渲染的构建又是在上线动作之前，所以问题就产生了：</p>\n <p><strong>构建时预渲染无法正常获取文件，导致编译报错</strong></p>\n <p>怎么办？</p>\n <p><strong>请求劫持</strong></p>\n <p>因为在做预渲染时，我们使用启动了一个模拟的浏览器环境，根据 phantom 提供的 API，可以对发出的请求加以劫持，将获取 CDN 文件的请求劫持到本地，从而在根本上解决了这个问题。示例代码如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/9992b84f.png\" alt></p>\n <h2 id=\"构建时预渲染研发流程及效果\">构建时预渲染研发流程及效果</h2>\n <p>最终，构建时预渲染研发流程如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/af202144.png\" alt></p>\n <p><strong>开发阶段：</strong></p>\n <ul>\n  <li>通过 TypeScript 的装饰器单行引入预渲染构建触发的方法。</li>\n  <li>发布前修改编译构建的配置文件。</li>\n </ul>\n <p><strong>发布阶段：</strong></p>\n <ul>\n  <li>先进行常规的项目构建。</li>\n  <li>若有预渲染相关配置，则触发预渲染构建。</li>\n  <li>通过预渲染得到最终的文件，并完成发布上线动作。</li>\n </ul>\n <p><strong>完整的用户请求路径如下：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/999c7f32.png\" alt></p>\n <p>通过构建时预渲染在项目中的使用，FCP 的时间相比之前减少了 75%。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/53771784.png\" alt></p>\n <h3 id=\"作者简介\">作者简介</h3>\n <ul>\n  <li>寒阳，美团资深研发工程师，多年前端研发经历，负责美团支付钱包团队和美团支付前端基础技术。</li>\n </ul>\n <h3 id=\"招聘信息\">招聘信息</h3>\n <p>我们美团金融服务平台大前端研发组在高速成长中，我们欢迎更多优秀的 Web 前端研发工程师加入，感兴趣的朋友可以将简历发送到邮箱：shanghanyang@meituan.com。</p>\n</div>', '2019-07-24 15:09:52', '数据库', '5204', '构建时预渲染：网页首帧优化实践0.7158455400579904', '构建时预渲染：网页首帧优化实践', '2019-07-24 15:09:52', ' 寒阳');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d099840161', '<div class=\"content\">\n <h2 id=\"前言\">前言</h2>\n <p>自JavaScript诞生以来，前端技术发展非常迅速。移动端白屏优化是前端界面体验的一个重要优化方向，Web 前端诞生了 SSR 、CSR、预渲染等技术。在美团支付的前端技术体系里，通过预渲染提升网页首帧优化，从而优化了白屏问题，提升用户体验，并形成了最佳实践。</p>\n <p>在前端渲染领域，主要有以下几种方式可供选择：</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">CSR</th>\n    <th align=\"left\">预渲染</th>\n    <th align=\"left\">SSR</th>\n    <th align=\"left\">同构</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不依赖数据</li><li>FP 时间最快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>不依赖数据</li><li>FCP 时间比 CSR 快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li><li>客户端用户体验好</li><li>内存数据共享</li><li>客户端与服务端代码公用，开发效率高</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FCP 、FMP 慢</li></td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FMP 慢</li></td>\n    <td align=\"left\"><li>客户端数据共享成本高</li><li>模板维护成本高</li></td>\n    <td align=\"left\"><li>Node 容易形成性能瓶颈</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过对比，同构方案集合 CSR 与 SSR 的优点，可以适用于大部分业务场景。但由于在同构的系统架构中，连接前后端的 Node 中间层处于核心链路，系统可用性的瓶颈就依赖于 Node ，一旦作为短板的 Node 挂了，整个服务都不可用。</p>\n <p>结合到我们团队负责的支付业务场景里，由于支付业务追求极致的系统稳定性，服务不可用直接影响到客诉和资损，因此我们采用浏览器端渲染的架构。在保证系统稳定性的前提下，还需要保障用户体验，所以采用了预渲染的方式。</p>\n <p>那么究竟什么是预渲染呢？什么是 FCP/FMP 呢？我们先从最常见的 CSR 开始说起。</p>\n <p>以 Vue 举例，常见的 CSR 形式如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/6edb9a61.png\" alt></p>\n <p>一切看似很美好。然而，作为以用户体验为首要目标的我们发现了一个体验问题：<strong>首屏白屏问题</strong>。</p>\n <h2 id=\"为什么会首屏白屏\">为什么会首屏白屏</h2>\n <p>浏览器渲染包含 HTML 解析、DOM 树构建、CSSOM 构建、JavaScript 解析、布局、绘制等等，大致如下图所示：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f8d5d24b.png\" alt></p>\n <p>要搞清楚为什么会有白屏，就需要利用这个理论基础来对实际项目进行具体分析。通过 DevTools 进行分析：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f42e655e.png\" alt></p>\n <ul>\n  <li>等待 HTML 文档返回，此时处于白屏状态。</li>\n  <li>对 HTML 文档解析完成后进行首屏渲染，因为项目中对\n   <div id=\"app\"></div>加了灰色的背景色，因此呈现出灰屏。</li>\n  <li>进行文件加载、JS 解析等过程，导致界面长时间出于灰屏中。</li>\n  <li>当 Vue 实例触发了 mounted 后，界面显示出大体框架。</li>\n  <li>调用 API 获取到时机业务数据后才能展示出最终的页面内容。</li>\n </ul>\n <p>由此得出结论，因为要等待文件加载、CSSOM 构建、JS 解析等过程，而这些过程比较耗时，导致用户会长时间出于不可交互的首屏灰白屏状态，从而给用户一种网页很“慢”的感觉。那么一个网页太“慢”，会造成什么影响呢？</p>\n <h2 id=\"慢-的影响\">“慢”的影响</h2>\n <p><a href=\"https://www.cdnetworks.com/resources/whitepapers/us/Global%20Web%20Performance%20Matters.pdf\">Global Web Performance Matters for ecommerce</a>的报告中指出：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/267c29f0.png\" alt></p>\n <ul>\n  <li>57%的用户更在乎网页在3秒内是否完成加载。</li>\n  <li>52%的在线用户认为网页打开速度影响到他们对网站的忠实度。</li>\n  <li>每慢1秒造成页面 PV 降低11%，用户满意度也随之降低降低16%。</li>\n  <li>近半数移动用户因为在10秒内仍未打开页面从而放弃。</li>\n </ul>\n <p>我们团队主要负责美团支付相关的业务，如果网站太慢会影响用户的支付体验，会造成客诉或资损。既然网站太“慢”会造成如此重要的影响，那要如何优化呢？</p>\n <h2 id=\"优化思路\">优化思路</h2>\n <p>在<a href=\"https://developers.google.com/web/fundamentals/performance/user-centric-performance-metrics\">User-centric Performance Metrics</a>一文中，共提到了4个页面渲染的关键指标：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/ad2aa1a2.png\" alt></p>\n <p>基于这个理论基础，再回过头来看看之前项目的实际表现：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/78ef764e.png\" alt></p>\n <p>可见在 FP 的灰白屏界面停留了很长时间，用户不清楚网站是否有在正常加载，用户体验很差。</p>\n <p>试想：如果我们可以将 FCP 或 FMP 完整的 HTML 文档提前到 FP 时机预渲染，用户看到页面框架，能感受到页面正在加载而不是冷冰冰的灰白屏，那么用户更愿意等待页面加载完成，从而降低了流失率。并且这种改观在弱网环境下更明显。</p>\n <p>通过对比 FP、FCP、FMP 这三个时期 DOM 的差异，发现区别在于：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/431ac789.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/aef51a44.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/81cde23f.png\" alt></p>\n <ul>\n  <li>FP：仅有一个 div 根节点。</li>\n  <li>FCP：包含页面的基本框架，但没有数据内容。</li>\n  <li>FMP：包含页面所有元素及数据。</li>\n </ul>\n <p>仍然以 Vue 为例， 在其生命周期中，mounted 对应的是 FCP，updated 对应的是 FMP。那么具体应该使用哪个生命周期的 HTML 结构呢？</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">mounted (FCP)</th>\n    <th align=\"left\">updated (FMP)</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>只是视觉体验将 FCP 提前，实际的 TTI 时间变化不大</li></td>\n    <td align=\"left\"><li>构建时需要获取数据，编译速度慢</li><li>构建时与运行时的数据存在差异性</li><li>有复杂交互的页面，仍需等待，实际的 TTI 时间变化不大</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不受数据影响，编译速度快</li></td>\n    <td align=\"left\"><li>首屏体验好</li><li>对于纯展示类型的页面，FP 与 TTI 时间近乎一致</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过以上的对比，最终选择在 mounted 时触发构建时预渲染。由于我们采用的是 CSR 的架构，没有 Node 作为中间层，因此要实现 DOM 内容的预渲染，就需要在项目构建编译时完成对原始模板的更新替换。</p>\n <p>至此，我们明确了构建时预渲染的大体方案。</p>\n <h2 id=\"构建时预渲染方案\">构建时预渲染方案</h2>\n <p>构建时预渲染流程：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/8adc18c7.png\" alt></p>\n <h3 id=\"配置读取\">配置读取</h3>\n <p>由于 SPA 可以由多个路由构成，需要根据业务场景决定哪些路由需要用到预渲染。因此这里的配置文件主要是用于告知编译器需要进行预渲染的路由。</p>\n <p>在我们的系统架构里，脚手架是基于 Webpack 自研的，在此基础上可以自定义自动化构建任务和配置。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f44e3e64.png\" alt></p>\n <h3 id=\"触发构建\">触发构建</h3>\n <p>项目中主要是使用 TypeScript，利用 TS 的<a href=\"https://www.typescriptlang.org/docs/handbook/decorators.html\">装饰器</a>，我们封装了统一的预渲染构建的钩子方法，从而只用一行代码即可完成构建时预渲染的触发。</p>\n <p><strong>装饰器：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/7213a6c7.png\" alt></p>\n <p><strong>使用：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/cb713a1b.png\" alt></p>\n <h3 id=\"构建编译\">构建编译</h3>\n <p>从流程图上，需要在发布机上启动模拟的浏览器环境，并通过预渲染的事件钩子获取当前的页面内容，生成最终的 HTML 文件。</p>\n <p>由于我们在预渲染上的尝试比较早，当时还没有 <a href=\"https://developers.google.com/web/updates/2017/04/headless-chrome\">Headless Chrome</a> 、 <a href=\"https://github.com/GoogleChrome/puppeteer\">Puppeteer</a>、<a href=\"https://www.npmjs.com/package/prerender-spa-plugin\">Prerender SPA Plugin</a>等，因此在选型上使用的是 <a href=\"https://www.npmjs.com/package/phantomjs-prebuilt\">phantomjs-prebuilt</a>（Prerender SPA Plugin 早期版本也是基于 phantomjs-prebuilt 实现的）。</p>\n <p>通过 phantom 提供的 API 可获得当前 HTML，示例如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/202684fb.png\" alt></p>\n <p>为了提高构建效率，并行对配置的多个页面或路由进行预渲染构建，保证在 5S 内即可完成构建，流程图如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/e46f186e.png\" alt></p>\n <h2 id=\"方案优化\">方案优化</h2>\n <p>理想很丰满，现实很骨感。在实际投产中，构建时预渲染方案遇到了一个问题。</p>\n <p>我们梳理一下简化后的项目上线过程：</p>\n <p><strong>开发 -&gt; 编译 -&gt; 上线</strong></p>\n <p>假设本次修改了静态文件中的一个 JS 文件，这个文件会通过 CDN 方式在 HTML 里引用，那么最终在 HTML 文档中的引用方式是 <code>&lt;script src=\"http://cdn.com/index.js\"&gt;&lt;/script&gt;</code>。然而由于项目还没有上线，所以其实通过完整 URL 的方式是获取不到这个文件的；而预渲染的构建又是在上线动作之前，所以问题就产生了：</p>\n <p><strong>构建时预渲染无法正常获取文件，导致编译报错</strong></p>\n <p>怎么办？</p>\n <p><strong>请求劫持</strong></p>\n <p>因为在做预渲染时，我们使用启动了一个模拟的浏览器环境，根据 phantom 提供的 API，可以对发出的请求加以劫持，将获取 CDN 文件的请求劫持到本地，从而在根本上解决了这个问题。示例代码如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/9992b84f.png\" alt></p>\n <h2 id=\"构建时预渲染研发流程及效果\">构建时预渲染研发流程及效果</h2>\n <p>最终，构建时预渲染研发流程如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/af202144.png\" alt></p>\n <p><strong>开发阶段：</strong></p>\n <ul>\n  <li>通过 TypeScript 的装饰器单行引入预渲染构建触发的方法。</li>\n  <li>发布前修改编译构建的配置文件。</li>\n </ul>\n <p><strong>发布阶段：</strong></p>\n <ul>\n  <li>先进行常规的项目构建。</li>\n  <li>若有预渲染相关配置，则触发预渲染构建。</li>\n  <li>通过预渲染得到最终的文件，并完成发布上线动作。</li>\n </ul>\n <p><strong>完整的用户请求路径如下：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/999c7f32.png\" alt></p>\n <p>通过构建时预渲染在项目中的使用，FCP 的时间相比之前减少了 75%。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/53771784.png\" alt></p>\n <h3 id=\"作者简介\">作者简介</h3>\n <ul>\n  <li>寒阳，美团资深研发工程师，多年前端研发经历，负责美团支付钱包团队和美团支付前端基础技术。</li>\n </ul>\n <h3 id=\"招聘信息\">招聘信息</h3>\n <p>我们美团金融服务平台大前端研发组在高速成长中，我们欢迎更多优秀的 Web 前端研发工程师加入，感兴趣的朋友可以将简历发送到邮箱：shanghanyang@meituan.com。</p>\n</div>', '2019-07-24 15:09:52', 'Vuex', '5204', '构建时预渲染：网页首帧优化实践0.6975320419122989', '构建时预渲染：网页首帧优化实践', '2019-07-24 15:09:52', ' 寒阳');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d099ca0162', '<div class=\"content\">\n <h2 id=\"前言\">前言</h2>\n <p>自JavaScript诞生以来，前端技术发展非常迅速。移动端白屏优化是前端界面体验的一个重要优化方向，Web 前端诞生了 SSR 、CSR、预渲染等技术。在美团支付的前端技术体系里，通过预渲染提升网页首帧优化，从而优化了白屏问题，提升用户体验，并形成了最佳实践。</p>\n <p>在前端渲染领域，主要有以下几种方式可供选择：</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">CSR</th>\n    <th align=\"left\">预渲染</th>\n    <th align=\"left\">SSR</th>\n    <th align=\"left\">同构</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不依赖数据</li><li>FP 时间最快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>不依赖数据</li><li>FCP 时间比 CSR 快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li><li>客户端用户体验好</li><li>内存数据共享</li><li>客户端与服务端代码公用，开发效率高</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FCP 、FMP 慢</li></td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FMP 慢</li></td>\n    <td align=\"left\"><li>客户端数据共享成本高</li><li>模板维护成本高</li></td>\n    <td align=\"left\"><li>Node 容易形成性能瓶颈</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过对比，同构方案集合 CSR 与 SSR 的优点，可以适用于大部分业务场景。但由于在同构的系统架构中，连接前后端的 Node 中间层处于核心链路，系统可用性的瓶颈就依赖于 Node ，一旦作为短板的 Node 挂了，整个服务都不可用。</p>\n <p>结合到我们团队负责的支付业务场景里，由于支付业务追求极致的系统稳定性，服务不可用直接影响到客诉和资损，因此我们采用浏览器端渲染的架构。在保证系统稳定性的前提下，还需要保障用户体验，所以采用了预渲染的方式。</p>\n <p>那么究竟什么是预渲染呢？什么是 FCP/FMP 呢？我们先从最常见的 CSR 开始说起。</p>\n <p>以 Vue 举例，常见的 CSR 形式如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/6edb9a61.png\" alt></p>\n <p>一切看似很美好。然而，作为以用户体验为首要目标的我们发现了一个体验问题：<strong>首屏白屏问题</strong>。</p>\n <h2 id=\"为什么会首屏白屏\">为什么会首屏白屏</h2>\n <p>浏览器渲染包含 HTML 解析、DOM 树构建、CSSOM 构建、JavaScript 解析、布局、绘制等等，大致如下图所示：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f8d5d24b.png\" alt></p>\n <p>要搞清楚为什么会有白屏，就需要利用这个理论基础来对实际项目进行具体分析。通过 DevTools 进行分析：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f42e655e.png\" alt></p>\n <ul>\n  <li>等待 HTML 文档返回，此时处于白屏状态。</li>\n  <li>对 HTML 文档解析完成后进行首屏渲染，因为项目中对\n   <div id=\"app\"></div>加了灰色的背景色，因此呈现出灰屏。</li>\n  <li>进行文件加载、JS 解析等过程，导致界面长时间出于灰屏中。</li>\n  <li>当 Vue 实例触发了 mounted 后，界面显示出大体框架。</li>\n  <li>调用 API 获取到时机业务数据后才能展示出最终的页面内容。</li>\n </ul>\n <p>由此得出结论，因为要等待文件加载、CSSOM 构建、JS 解析等过程，而这些过程比较耗时，导致用户会长时间出于不可交互的首屏灰白屏状态，从而给用户一种网页很“慢”的感觉。那么一个网页太“慢”，会造成什么影响呢？</p>\n <h2 id=\"慢-的影响\">“慢”的影响</h2>\n <p><a href=\"https://www.cdnetworks.com/resources/whitepapers/us/Global%20Web%20Performance%20Matters.pdf\">Global Web Performance Matters for ecommerce</a>的报告中指出：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/267c29f0.png\" alt></p>\n <ul>\n  <li>57%的用户更在乎网页在3秒内是否完成加载。</li>\n  <li>52%的在线用户认为网页打开速度影响到他们对网站的忠实度。</li>\n  <li>每慢1秒造成页面 PV 降低11%，用户满意度也随之降低降低16%。</li>\n  <li>近半数移动用户因为在10秒内仍未打开页面从而放弃。</li>\n </ul>\n <p>我们团队主要负责美团支付相关的业务，如果网站太慢会影响用户的支付体验，会造成客诉或资损。既然网站太“慢”会造成如此重要的影响，那要如何优化呢？</p>\n <h2 id=\"优化思路\">优化思路</h2>\n <p>在<a href=\"https://developers.google.com/web/fundamentals/performance/user-centric-performance-metrics\">User-centric Performance Metrics</a>一文中，共提到了4个页面渲染的关键指标：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/ad2aa1a2.png\" alt></p>\n <p>基于这个理论基础，再回过头来看看之前项目的实际表现：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/78ef764e.png\" alt></p>\n <p>可见在 FP 的灰白屏界面停留了很长时间，用户不清楚网站是否有在正常加载，用户体验很差。</p>\n <p>试想：如果我们可以将 FCP 或 FMP 完整的 HTML 文档提前到 FP 时机预渲染，用户看到页面框架，能感受到页面正在加载而不是冷冰冰的灰白屏，那么用户更愿意等待页面加载完成，从而降低了流失率。并且这种改观在弱网环境下更明显。</p>\n <p>通过对比 FP、FCP、FMP 这三个时期 DOM 的差异，发现区别在于：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/431ac789.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/aef51a44.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/81cde23f.png\" alt></p>\n <ul>\n  <li>FP：仅有一个 div 根节点。</li>\n  <li>FCP：包含页面的基本框架，但没有数据内容。</li>\n  <li>FMP：包含页面所有元素及数据。</li>\n </ul>\n <p>仍然以 Vue 为例， 在其生命周期中，mounted 对应的是 FCP，updated 对应的是 FMP。那么具体应该使用哪个生命周期的 HTML 结构呢？</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">mounted (FCP)</th>\n    <th align=\"left\">updated (FMP)</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>只是视觉体验将 FCP 提前，实际的 TTI 时间变化不大</li></td>\n    <td align=\"left\"><li>构建时需要获取数据，编译速度慢</li><li>构建时与运行时的数据存在差异性</li><li>有复杂交互的页面，仍需等待，实际的 TTI 时间变化不大</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不受数据影响，编译速度快</li></td>\n    <td align=\"left\"><li>首屏体验好</li><li>对于纯展示类型的页面，FP 与 TTI 时间近乎一致</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过以上的对比，最终选择在 mounted 时触发构建时预渲染。由于我们采用的是 CSR 的架构，没有 Node 作为中间层，因此要实现 DOM 内容的预渲染，就需要在项目构建编译时完成对原始模板的更新替换。</p>\n <p>至此，我们明确了构建时预渲染的大体方案。</p>\n <h2 id=\"构建时预渲染方案\">构建时预渲染方案</h2>\n <p>构建时预渲染流程：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/8adc18c7.png\" alt></p>\n <h3 id=\"配置读取\">配置读取</h3>\n <p>由于 SPA 可以由多个路由构成，需要根据业务场景决定哪些路由需要用到预渲染。因此这里的配置文件主要是用于告知编译器需要进行预渲染的路由。</p>\n <p>在我们的系统架构里，脚手架是基于 Webpack 自研的，在此基础上可以自定义自动化构建任务和配置。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f44e3e64.png\" alt></p>\n <h3 id=\"触发构建\">触发构建</h3>\n <p>项目中主要是使用 TypeScript，利用 TS 的<a href=\"https://www.typescriptlang.org/docs/handbook/decorators.html\">装饰器</a>，我们封装了统一的预渲染构建的钩子方法，从而只用一行代码即可完成构建时预渲染的触发。</p>\n <p><strong>装饰器：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/7213a6c7.png\" alt></p>\n <p><strong>使用：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/cb713a1b.png\" alt></p>\n <h3 id=\"构建编译\">构建编译</h3>\n <p>从流程图上，需要在发布机上启动模拟的浏览器环境，并通过预渲染的事件钩子获取当前的页面内容，生成最终的 HTML 文件。</p>\n <p>由于我们在预渲染上的尝试比较早，当时还没有 <a href=\"https://developers.google.com/web/updates/2017/04/headless-chrome\">Headless Chrome</a> 、 <a href=\"https://github.com/GoogleChrome/puppeteer\">Puppeteer</a>、<a href=\"https://www.npmjs.com/package/prerender-spa-plugin\">Prerender SPA Plugin</a>等，因此在选型上使用的是 <a href=\"https://www.npmjs.com/package/phantomjs-prebuilt\">phantomjs-prebuilt</a>（Prerender SPA Plugin 早期版本也是基于 phantomjs-prebuilt 实现的）。</p>\n <p>通过 phantom 提供的 API 可获得当前 HTML，示例如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/202684fb.png\" alt></p>\n <p>为了提高构建效率，并行对配置的多个页面或路由进行预渲染构建，保证在 5S 内即可完成构建，流程图如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/e46f186e.png\" alt></p>\n <h2 id=\"方案优化\">方案优化</h2>\n <p>理想很丰满，现实很骨感。在实际投产中，构建时预渲染方案遇到了一个问题。</p>\n <p>我们梳理一下简化后的项目上线过程：</p>\n <p><strong>开发 -&gt; 编译 -&gt; 上线</strong></p>\n <p>假设本次修改了静态文件中的一个 JS 文件，这个文件会通过 CDN 方式在 HTML 里引用，那么最终在 HTML 文档中的引用方式是 <code>&lt;script src=\"http://cdn.com/index.js\"&gt;&lt;/script&gt;</code>。然而由于项目还没有上线，所以其实通过完整 URL 的方式是获取不到这个文件的；而预渲染的构建又是在上线动作之前，所以问题就产生了：</p>\n <p><strong>构建时预渲染无法正常获取文件，导致编译报错</strong></p>\n <p>怎么办？</p>\n <p><strong>请求劫持</strong></p>\n <p>因为在做预渲染时，我们使用启动了一个模拟的浏览器环境，根据 phantom 提供的 API，可以对发出的请求加以劫持，将获取 CDN 文件的请求劫持到本地，从而在根本上解决了这个问题。示例代码如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/9992b84f.png\" alt></p>\n <h2 id=\"构建时预渲染研发流程及效果\">构建时预渲染研发流程及效果</h2>\n <p>最终，构建时预渲染研发流程如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/af202144.png\" alt></p>\n <p><strong>开发阶段：</strong></p>\n <ul>\n  <li>通过 TypeScript 的装饰器单行引入预渲染构建触发的方法。</li>\n  <li>发布前修改编译构建的配置文件。</li>\n </ul>\n <p><strong>发布阶段：</strong></p>\n <ul>\n  <li>先进行常规的项目构建。</li>\n  <li>若有预渲染相关配置，则触发预渲染构建。</li>\n  <li>通过预渲染得到最终的文件，并完成发布上线动作。</li>\n </ul>\n <p><strong>完整的用户请求路径如下：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/999c7f32.png\" alt></p>\n <p>通过构建时预渲染在项目中的使用，FCP 的时间相比之前减少了 75%。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/53771784.png\" alt></p>\n <h3 id=\"作者简介\">作者简介</h3>\n <ul>\n  <li>寒阳，美团资深研发工程师，多年前端研发经历，负责美团支付钱包团队和美团支付前端基础技术。</li>\n </ul>\n <h3 id=\"招聘信息\">招聘信息</h3>\n <p>我们美团金融服务平台大前端研发组在高速成长中，我们欢迎更多优秀的 Web 前端研发工程师加入，感兴趣的朋友可以将简历发送到邮箱：shanghanyang@meituan.com。</p>\n</div>', '2019-07-24 15:09:52', 'jQuery', '5204', '构建时预渲染：网页首帧优化实践0.419083451351712', '构建时预渲染：网页首帧优化实践', '2019-07-24 15:09:52', ' 寒阳');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d09a180163', '<div class=\"content\">\n <h2 id=\"前言\">前言</h2>\n <p>自JavaScript诞生以来，前端技术发展非常迅速。移动端白屏优化是前端界面体验的一个重要优化方向，Web 前端诞生了 SSR 、CSR、预渲染等技术。在美团支付的前端技术体系里，通过预渲染提升网页首帧优化，从而优化了白屏问题，提升用户体验，并形成了最佳实践。</p>\n <p>在前端渲染领域，主要有以下几种方式可供选择：</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">CSR</th>\n    <th align=\"left\">预渲染</th>\n    <th align=\"left\">SSR</th>\n    <th align=\"left\">同构</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不依赖数据</li><li>FP 时间最快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>不依赖数据</li><li>FCP 时间比 CSR 快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li><li>客户端用户体验好</li><li>内存数据共享</li><li>客户端与服务端代码公用，开发效率高</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FCP 、FMP 慢</li></td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FMP 慢</li></td>\n    <td align=\"left\"><li>客户端数据共享成本高</li><li>模板维护成本高</li></td>\n    <td align=\"left\"><li>Node 容易形成性能瓶颈</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过对比，同构方案集合 CSR 与 SSR 的优点，可以适用于大部分业务场景。但由于在同构的系统架构中，连接前后端的 Node 中间层处于核心链路，系统可用性的瓶颈就依赖于 Node ，一旦作为短板的 Node 挂了，整个服务都不可用。</p>\n <p>结合到我们团队负责的支付业务场景里，由于支付业务追求极致的系统稳定性，服务不可用直接影响到客诉和资损，因此我们采用浏览器端渲染的架构。在保证系统稳定性的前提下，还需要保障用户体验，所以采用了预渲染的方式。</p>\n <p>那么究竟什么是预渲染呢？什么是 FCP/FMP 呢？我们先从最常见的 CSR 开始说起。</p>\n <p>以 Vue 举例，常见的 CSR 形式如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/6edb9a61.png\" alt></p>\n <p>一切看似很美好。然而，作为以用户体验为首要目标的我们发现了一个体验问题：<strong>首屏白屏问题</strong>。</p>\n <h2 id=\"为什么会首屏白屏\">为什么会首屏白屏</h2>\n <p>浏览器渲染包含 HTML 解析、DOM 树构建、CSSOM 构建、JavaScript 解析、布局、绘制等等，大致如下图所示：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f8d5d24b.png\" alt></p>\n <p>要搞清楚为什么会有白屏，就需要利用这个理论基础来对实际项目进行具体分析。通过 DevTools 进行分析：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f42e655e.png\" alt></p>\n <ul>\n  <li>等待 HTML 文档返回，此时处于白屏状态。</li>\n  <li>对 HTML 文档解析完成后进行首屏渲染，因为项目中对\n   <div id=\"app\"></div>加了灰色的背景色，因此呈现出灰屏。</li>\n  <li>进行文件加载、JS 解析等过程，导致界面长时间出于灰屏中。</li>\n  <li>当 Vue 实例触发了 mounted 后，界面显示出大体框架。</li>\n  <li>调用 API 获取到时机业务数据后才能展示出最终的页面内容。</li>\n </ul>\n <p>由此得出结论，因为要等待文件加载、CSSOM 构建、JS 解析等过程，而这些过程比较耗时，导致用户会长时间出于不可交互的首屏灰白屏状态，从而给用户一种网页很“慢”的感觉。那么一个网页太“慢”，会造成什么影响呢？</p>\n <h2 id=\"慢-的影响\">“慢”的影响</h2>\n <p><a href=\"https://www.cdnetworks.com/resources/whitepapers/us/Global%20Web%20Performance%20Matters.pdf\">Global Web Performance Matters for ecommerce</a>的报告中指出：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/267c29f0.png\" alt></p>\n <ul>\n  <li>57%的用户更在乎网页在3秒内是否完成加载。</li>\n  <li>52%的在线用户认为网页打开速度影响到他们对网站的忠实度。</li>\n  <li>每慢1秒造成页面 PV 降低11%，用户满意度也随之降低降低16%。</li>\n  <li>近半数移动用户因为在10秒内仍未打开页面从而放弃。</li>\n </ul>\n <p>我们团队主要负责美团支付相关的业务，如果网站太慢会影响用户的支付体验，会造成客诉或资损。既然网站太“慢”会造成如此重要的影响，那要如何优化呢？</p>\n <h2 id=\"优化思路\">优化思路</h2>\n <p>在<a href=\"https://developers.google.com/web/fundamentals/performance/user-centric-performance-metrics\">User-centric Performance Metrics</a>一文中，共提到了4个页面渲染的关键指标：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/ad2aa1a2.png\" alt></p>\n <p>基于这个理论基础，再回过头来看看之前项目的实际表现：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/78ef764e.png\" alt></p>\n <p>可见在 FP 的灰白屏界面停留了很长时间，用户不清楚网站是否有在正常加载，用户体验很差。</p>\n <p>试想：如果我们可以将 FCP 或 FMP 完整的 HTML 文档提前到 FP 时机预渲染，用户看到页面框架，能感受到页面正在加载而不是冷冰冰的灰白屏，那么用户更愿意等待页面加载完成，从而降低了流失率。并且这种改观在弱网环境下更明显。</p>\n <p>通过对比 FP、FCP、FMP 这三个时期 DOM 的差异，发现区别在于：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/431ac789.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/aef51a44.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/81cde23f.png\" alt></p>\n <ul>\n  <li>FP：仅有一个 div 根节点。</li>\n  <li>FCP：包含页面的基本框架，但没有数据内容。</li>\n  <li>FMP：包含页面所有元素及数据。</li>\n </ul>\n <p>仍然以 Vue 为例， 在其生命周期中，mounted 对应的是 FCP，updated 对应的是 FMP。那么具体应该使用哪个生命周期的 HTML 结构呢？</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">mounted (FCP)</th>\n    <th align=\"left\">updated (FMP)</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>只是视觉体验将 FCP 提前，实际的 TTI 时间变化不大</li></td>\n    <td align=\"left\"><li>构建时需要获取数据，编译速度慢</li><li>构建时与运行时的数据存在差异性</li><li>有复杂交互的页面，仍需等待，实际的 TTI 时间变化不大</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不受数据影响，编译速度快</li></td>\n    <td align=\"left\"><li>首屏体验好</li><li>对于纯展示类型的页面，FP 与 TTI 时间近乎一致</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过以上的对比，最终选择在 mounted 时触发构建时预渲染。由于我们采用的是 CSR 的架构，没有 Node 作为中间层，因此要实现 DOM 内容的预渲染，就需要在项目构建编译时完成对原始模板的更新替换。</p>\n <p>至此，我们明确了构建时预渲染的大体方案。</p>\n <h2 id=\"构建时预渲染方案\">构建时预渲染方案</h2>\n <p>构建时预渲染流程：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/8adc18c7.png\" alt></p>\n <h3 id=\"配置读取\">配置读取</h3>\n <p>由于 SPA 可以由多个路由构成，需要根据业务场景决定哪些路由需要用到预渲染。因此这里的配置文件主要是用于告知编译器需要进行预渲染的路由。</p>\n <p>在我们的系统架构里，脚手架是基于 Webpack 自研的，在此基础上可以自定义自动化构建任务和配置。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f44e3e64.png\" alt></p>\n <h3 id=\"触发构建\">触发构建</h3>\n <p>项目中主要是使用 TypeScript，利用 TS 的<a href=\"https://www.typescriptlang.org/docs/handbook/decorators.html\">装饰器</a>，我们封装了统一的预渲染构建的钩子方法，从而只用一行代码即可完成构建时预渲染的触发。</p>\n <p><strong>装饰器：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/7213a6c7.png\" alt></p>\n <p><strong>使用：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/cb713a1b.png\" alt></p>\n <h3 id=\"构建编译\">构建编译</h3>\n <p>从流程图上，需要在发布机上启动模拟的浏览器环境，并通过预渲染的事件钩子获取当前的页面内容，生成最终的 HTML 文件。</p>\n <p>由于我们在预渲染上的尝试比较早，当时还没有 <a href=\"https://developers.google.com/web/updates/2017/04/headless-chrome\">Headless Chrome</a> 、 <a href=\"https://github.com/GoogleChrome/puppeteer\">Puppeteer</a>、<a href=\"https://www.npmjs.com/package/prerender-spa-plugin\">Prerender SPA Plugin</a>等，因此在选型上使用的是 <a href=\"https://www.npmjs.com/package/phantomjs-prebuilt\">phantomjs-prebuilt</a>（Prerender SPA Plugin 早期版本也是基于 phantomjs-prebuilt 实现的）。</p>\n <p>通过 phantom 提供的 API 可获得当前 HTML，示例如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/202684fb.png\" alt></p>\n <p>为了提高构建效率，并行对配置的多个页面或路由进行预渲染构建，保证在 5S 内即可完成构建，流程图如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/e46f186e.png\" alt></p>\n <h2 id=\"方案优化\">方案优化</h2>\n <p>理想很丰满，现实很骨感。在实际投产中，构建时预渲染方案遇到了一个问题。</p>\n <p>我们梳理一下简化后的项目上线过程：</p>\n <p><strong>开发 -&gt; 编译 -&gt; 上线</strong></p>\n <p>假设本次修改了静态文件中的一个 JS 文件，这个文件会通过 CDN 方式在 HTML 里引用，那么最终在 HTML 文档中的引用方式是 <code>&lt;script src=\"http://cdn.com/index.js\"&gt;&lt;/script&gt;</code>。然而由于项目还没有上线，所以其实通过完整 URL 的方式是获取不到这个文件的；而预渲染的构建又是在上线动作之前，所以问题就产生了：</p>\n <p><strong>构建时预渲染无法正常获取文件，导致编译报错</strong></p>\n <p>怎么办？</p>\n <p><strong>请求劫持</strong></p>\n <p>因为在做预渲染时，我们使用启动了一个模拟的浏览器环境，根据 phantom 提供的 API，可以对发出的请求加以劫持，将获取 CDN 文件的请求劫持到本地，从而在根本上解决了这个问题。示例代码如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/9992b84f.png\" alt></p>\n <h2 id=\"构建时预渲染研发流程及效果\">构建时预渲染研发流程及效果</h2>\n <p>最终，构建时预渲染研发流程如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/af202144.png\" alt></p>\n <p><strong>开发阶段：</strong></p>\n <ul>\n  <li>通过 TypeScript 的装饰器单行引入预渲染构建触发的方法。</li>\n  <li>发布前修改编译构建的配置文件。</li>\n </ul>\n <p><strong>发布阶段：</strong></p>\n <ul>\n  <li>先进行常规的项目构建。</li>\n  <li>若有预渲染相关配置，则触发预渲染构建。</li>\n  <li>通过预渲染得到最终的文件，并完成发布上线动作。</li>\n </ul>\n <p><strong>完整的用户请求路径如下：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/999c7f32.png\" alt></p>\n <p>通过构建时预渲染在项目中的使用，FCP 的时间相比之前减少了 75%。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/53771784.png\" alt></p>\n <h3 id=\"作者简介\">作者简介</h3>\n <ul>\n  <li>寒阳，美团资深研发工程师，多年前端研发经历，负责美团支付钱包团队和美团支付前端基础技术。</li>\n </ul>\n <h3 id=\"招聘信息\">招聘信息</h3>\n <p>我们美团金融服务平台大前端研发组在高速成长中，我们欢迎更多优秀的 Web 前端研发工程师加入，感兴趣的朋友可以将简历发送到邮箱：shanghanyang@meituan.com。</p>\n</div>', '2019-07-24 15:09:52', 'JavaScript', '5204', '构建时预渲染：网页首帧优化实践0.2877673176962412', '构建时预渲染：网页首帧优化实践', '2019-07-24 15:09:52', ' 寒阳');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d09a570164', '<div class=\"content\">\n <h2 id=\"前言\">前言</h2>\n <p>自JavaScript诞生以来，前端技术发展非常迅速。移动端白屏优化是前端界面体验的一个重要优化方向，Web 前端诞生了 SSR 、CSR、预渲染等技术。在美团支付的前端技术体系里，通过预渲染提升网页首帧优化，从而优化了白屏问题，提升用户体验，并形成了最佳实践。</p>\n <p>在前端渲染领域，主要有以下几种方式可供选择：</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">CSR</th>\n    <th align=\"left\">预渲染</th>\n    <th align=\"left\">SSR</th>\n    <th align=\"left\">同构</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不依赖数据</li><li>FP 时间最快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>不依赖数据</li><li>FCP 时间比 CSR 快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li><li>客户端用户体验好</li><li>内存数据共享</li><li>客户端与服务端代码公用，开发效率高</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FCP 、FMP 慢</li></td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FMP 慢</li></td>\n    <td align=\"left\"><li>客户端数据共享成本高</li><li>模板维护成本高</li></td>\n    <td align=\"left\"><li>Node 容易形成性能瓶颈</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过对比，同构方案集合 CSR 与 SSR 的优点，可以适用于大部分业务场景。但由于在同构的系统架构中，连接前后端的 Node 中间层处于核心链路，系统可用性的瓶颈就依赖于 Node ，一旦作为短板的 Node 挂了，整个服务都不可用。</p>\n <p>结合到我们团队负责的支付业务场景里，由于支付业务追求极致的系统稳定性，服务不可用直接影响到客诉和资损，因此我们采用浏览器端渲染的架构。在保证系统稳定性的前提下，还需要保障用户体验，所以采用了预渲染的方式。</p>\n <p>那么究竟什么是预渲染呢？什么是 FCP/FMP 呢？我们先从最常见的 CSR 开始说起。</p>\n <p>以 Vue 举例，常见的 CSR 形式如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/6edb9a61.png\" alt></p>\n <p>一切看似很美好。然而，作为以用户体验为首要目标的我们发现了一个体验问题：<strong>首屏白屏问题</strong>。</p>\n <h2 id=\"为什么会首屏白屏\">为什么会首屏白屏</h2>\n <p>浏览器渲染包含 HTML 解析、DOM 树构建、CSSOM 构建、JavaScript 解析、布局、绘制等等，大致如下图所示：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f8d5d24b.png\" alt></p>\n <p>要搞清楚为什么会有白屏，就需要利用这个理论基础来对实际项目进行具体分析。通过 DevTools 进行分析：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f42e655e.png\" alt></p>\n <ul>\n  <li>等待 HTML 文档返回，此时处于白屏状态。</li>\n  <li>对 HTML 文档解析完成后进行首屏渲染，因为项目中对\n   <div id=\"app\"></div>加了灰色的背景色，因此呈现出灰屏。</li>\n  <li>进行文件加载、JS 解析等过程，导致界面长时间出于灰屏中。</li>\n  <li>当 Vue 实例触发了 mounted 后，界面显示出大体框架。</li>\n  <li>调用 API 获取到时机业务数据后才能展示出最终的页面内容。</li>\n </ul>\n <p>由此得出结论，因为要等待文件加载、CSSOM 构建、JS 解析等过程，而这些过程比较耗时，导致用户会长时间出于不可交互的首屏灰白屏状态，从而给用户一种网页很“慢”的感觉。那么一个网页太“慢”，会造成什么影响呢？</p>\n <h2 id=\"慢-的影响\">“慢”的影响</h2>\n <p><a href=\"https://www.cdnetworks.com/resources/whitepapers/us/Global%20Web%20Performance%20Matters.pdf\">Global Web Performance Matters for ecommerce</a>的报告中指出：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/267c29f0.png\" alt></p>\n <ul>\n  <li>57%的用户更在乎网页在3秒内是否完成加载。</li>\n  <li>52%的在线用户认为网页打开速度影响到他们对网站的忠实度。</li>\n  <li>每慢1秒造成页面 PV 降低11%，用户满意度也随之降低降低16%。</li>\n  <li>近半数移动用户因为在10秒内仍未打开页面从而放弃。</li>\n </ul>\n <p>我们团队主要负责美团支付相关的业务，如果网站太慢会影响用户的支付体验，会造成客诉或资损。既然网站太“慢”会造成如此重要的影响，那要如何优化呢？</p>\n <h2 id=\"优化思路\">优化思路</h2>\n <p>在<a href=\"https://developers.google.com/web/fundamentals/performance/user-centric-performance-metrics\">User-centric Performance Metrics</a>一文中，共提到了4个页面渲染的关键指标：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/ad2aa1a2.png\" alt></p>\n <p>基于这个理论基础，再回过头来看看之前项目的实际表现：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/78ef764e.png\" alt></p>\n <p>可见在 FP 的灰白屏界面停留了很长时间，用户不清楚网站是否有在正常加载，用户体验很差。</p>\n <p>试想：如果我们可以将 FCP 或 FMP 完整的 HTML 文档提前到 FP 时机预渲染，用户看到页面框架，能感受到页面正在加载而不是冷冰冰的灰白屏，那么用户更愿意等待页面加载完成，从而降低了流失率。并且这种改观在弱网环境下更明显。</p>\n <p>通过对比 FP、FCP、FMP 这三个时期 DOM 的差异，发现区别在于：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/431ac789.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/aef51a44.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/81cde23f.png\" alt></p>\n <ul>\n  <li>FP：仅有一个 div 根节点。</li>\n  <li>FCP：包含页面的基本框架，但没有数据内容。</li>\n  <li>FMP：包含页面所有元素及数据。</li>\n </ul>\n <p>仍然以 Vue 为例， 在其生命周期中，mounted 对应的是 FCP，updated 对应的是 FMP。那么具体应该使用哪个生命周期的 HTML 结构呢？</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">mounted (FCP)</th>\n    <th align=\"left\">updated (FMP)</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>只是视觉体验将 FCP 提前，实际的 TTI 时间变化不大</li></td>\n    <td align=\"left\"><li>构建时需要获取数据，编译速度慢</li><li>构建时与运行时的数据存在差异性</li><li>有复杂交互的页面，仍需等待，实际的 TTI 时间变化不大</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不受数据影响，编译速度快</li></td>\n    <td align=\"left\"><li>首屏体验好</li><li>对于纯展示类型的页面，FP 与 TTI 时间近乎一致</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过以上的对比，最终选择在 mounted 时触发构建时预渲染。由于我们采用的是 CSR 的架构，没有 Node 作为中间层，因此要实现 DOM 内容的预渲染，就需要在项目构建编译时完成对原始模板的更新替换。</p>\n <p>至此，我们明确了构建时预渲染的大体方案。</p>\n <h2 id=\"构建时预渲染方案\">构建时预渲染方案</h2>\n <p>构建时预渲染流程：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/8adc18c7.png\" alt></p>\n <h3 id=\"配置读取\">配置读取</h3>\n <p>由于 SPA 可以由多个路由构成，需要根据业务场景决定哪些路由需要用到预渲染。因此这里的配置文件主要是用于告知编译器需要进行预渲染的路由。</p>\n <p>在我们的系统架构里，脚手架是基于 Webpack 自研的，在此基础上可以自定义自动化构建任务和配置。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f44e3e64.png\" alt></p>\n <h3 id=\"触发构建\">触发构建</h3>\n <p>项目中主要是使用 TypeScript，利用 TS 的<a href=\"https://www.typescriptlang.org/docs/handbook/decorators.html\">装饰器</a>，我们封装了统一的预渲染构建的钩子方法，从而只用一行代码即可完成构建时预渲染的触发。</p>\n <p><strong>装饰器：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/7213a6c7.png\" alt></p>\n <p><strong>使用：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/cb713a1b.png\" alt></p>\n <h3 id=\"构建编译\">构建编译</h3>\n <p>从流程图上，需要在发布机上启动模拟的浏览器环境，并通过预渲染的事件钩子获取当前的页面内容，生成最终的 HTML 文件。</p>\n <p>由于我们在预渲染上的尝试比较早，当时还没有 <a href=\"https://developers.google.com/web/updates/2017/04/headless-chrome\">Headless Chrome</a> 、 <a href=\"https://github.com/GoogleChrome/puppeteer\">Puppeteer</a>、<a href=\"https://www.npmjs.com/package/prerender-spa-plugin\">Prerender SPA Plugin</a>等，因此在选型上使用的是 <a href=\"https://www.npmjs.com/package/phantomjs-prebuilt\">phantomjs-prebuilt</a>（Prerender SPA Plugin 早期版本也是基于 phantomjs-prebuilt 实现的）。</p>\n <p>通过 phantom 提供的 API 可获得当前 HTML，示例如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/202684fb.png\" alt></p>\n <p>为了提高构建效率，并行对配置的多个页面或路由进行预渲染构建，保证在 5S 内即可完成构建，流程图如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/e46f186e.png\" alt></p>\n <h2 id=\"方案优化\">方案优化</h2>\n <p>理想很丰满，现实很骨感。在实际投产中，构建时预渲染方案遇到了一个问题。</p>\n <p>我们梳理一下简化后的项目上线过程：</p>\n <p><strong>开发 -&gt; 编译 -&gt; 上线</strong></p>\n <p>假设本次修改了静态文件中的一个 JS 文件，这个文件会通过 CDN 方式在 HTML 里引用，那么最终在 HTML 文档中的引用方式是 <code>&lt;script src=\"http://cdn.com/index.js\"&gt;&lt;/script&gt;</code>。然而由于项目还没有上线，所以其实通过完整 URL 的方式是获取不到这个文件的；而预渲染的构建又是在上线动作之前，所以问题就产生了：</p>\n <p><strong>构建时预渲染无法正常获取文件，导致编译报错</strong></p>\n <p>怎么办？</p>\n <p><strong>请求劫持</strong></p>\n <p>因为在做预渲染时，我们使用启动了一个模拟的浏览器环境，根据 phantom 提供的 API，可以对发出的请求加以劫持，将获取 CDN 文件的请求劫持到本地，从而在根本上解决了这个问题。示例代码如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/9992b84f.png\" alt></p>\n <h2 id=\"构建时预渲染研发流程及效果\">构建时预渲染研发流程及效果</h2>\n <p>最终，构建时预渲染研发流程如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/af202144.png\" alt></p>\n <p><strong>开发阶段：</strong></p>\n <ul>\n  <li>通过 TypeScript 的装饰器单行引入预渲染构建触发的方法。</li>\n  <li>发布前修改编译构建的配置文件。</li>\n </ul>\n <p><strong>发布阶段：</strong></p>\n <ul>\n  <li>先进行常规的项目构建。</li>\n  <li>若有预渲染相关配置，则触发预渲染构建。</li>\n  <li>通过预渲染得到最终的文件，并完成发布上线动作。</li>\n </ul>\n <p><strong>完整的用户请求路径如下：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/999c7f32.png\" alt></p>\n <p>通过构建时预渲染在项目中的使用，FCP 的时间相比之前减少了 75%。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/53771784.png\" alt></p>\n <h3 id=\"作者简介\">作者简介</h3>\n <ul>\n  <li>寒阳，美团资深研发工程师，多年前端研发经历，负责美团支付钱包团队和美团支付前端基础技术。</li>\n </ul>\n <h3 id=\"招聘信息\">招聘信息</h3>\n <p>我们美团金融服务平台大前端研发组在高速成长中，我们欢迎更多优秀的 Web 前端研发工程师加入，感兴趣的朋友可以将简历发送到邮箱：shanghanyang@meituan.com。</p>\n</div>', '2019-07-24 15:09:52', 'Java', '5204', '构建时预渲染：网页首帧优化实践0.48951428478225156', '构建时预渲染：网页首帧优化实践', '2019-07-24 15:09:52', ' 寒阳');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d09aa70165', '<div class=\"content\">\n <h2 id=\"前言\">前言</h2>\n <p>自JavaScript诞生以来，前端技术发展非常迅速。移动端白屏优化是前端界面体验的一个重要优化方向，Web 前端诞生了 SSR 、CSR、预渲染等技术。在美团支付的前端技术体系里，通过预渲染提升网页首帧优化，从而优化了白屏问题，提升用户体验，并形成了最佳实践。</p>\n <p>在前端渲染领域，主要有以下几种方式可供选择：</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">CSR</th>\n    <th align=\"left\">预渲染</th>\n    <th align=\"left\">SSR</th>\n    <th align=\"left\">同构</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不依赖数据</li><li>FP 时间最快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>不依赖数据</li><li>FCP 时间比 CSR 快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li><li>客户端用户体验好</li><li>内存数据共享</li><li>客户端与服务端代码公用，开发效率高</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FCP 、FMP 慢</li></td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FMP 慢</li></td>\n    <td align=\"left\"><li>客户端数据共享成本高</li><li>模板维护成本高</li></td>\n    <td align=\"left\"><li>Node 容易形成性能瓶颈</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过对比，同构方案集合 CSR 与 SSR 的优点，可以适用于大部分业务场景。但由于在同构的系统架构中，连接前后端的 Node 中间层处于核心链路，系统可用性的瓶颈就依赖于 Node ，一旦作为短板的 Node 挂了，整个服务都不可用。</p>\n <p>结合到我们团队负责的支付业务场景里，由于支付业务追求极致的系统稳定性，服务不可用直接影响到客诉和资损，因此我们采用浏览器端渲染的架构。在保证系统稳定性的前提下，还需要保障用户体验，所以采用了预渲染的方式。</p>\n <p>那么究竟什么是预渲染呢？什么是 FCP/FMP 呢？我们先从最常见的 CSR 开始说起。</p>\n <p>以 Vue 举例，常见的 CSR 形式如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/6edb9a61.png\" alt></p>\n <p>一切看似很美好。然而，作为以用户体验为首要目标的我们发现了一个体验问题：<strong>首屏白屏问题</strong>。</p>\n <h2 id=\"为什么会首屏白屏\">为什么会首屏白屏</h2>\n <p>浏览器渲染包含 HTML 解析、DOM 树构建、CSSOM 构建、JavaScript 解析、布局、绘制等等，大致如下图所示：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f8d5d24b.png\" alt></p>\n <p>要搞清楚为什么会有白屏，就需要利用这个理论基础来对实际项目进行具体分析。通过 DevTools 进行分析：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f42e655e.png\" alt></p>\n <ul>\n  <li>等待 HTML 文档返回，此时处于白屏状态。</li>\n  <li>对 HTML 文档解析完成后进行首屏渲染，因为项目中对\n   <div id=\"app\"></div>加了灰色的背景色，因此呈现出灰屏。</li>\n  <li>进行文件加载、JS 解析等过程，导致界面长时间出于灰屏中。</li>\n  <li>当 Vue 实例触发了 mounted 后，界面显示出大体框架。</li>\n  <li>调用 API 获取到时机业务数据后才能展示出最终的页面内容。</li>\n </ul>\n <p>由此得出结论，因为要等待文件加载、CSSOM 构建、JS 解析等过程，而这些过程比较耗时，导致用户会长时间出于不可交互的首屏灰白屏状态，从而给用户一种网页很“慢”的感觉。那么一个网页太“慢”，会造成什么影响呢？</p>\n <h2 id=\"慢-的影响\">“慢”的影响</h2>\n <p><a href=\"https://www.cdnetworks.com/resources/whitepapers/us/Global%20Web%20Performance%20Matters.pdf\">Global Web Performance Matters for ecommerce</a>的报告中指出：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/267c29f0.png\" alt></p>\n <ul>\n  <li>57%的用户更在乎网页在3秒内是否完成加载。</li>\n  <li>52%的在线用户认为网页打开速度影响到他们对网站的忠实度。</li>\n  <li>每慢1秒造成页面 PV 降低11%，用户满意度也随之降低降低16%。</li>\n  <li>近半数移动用户因为在10秒内仍未打开页面从而放弃。</li>\n </ul>\n <p>我们团队主要负责美团支付相关的业务，如果网站太慢会影响用户的支付体验，会造成客诉或资损。既然网站太“慢”会造成如此重要的影响，那要如何优化呢？</p>\n <h2 id=\"优化思路\">优化思路</h2>\n <p>在<a href=\"https://developers.google.com/web/fundamentals/performance/user-centric-performance-metrics\">User-centric Performance Metrics</a>一文中，共提到了4个页面渲染的关键指标：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/ad2aa1a2.png\" alt></p>\n <p>基于这个理论基础，再回过头来看看之前项目的实际表现：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/78ef764e.png\" alt></p>\n <p>可见在 FP 的灰白屏界面停留了很长时间，用户不清楚网站是否有在正常加载，用户体验很差。</p>\n <p>试想：如果我们可以将 FCP 或 FMP 完整的 HTML 文档提前到 FP 时机预渲染，用户看到页面框架，能感受到页面正在加载而不是冷冰冰的灰白屏，那么用户更愿意等待页面加载完成，从而降低了流失率。并且这种改观在弱网环境下更明显。</p>\n <p>通过对比 FP、FCP、FMP 这三个时期 DOM 的差异，发现区别在于：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/431ac789.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/aef51a44.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/81cde23f.png\" alt></p>\n <ul>\n  <li>FP：仅有一个 div 根节点。</li>\n  <li>FCP：包含页面的基本框架，但没有数据内容。</li>\n  <li>FMP：包含页面所有元素及数据。</li>\n </ul>\n <p>仍然以 Vue 为例， 在其生命周期中，mounted 对应的是 FCP，updated 对应的是 FMP。那么具体应该使用哪个生命周期的 HTML 结构呢？</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">mounted (FCP)</th>\n    <th align=\"left\">updated (FMP)</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>只是视觉体验将 FCP 提前，实际的 TTI 时间变化不大</li></td>\n    <td align=\"left\"><li>构建时需要获取数据，编译速度慢</li><li>构建时与运行时的数据存在差异性</li><li>有复杂交互的页面，仍需等待，实际的 TTI 时间变化不大</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不受数据影响，编译速度快</li></td>\n    <td align=\"left\"><li>首屏体验好</li><li>对于纯展示类型的页面，FP 与 TTI 时间近乎一致</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过以上的对比，最终选择在 mounted 时触发构建时预渲染。由于我们采用的是 CSR 的架构，没有 Node 作为中间层，因此要实现 DOM 内容的预渲染，就需要在项目构建编译时完成对原始模板的更新替换。</p>\n <p>至此，我们明确了构建时预渲染的大体方案。</p>\n <h2 id=\"构建时预渲染方案\">构建时预渲染方案</h2>\n <p>构建时预渲染流程：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/8adc18c7.png\" alt></p>\n <h3 id=\"配置读取\">配置读取</h3>\n <p>由于 SPA 可以由多个路由构成，需要根据业务场景决定哪些路由需要用到预渲染。因此这里的配置文件主要是用于告知编译器需要进行预渲染的路由。</p>\n <p>在我们的系统架构里，脚手架是基于 Webpack 自研的，在此基础上可以自定义自动化构建任务和配置。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f44e3e64.png\" alt></p>\n <h3 id=\"触发构建\">触发构建</h3>\n <p>项目中主要是使用 TypeScript，利用 TS 的<a href=\"https://www.typescriptlang.org/docs/handbook/decorators.html\">装饰器</a>，我们封装了统一的预渲染构建的钩子方法，从而只用一行代码即可完成构建时预渲染的触发。</p>\n <p><strong>装饰器：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/7213a6c7.png\" alt></p>\n <p><strong>使用：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/cb713a1b.png\" alt></p>\n <h3 id=\"构建编译\">构建编译</h3>\n <p>从流程图上，需要在发布机上启动模拟的浏览器环境，并通过预渲染的事件钩子获取当前的页面内容，生成最终的 HTML 文件。</p>\n <p>由于我们在预渲染上的尝试比较早，当时还没有 <a href=\"https://developers.google.com/web/updates/2017/04/headless-chrome\">Headless Chrome</a> 、 <a href=\"https://github.com/GoogleChrome/puppeteer\">Puppeteer</a>、<a href=\"https://www.npmjs.com/package/prerender-spa-plugin\">Prerender SPA Plugin</a>等，因此在选型上使用的是 <a href=\"https://www.npmjs.com/package/phantomjs-prebuilt\">phantomjs-prebuilt</a>（Prerender SPA Plugin 早期版本也是基于 phantomjs-prebuilt 实现的）。</p>\n <p>通过 phantom 提供的 API 可获得当前 HTML，示例如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/202684fb.png\" alt></p>\n <p>为了提高构建效率，并行对配置的多个页面或路由进行预渲染构建，保证在 5S 内即可完成构建，流程图如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/e46f186e.png\" alt></p>\n <h2 id=\"方案优化\">方案优化</h2>\n <p>理想很丰满，现实很骨感。在实际投产中，构建时预渲染方案遇到了一个问题。</p>\n <p>我们梳理一下简化后的项目上线过程：</p>\n <p><strong>开发 -&gt; 编译 -&gt; 上线</strong></p>\n <p>假设本次修改了静态文件中的一个 JS 文件，这个文件会通过 CDN 方式在 HTML 里引用，那么最终在 HTML 文档中的引用方式是 <code>&lt;script src=\"http://cdn.com/index.js\"&gt;&lt;/script&gt;</code>。然而由于项目还没有上线，所以其实通过完整 URL 的方式是获取不到这个文件的；而预渲染的构建又是在上线动作之前，所以问题就产生了：</p>\n <p><strong>构建时预渲染无法正常获取文件，导致编译报错</strong></p>\n <p>怎么办？</p>\n <p><strong>请求劫持</strong></p>\n <p>因为在做预渲染时，我们使用启动了一个模拟的浏览器环境，根据 phantom 提供的 API，可以对发出的请求加以劫持，将获取 CDN 文件的请求劫持到本地，从而在根本上解决了这个问题。示例代码如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/9992b84f.png\" alt></p>\n <h2 id=\"构建时预渲染研发流程及效果\">构建时预渲染研发流程及效果</h2>\n <p>最终，构建时预渲染研发流程如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/af202144.png\" alt></p>\n <p><strong>开发阶段：</strong></p>\n <ul>\n  <li>通过 TypeScript 的装饰器单行引入预渲染构建触发的方法。</li>\n  <li>发布前修改编译构建的配置文件。</li>\n </ul>\n <p><strong>发布阶段：</strong></p>\n <ul>\n  <li>先进行常规的项目构建。</li>\n  <li>若有预渲染相关配置，则触发预渲染构建。</li>\n  <li>通过预渲染得到最终的文件，并完成发布上线动作。</li>\n </ul>\n <p><strong>完整的用户请求路径如下：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/999c7f32.png\" alt></p>\n <p>通过构建时预渲染在项目中的使用，FCP 的时间相比之前减少了 75%。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/53771784.png\" alt></p>\n <h3 id=\"作者简介\">作者简介</h3>\n <ul>\n  <li>寒阳，美团资深研发工程师，多年前端研发经历，负责美团支付钱包团队和美团支付前端基础技术。</li>\n </ul>\n <h3 id=\"招聘信息\">招聘信息</h3>\n <p>我们美团金融服务平台大前端研发组在高速成长中，我们欢迎更多优秀的 Web 前端研发工程师加入，感兴趣的朋友可以将简历发送到邮箱：shanghanyang@meituan.com。</p>\n</div>', '2019-07-24 15:09:52', '数据库', '5204', '构建时预渲染：网页首帧优化实践0.41776162537623374', '构建时预渲染：网页首帧优化实践', '2019-07-24 15:09:52', ' 寒阳');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d09aee0166', '<div class=\"content\">\n <h2 id=\"前言\">前言</h2>\n <p>自JavaScript诞生以来，前端技术发展非常迅速。移动端白屏优化是前端界面体验的一个重要优化方向，Web 前端诞生了 SSR 、CSR、预渲染等技术。在美团支付的前端技术体系里，通过预渲染提升网页首帧优化，从而优化了白屏问题，提升用户体验，并形成了最佳实践。</p>\n <p>在前端渲染领域，主要有以下几种方式可供选择：</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">CSR</th>\n    <th align=\"left\">预渲染</th>\n    <th align=\"left\">SSR</th>\n    <th align=\"left\">同构</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不依赖数据</li><li>FP 时间最快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>不依赖数据</li><li>FCP 时间比 CSR 快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li><li>客户端用户体验好</li><li>内存数据共享</li><li>客户端与服务端代码公用，开发效率高</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FCP 、FMP 慢</li></td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FMP 慢</li></td>\n    <td align=\"left\"><li>客户端数据共享成本高</li><li>模板维护成本高</li></td>\n    <td align=\"left\"><li>Node 容易形成性能瓶颈</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过对比，同构方案集合 CSR 与 SSR 的优点，可以适用于大部分业务场景。但由于在同构的系统架构中，连接前后端的 Node 中间层处于核心链路，系统可用性的瓶颈就依赖于 Node ，一旦作为短板的 Node 挂了，整个服务都不可用。</p>\n <p>结合到我们团队负责的支付业务场景里，由于支付业务追求极致的系统稳定性，服务不可用直接影响到客诉和资损，因此我们采用浏览器端渲染的架构。在保证系统稳定性的前提下，还需要保障用户体验，所以采用了预渲染的方式。</p>\n <p>那么究竟什么是预渲染呢？什么是 FCP/FMP 呢？我们先从最常见的 CSR 开始说起。</p>\n <p>以 Vue 举例，常见的 CSR 形式如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/6edb9a61.png\" alt></p>\n <p>一切看似很美好。然而，作为以用户体验为首要目标的我们发现了一个体验问题：<strong>首屏白屏问题</strong>。</p>\n <h2 id=\"为什么会首屏白屏\">为什么会首屏白屏</h2>\n <p>浏览器渲染包含 HTML 解析、DOM 树构建、CSSOM 构建、JavaScript 解析、布局、绘制等等，大致如下图所示：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f8d5d24b.png\" alt></p>\n <p>要搞清楚为什么会有白屏，就需要利用这个理论基础来对实际项目进行具体分析。通过 DevTools 进行分析：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f42e655e.png\" alt></p>\n <ul>\n  <li>等待 HTML 文档返回，此时处于白屏状态。</li>\n  <li>对 HTML 文档解析完成后进行首屏渲染，因为项目中对\n   <div id=\"app\"></div>加了灰色的背景色，因此呈现出灰屏。</li>\n  <li>进行文件加载、JS 解析等过程，导致界面长时间出于灰屏中。</li>\n  <li>当 Vue 实例触发了 mounted 后，界面显示出大体框架。</li>\n  <li>调用 API 获取到时机业务数据后才能展示出最终的页面内容。</li>\n </ul>\n <p>由此得出结论，因为要等待文件加载、CSSOM 构建、JS 解析等过程，而这些过程比较耗时，导致用户会长时间出于不可交互的首屏灰白屏状态，从而给用户一种网页很“慢”的感觉。那么一个网页太“慢”，会造成什么影响呢？</p>\n <h2 id=\"慢-的影响\">“慢”的影响</h2>\n <p><a href=\"https://www.cdnetworks.com/resources/whitepapers/us/Global%20Web%20Performance%20Matters.pdf\">Global Web Performance Matters for ecommerce</a>的报告中指出：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/267c29f0.png\" alt></p>\n <ul>\n  <li>57%的用户更在乎网页在3秒内是否完成加载。</li>\n  <li>52%的在线用户认为网页打开速度影响到他们对网站的忠实度。</li>\n  <li>每慢1秒造成页面 PV 降低11%，用户满意度也随之降低降低16%。</li>\n  <li>近半数移动用户因为在10秒内仍未打开页面从而放弃。</li>\n </ul>\n <p>我们团队主要负责美团支付相关的业务，如果网站太慢会影响用户的支付体验，会造成客诉或资损。既然网站太“慢”会造成如此重要的影响，那要如何优化呢？</p>\n <h2 id=\"优化思路\">优化思路</h2>\n <p>在<a href=\"https://developers.google.com/web/fundamentals/performance/user-centric-performance-metrics\">User-centric Performance Metrics</a>一文中，共提到了4个页面渲染的关键指标：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/ad2aa1a2.png\" alt></p>\n <p>基于这个理论基础，再回过头来看看之前项目的实际表现：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/78ef764e.png\" alt></p>\n <p>可见在 FP 的灰白屏界面停留了很长时间，用户不清楚网站是否有在正常加载，用户体验很差。</p>\n <p>试想：如果我们可以将 FCP 或 FMP 完整的 HTML 文档提前到 FP 时机预渲染，用户看到页面框架，能感受到页面正在加载而不是冷冰冰的灰白屏，那么用户更愿意等待页面加载完成，从而降低了流失率。并且这种改观在弱网环境下更明显。</p>\n <p>通过对比 FP、FCP、FMP 这三个时期 DOM 的差异，发现区别在于：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/431ac789.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/aef51a44.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/81cde23f.png\" alt></p>\n <ul>\n  <li>FP：仅有一个 div 根节点。</li>\n  <li>FCP：包含页面的基本框架，但没有数据内容。</li>\n  <li>FMP：包含页面所有元素及数据。</li>\n </ul>\n <p>仍然以 Vue 为例， 在其生命周期中，mounted 对应的是 FCP，updated 对应的是 FMP。那么具体应该使用哪个生命周期的 HTML 结构呢？</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">mounted (FCP)</th>\n    <th align=\"left\">updated (FMP)</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>只是视觉体验将 FCP 提前，实际的 TTI 时间变化不大</li></td>\n    <td align=\"left\"><li>构建时需要获取数据，编译速度慢</li><li>构建时与运行时的数据存在差异性</li><li>有复杂交互的页面，仍需等待，实际的 TTI 时间变化不大</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不受数据影响，编译速度快</li></td>\n    <td align=\"left\"><li>首屏体验好</li><li>对于纯展示类型的页面，FP 与 TTI 时间近乎一致</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过以上的对比，最终选择在 mounted 时触发构建时预渲染。由于我们采用的是 CSR 的架构，没有 Node 作为中间层，因此要实现 DOM 内容的预渲染，就需要在项目构建编译时完成对原始模板的更新替换。</p>\n <p>至此，我们明确了构建时预渲染的大体方案。</p>\n <h2 id=\"构建时预渲染方案\">构建时预渲染方案</h2>\n <p>构建时预渲染流程：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/8adc18c7.png\" alt></p>\n <h3 id=\"配置读取\">配置读取</h3>\n <p>由于 SPA 可以由多个路由构成，需要根据业务场景决定哪些路由需要用到预渲染。因此这里的配置文件主要是用于告知编译器需要进行预渲染的路由。</p>\n <p>在我们的系统架构里，脚手架是基于 Webpack 自研的，在此基础上可以自定义自动化构建任务和配置。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f44e3e64.png\" alt></p>\n <h3 id=\"触发构建\">触发构建</h3>\n <p>项目中主要是使用 TypeScript，利用 TS 的<a href=\"https://www.typescriptlang.org/docs/handbook/decorators.html\">装饰器</a>，我们封装了统一的预渲染构建的钩子方法，从而只用一行代码即可完成构建时预渲染的触发。</p>\n <p><strong>装饰器：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/7213a6c7.png\" alt></p>\n <p><strong>使用：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/cb713a1b.png\" alt></p>\n <h3 id=\"构建编译\">构建编译</h3>\n <p>从流程图上，需要在发布机上启动模拟的浏览器环境，并通过预渲染的事件钩子获取当前的页面内容，生成最终的 HTML 文件。</p>\n <p>由于我们在预渲染上的尝试比较早，当时还没有 <a href=\"https://developers.google.com/web/updates/2017/04/headless-chrome\">Headless Chrome</a> 、 <a href=\"https://github.com/GoogleChrome/puppeteer\">Puppeteer</a>、<a href=\"https://www.npmjs.com/package/prerender-spa-plugin\">Prerender SPA Plugin</a>等，因此在选型上使用的是 <a href=\"https://www.npmjs.com/package/phantomjs-prebuilt\">phantomjs-prebuilt</a>（Prerender SPA Plugin 早期版本也是基于 phantomjs-prebuilt 实现的）。</p>\n <p>通过 phantom 提供的 API 可获得当前 HTML，示例如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/202684fb.png\" alt></p>\n <p>为了提高构建效率，并行对配置的多个页面或路由进行预渲染构建，保证在 5S 内即可完成构建，流程图如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/e46f186e.png\" alt></p>\n <h2 id=\"方案优化\">方案优化</h2>\n <p>理想很丰满，现实很骨感。在实际投产中，构建时预渲染方案遇到了一个问题。</p>\n <p>我们梳理一下简化后的项目上线过程：</p>\n <p><strong>开发 -&gt; 编译 -&gt; 上线</strong></p>\n <p>假设本次修改了静态文件中的一个 JS 文件，这个文件会通过 CDN 方式在 HTML 里引用，那么最终在 HTML 文档中的引用方式是 <code>&lt;script src=\"http://cdn.com/index.js\"&gt;&lt;/script&gt;</code>。然而由于项目还没有上线，所以其实通过完整 URL 的方式是获取不到这个文件的；而预渲染的构建又是在上线动作之前，所以问题就产生了：</p>\n <p><strong>构建时预渲染无法正常获取文件，导致编译报错</strong></p>\n <p>怎么办？</p>\n <p><strong>请求劫持</strong></p>\n <p>因为在做预渲染时，我们使用启动了一个模拟的浏览器环境，根据 phantom 提供的 API，可以对发出的请求加以劫持，将获取 CDN 文件的请求劫持到本地，从而在根本上解决了这个问题。示例代码如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/9992b84f.png\" alt></p>\n <h2 id=\"构建时预渲染研发流程及效果\">构建时预渲染研发流程及效果</h2>\n <p>最终，构建时预渲染研发流程如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/af202144.png\" alt></p>\n <p><strong>开发阶段：</strong></p>\n <ul>\n  <li>通过 TypeScript 的装饰器单行引入预渲染构建触发的方法。</li>\n  <li>发布前修改编译构建的配置文件。</li>\n </ul>\n <p><strong>发布阶段：</strong></p>\n <ul>\n  <li>先进行常规的项目构建。</li>\n  <li>若有预渲染相关配置，则触发预渲染构建。</li>\n  <li>通过预渲染得到最终的文件，并完成发布上线动作。</li>\n </ul>\n <p><strong>完整的用户请求路径如下：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/999c7f32.png\" alt></p>\n <p>通过构建时预渲染在项目中的使用，FCP 的时间相比之前减少了 75%。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/53771784.png\" alt></p>\n <h3 id=\"作者简介\">作者简介</h3>\n <ul>\n  <li>寒阳，美团资深研发工程师，多年前端研发经历，负责美团支付钱包团队和美团支付前端基础技术。</li>\n </ul>\n <h3 id=\"招聘信息\">招聘信息</h3>\n <p>我们美团金融服务平台大前端研发组在高速成长中，我们欢迎更多优秀的 Web 前端研发工程师加入，感兴趣的朋友可以将简历发送到邮箱：shanghanyang@meituan.com。</p>\n</div>', '2019-07-24 15:09:52', 'Vuex', '5204', '构建时预渲染：网页首帧优化实践0.752221832553294', '构建时预渲染：网页首帧优化实践', '2019-07-24 15:09:52', ' 寒阳');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d09b330167', '<div class=\"content\">\n <h2 id=\"前言\">前言</h2>\n <p>自JavaScript诞生以来，前端技术发展非常迅速。移动端白屏优化是前端界面体验的一个重要优化方向，Web 前端诞生了 SSR 、CSR、预渲染等技术。在美团支付的前端技术体系里，通过预渲染提升网页首帧优化，从而优化了白屏问题，提升用户体验，并形成了最佳实践。</p>\n <p>在前端渲染领域，主要有以下几种方式可供选择：</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">CSR</th>\n    <th align=\"left\">预渲染</th>\n    <th align=\"left\">SSR</th>\n    <th align=\"left\">同构</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不依赖数据</li><li>FP 时间最快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>不依赖数据</li><li>FCP 时间比 CSR 快</li><li>客户端用户体验好</li><li>内存数据共享</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li></td>\n    <td align=\"left\"><li>SEO 友好</li><li>首屏性能高，FMP 比 CSR 和预渲染快</li><li>客户端用户体验好</li><li>内存数据共享</li><li>客户端与服务端代码公用，开发效率高</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FCP 、FMP 慢</li></td>\n    <td align=\"left\"><li>SEO 不友好</li><li>FMP 慢</li></td>\n    <td align=\"left\"><li>客户端数据共享成本高</li><li>模板维护成本高</li></td>\n    <td align=\"left\"><li>Node 容易形成性能瓶颈</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过对比，同构方案集合 CSR 与 SSR 的优点，可以适用于大部分业务场景。但由于在同构的系统架构中，连接前后端的 Node 中间层处于核心链路，系统可用性的瓶颈就依赖于 Node ，一旦作为短板的 Node 挂了，整个服务都不可用。</p>\n <p>结合到我们团队负责的支付业务场景里，由于支付业务追求极致的系统稳定性，服务不可用直接影响到客诉和资损，因此我们采用浏览器端渲染的架构。在保证系统稳定性的前提下，还需要保障用户体验，所以采用了预渲染的方式。</p>\n <p>那么究竟什么是预渲染呢？什么是 FCP/FMP 呢？我们先从最常见的 CSR 开始说起。</p>\n <p>以 Vue 举例，常见的 CSR 形式如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/6edb9a61.png\" alt></p>\n <p>一切看似很美好。然而，作为以用户体验为首要目标的我们发现了一个体验问题：<strong>首屏白屏问题</strong>。</p>\n <h2 id=\"为什么会首屏白屏\">为什么会首屏白屏</h2>\n <p>浏览器渲染包含 HTML 解析、DOM 树构建、CSSOM 构建、JavaScript 解析、布局、绘制等等，大致如下图所示：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f8d5d24b.png\" alt></p>\n <p>要搞清楚为什么会有白屏，就需要利用这个理论基础来对实际项目进行具体分析。通过 DevTools 进行分析：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f42e655e.png\" alt></p>\n <ul>\n  <li>等待 HTML 文档返回，此时处于白屏状态。</li>\n  <li>对 HTML 文档解析完成后进行首屏渲染，因为项目中对\n   <div id=\"app\"></div>加了灰色的背景色，因此呈现出灰屏。</li>\n  <li>进行文件加载、JS 解析等过程，导致界面长时间出于灰屏中。</li>\n  <li>当 Vue 实例触发了 mounted 后，界面显示出大体框架。</li>\n  <li>调用 API 获取到时机业务数据后才能展示出最终的页面内容。</li>\n </ul>\n <p>由此得出结论，因为要等待文件加载、CSSOM 构建、JS 解析等过程，而这些过程比较耗时，导致用户会长时间出于不可交互的首屏灰白屏状态，从而给用户一种网页很“慢”的感觉。那么一个网页太“慢”，会造成什么影响呢？</p>\n <h2 id=\"慢-的影响\">“慢”的影响</h2>\n <p><a href=\"https://www.cdnetworks.com/resources/whitepapers/us/Global%20Web%20Performance%20Matters.pdf\">Global Web Performance Matters for ecommerce</a>的报告中指出：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/267c29f0.png\" alt></p>\n <ul>\n  <li>57%的用户更在乎网页在3秒内是否完成加载。</li>\n  <li>52%的在线用户认为网页打开速度影响到他们对网站的忠实度。</li>\n  <li>每慢1秒造成页面 PV 降低11%，用户满意度也随之降低降低16%。</li>\n  <li>近半数移动用户因为在10秒内仍未打开页面从而放弃。</li>\n </ul>\n <p>我们团队主要负责美团支付相关的业务，如果网站太慢会影响用户的支付体验，会造成客诉或资损。既然网站太“慢”会造成如此重要的影响，那要如何优化呢？</p>\n <h2 id=\"优化思路\">优化思路</h2>\n <p>在<a href=\"https://developers.google.com/web/fundamentals/performance/user-centric-performance-metrics\">User-centric Performance Metrics</a>一文中，共提到了4个页面渲染的关键指标：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/ad2aa1a2.png\" alt></p>\n <p>基于这个理论基础，再回过头来看看之前项目的实际表现：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/78ef764e.png\" alt></p>\n <p>可见在 FP 的灰白屏界面停留了很长时间，用户不清楚网站是否有在正常加载，用户体验很差。</p>\n <p>试想：如果我们可以将 FCP 或 FMP 完整的 HTML 文档提前到 FP 时机预渲染，用户看到页面框架，能感受到页面正在加载而不是冷冰冰的灰白屏，那么用户更愿意等待页面加载完成，从而降低了流失率。并且这种改观在弱网环境下更明显。</p>\n <p>通过对比 FP、FCP、FMP 这三个时期 DOM 的差异，发现区别在于：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/431ac789.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/aef51a44.png\" alt></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/81cde23f.png\" alt></p>\n <ul>\n  <li>FP：仅有一个 div 根节点。</li>\n  <li>FCP：包含页面的基本框架，但没有数据内容。</li>\n  <li>FMP：包含页面所有元素及数据。</li>\n </ul>\n <p>仍然以 Vue 为例， 在其生命周期中，mounted 对应的是 FCP，updated 对应的是 FMP。那么具体应该使用哪个生命周期的 HTML 结构呢？</p>\n <table>\n  <thead>\n   <tr>\n    <th align=\"center\"></th>\n    <th align=\"left\">mounted (FCP)</th>\n    <th align=\"left\">updated (FMP)</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td align=\"center\">缺点</td>\n    <td align=\"left\"><li>只是视觉体验将 FCP 提前，实际的 TTI 时间变化不大</li></td>\n    <td align=\"left\"><li>构建时需要获取数据，编译速度慢</li><li>构建时与运行时的数据存在差异性</li><li>有复杂交互的页面，仍需等待，实际的 TTI 时间变化不大</li></td>\n   </tr>\n   <tr>\n    <td align=\"center\">优点</td>\n    <td align=\"left\"><li>不受数据影响，编译速度快</li></td>\n    <td align=\"left\"><li>首屏体验好</li><li>对于纯展示类型的页面，FP 与 TTI 时间近乎一致</li></td>\n   </tr>\n  </tbody>\n </table>\n <p>通过以上的对比，最终选择在 mounted 时触发构建时预渲染。由于我们采用的是 CSR 的架构，没有 Node 作为中间层，因此要实现 DOM 内容的预渲染，就需要在项目构建编译时完成对原始模板的更新替换。</p>\n <p>至此，我们明确了构建时预渲染的大体方案。</p>\n <h2 id=\"构建时预渲染方案\">构建时预渲染方案</h2>\n <p>构建时预渲染流程：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/8adc18c7.png\" alt></p>\n <h3 id=\"配置读取\">配置读取</h3>\n <p>由于 SPA 可以由多个路由构成，需要根据业务场景决定哪些路由需要用到预渲染。因此这里的配置文件主要是用于告知编译器需要进行预渲染的路由。</p>\n <p>在我们的系统架构里，脚手架是基于 Webpack 自研的，在此基础上可以自定义自动化构建任务和配置。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/f44e3e64.png\" alt></p>\n <h3 id=\"触发构建\">触发构建</h3>\n <p>项目中主要是使用 TypeScript，利用 TS 的<a href=\"https://www.typescriptlang.org/docs/handbook/decorators.html\">装饰器</a>，我们封装了统一的预渲染构建的钩子方法，从而只用一行代码即可完成构建时预渲染的触发。</p>\n <p><strong>装饰器：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/7213a6c7.png\" alt></p>\n <p><strong>使用：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/cb713a1b.png\" alt></p>\n <h3 id=\"构建编译\">构建编译</h3>\n <p>从流程图上，需要在发布机上启动模拟的浏览器环境，并通过预渲染的事件钩子获取当前的页面内容，生成最终的 HTML 文件。</p>\n <p>由于我们在预渲染上的尝试比较早，当时还没有 <a href=\"https://developers.google.com/web/updates/2017/04/headless-chrome\">Headless Chrome</a> 、 <a href=\"https://github.com/GoogleChrome/puppeteer\">Puppeteer</a>、<a href=\"https://www.npmjs.com/package/prerender-spa-plugin\">Prerender SPA Plugin</a>等，因此在选型上使用的是 <a href=\"https://www.npmjs.com/package/phantomjs-prebuilt\">phantomjs-prebuilt</a>（Prerender SPA Plugin 早期版本也是基于 phantomjs-prebuilt 实现的）。</p>\n <p>通过 phantom 提供的 API 可获得当前 HTML，示例如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/202684fb.png\" alt></p>\n <p>为了提高构建效率，并行对配置的多个页面或路由进行预渲染构建，保证在 5S 内即可完成构建，流程图如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/e46f186e.png\" alt></p>\n <h2 id=\"方案优化\">方案优化</h2>\n <p>理想很丰满，现实很骨感。在实际投产中，构建时预渲染方案遇到了一个问题。</p>\n <p>我们梳理一下简化后的项目上线过程：</p>\n <p><strong>开发 -&gt; 编译 -&gt; 上线</strong></p>\n <p>假设本次修改了静态文件中的一个 JS 文件，这个文件会通过 CDN 方式在 HTML 里引用，那么最终在 HTML 文档中的引用方式是 <code>&lt;script src=\"http://cdn.com/index.js\"&gt;&lt;/script&gt;</code>。然而由于项目还没有上线，所以其实通过完整 URL 的方式是获取不到这个文件的；而预渲染的构建又是在上线动作之前，所以问题就产生了：</p>\n <p><strong>构建时预渲染无法正常获取文件，导致编译报错</strong></p>\n <p>怎么办？</p>\n <p><strong>请求劫持</strong></p>\n <p>因为在做预渲染时，我们使用启动了一个模拟的浏览器环境，根据 phantom 提供的 API，可以对发出的请求加以劫持，将获取 CDN 文件的请求劫持到本地，从而在根本上解决了这个问题。示例代码如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/9992b84f.png\" alt></p>\n <h2 id=\"构建时预渲染研发流程及效果\">构建时预渲染研发流程及效果</h2>\n <p>最终，构建时预渲染研发流程如下：</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/af202144.png\" alt></p>\n <p><strong>开发阶段：</strong></p>\n <ul>\n  <li>通过 TypeScript 的装饰器单行引入预渲染构建触发的方法。</li>\n  <li>发布前修改编译构建的配置文件。</li>\n </ul>\n <p><strong>发布阶段：</strong></p>\n <ul>\n  <li>先进行常规的项目构建。</li>\n  <li>若有预渲染相关配置，则触发预渲染构建。</li>\n  <li>通过预渲染得到最终的文件，并完成发布上线动作。</li>\n </ul>\n <p><strong>完整的用户请求路径如下：</strong></p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/999c7f32.png\" alt></p>\n <p>通过构建时预渲染在项目中的使用，FCP 的时间相比之前减少了 75%。</p>\n <p><img src=\"https://awps-assets.meituan.net/mit-x/blog-images-bundle-2018b/53771784.png\" alt></p>\n <h3 id=\"作者简介\">作者简介</h3>\n <ul>\n  <li>寒阳，美团资深研发工程师，多年前端研发经历，负责美团支付钱包团队和美团支付前端基础技术。</li>\n </ul>\n <h3 id=\"招聘信息\">招聘信息</h3>\n <p>我们美团金融服务平台大前端研发组在高速成长中，我们欢迎更多优秀的 Web 前端研发工程师加入，感兴趣的朋友可以将简历发送到邮箱：shanghanyang@meituan.com。</p>\n</div>', '2019-07-24 15:09:52', 'jQuery', '5204', '构建时预渲染：网页首帧优化实践0.3630093840974542', '构建时预渲染：网页首帧优化实践', '2019-07-24 15:09:52', ' 寒阳');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d09bdc0168', '<div class=\"content\">\n <h2 id=\"前言\">前言</h2>\n <p>增强现实（Augmented Reality）是一种在视觉上呈现虚拟物体与现实场景结合的技术。Apple 公司在 2017 年 6 月正式推出了 ARKit，iOS 开发者可以在这个平台上使用简单便捷的 API 来开发 AR 应用程序。</p>\n <p>本文将结合美团到餐业务场景，介绍一种基于位置服务（LBS）的 AR 应用。使用 AR 的方式展现商家相对用户的位置，这会给用户带来身临其境的沉浸式体验。下面是实现效果：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/732a753f62e16fad5f3a25b62ef0fb5f3141236.gif\" alt=\"图1 实现效果图\"></p>\n <h2 id=\"项目实现\">项目实现</h2>\n <p>iOS 平台的 AR 应用通常由 ARKit 和渲染引擎两部分构成：</p>\n <p><img src=\"https://p1.meituan.net/travelcube/53e453c1c4b51661304e67e86b732fa554579.png\" alt=\"图2 AR 应用的整体架构\"></p>\n <p>ARKit 是连接真实世界与虚拟世界的桥梁，而渲染引擎是把虚拟世界的内容渲染到屏幕上。本部分会围绕这两个方面展开介绍。</p>\n <h2 id=\"arkit\">ARKit</h2>\n <p>ARKit 的 ARSession 负责管理每一帧的信息。ARSession 做了两件事：拍摄图像并获取传感器数据；对数据进行分析处理后逐帧输出。如下图：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/67ac56552e4facfc2b043d07bce35c92123099.png\" alt=\"图3 ARKit 结构图\"></p>\n <h3 id=\"设备追踪\">设备追踪</h3>\n <p>设备追踪确保了虚拟物体的位置不受设备移动的影响。在启动 ARSession 时需要传入一个 ARSessionConfiguration 的子类对象，以区别三种追踪模式：</p>\n <ul>\n  <li>ARFaceTrackingConfiguration</li>\n  <li>ARWorldTrackingConfiguration</li>\n  <li>AROrientationTrackingConfiguration</li>\n </ul>\n <p>其中 ARFaceTrackingConfiguration 可以识别人脸的位置、方向以及获取拓扑结构。此外，还可以探测到预设的 52 种丰富的面部动作，如眨眼、微笑、皱眉等等。ARFaceTrackingConfiguration 需要调用支持 TrueDepth 的前置摄像头进行追踪，显然不能满足我们的需求，这里就不做过多的介绍。下面只针对使用后置摄像头的另外两种类型进行对比。</p>\n <h4 id=\"arworldtrackingconfiguration\">ARWorldTrackingConfiguration</h4>\n <p>ARWorldTrackingConfiguration 提供 6DoF（Six Degree of Freedom）的设备追踪。包括三个姿态角 Yaw（偏航角）、Pitch（俯仰角）和 Roll（翻滚角），以及沿笛卡尔坐标系中 X、Y 和 Z 三轴的偏移量：</p>\n <p><img src=\"https://p1.meituan.net/travelcube/4a7aab5b6336c60e0ce2242d4a63b263245819.png\" alt=\"图4 6DoF\"></p>\n <p>不仅如此，ARKit 还使用了 VIO（Visual-Inertial Odometry）来提高设备运动追踪的精度。在使用惯性测量单元(<a href=\"https://en.wikipedia.org/wiki/Inertial_measurement_unit\">IMU</a>)检测运动轨迹的同时，对运动过程中摄像头拍摄到的图片进行图像处理。将图像中的一些特征点的变化轨迹与传感器的结果进行比对后，输出最终的高精度结果。</p>\n <p>从追踪的维度和准确度来看，ARWorldTrackingConfiguration 非常强悍。但如<a href=\"https://developer.apple.com/documentation/arkit/understanding_world_tracking_in_arkit?language=objc\">官方文档</a>所言，它也有两个致命的缺点：</p>\n <ul>\n  <li>受环境光线质量影响</li>\n  <li>受剧烈运动影响</li>\n </ul>\n <p>由于在追踪过程中要通过采集图像来提取特征点，所以图像的质量会影响追踪的结果。在光线较差的环境下（比如夜晚或者强光），拍摄的图像无法提供正确的参考，追踪的质量也会随之下降。</p>\n <p>追踪过程中会逐帧比对图像与传感器结果，如果设备在短时间内剧烈的移动，会很大程度上干扰追踪结果。追踪的结果与真实的运动轨迹有偏差，那么用户看到的商家位置就不准确。</p>\n <h4 id=\"arorientationtrackingconfiguration\">AROrientationTrackingConfiguration</h4>\n <p>AROrientationTrackingConfiguration 只提供对三个姿态角的追踪（3DoF），并且不会开启 VIO。</p>\n <blockquote>\n  <p>Because 3DOF tracking creates limited AR experiences, you should generally not use the AROrientationTrackingConfiguration class directly. Instead, use the subclass ARWorldTrackingConfiguration for tracking with six degrees of freedom (6DOF), plane detection, and hit testing. Use 3DOF tracking only as a fallback in situations where 6DOF tracking is temporarily unavailable.</p>\n </blockquote>\n <p>通常来讲，因为 AROrientationTrackingConfiguration 的追踪能力受限，<a href=\"https://developer.apple.com/documentation/arkit/arorientationtrackingconfiguration?language=objc\">官方文档</a>不推荐直接使用。但是鉴于：</p>\n <ol>\n  <li>对三个姿态角的追踪，已经足以正确的展现商家相对用户的位置了。</li>\n  <li>ARWorldTrackingConfiguration 的高精度追踪，更适合于距离较近的追踪。比如设备相对桌面、地面的位移。但是商家和用户的距离动辄几百米，过于精确的位移追踪意义不大。</li>\n  <li>ARWorldTrackingConfiguration 需要规范用户的操作、确保环境光线良好。这对用户来说很不友好。</li>\n </ol>\n <p>最终我们决定使用 AROrientationTrackingConfiguration。这样的话，即便是在夜晚，甚至遮住摄像头，商家的位置也能够正确的进行展现。而且剧烈晃动带来的影响很小，商家位置虽然会出现短暂的角度偏差，但是在传感器数值稳定下来后就会得到校准。</p>\n <h3 id=\"坐标轴\">坐标轴</h3>\n <p>ARKit 使用笛卡尔坐标系度量真实世界。ARSession 开启时的设备位置即是坐标轴的原点。而 ARSessionConfiguration 的 worldAlignment 属性决定了三个坐标轴的方向，该属性有三个枚举值：</p>\n <ul>\n  <li>ARWorldAlignmentCamera</li>\n  <li>ARWorldAlignmentGravity</li>\n  <li>ARWorldAlignmentGravityAndHeading</li>\n </ul>\n <p>三种枚举值对应的坐标轴如下图所示：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/5cc5cfe79c9907f466bcbd440cd38f38390194.png\" alt=\"图5 三种枚举值对应的坐标轴\"></p>\n <p>对于 ARWorldAlignmentCamera 来说，设备的姿态决定了三个坐标轴的方向。这种坐标设定适用于以设备作为参考系的坐标计算，与真实地理环境无关，比如用 AR 技术丈量真实世界物体的尺寸。</p>\n <p>对于 ARWorldAlignmentGravity 来说，Y 轴方向始终与重力方向平行，而其 X、Z 轴方向仍然由设备的姿态确定。这种坐标设定适用于计算拥有重力属性的物体坐标，比如放置一排氢气球，或者执行一段篮球下落的动画。</p>\n <p>对于 ARWorldAlignmentGravityAndHeading 来说，X、Y、Z 三轴固定朝向正东、正上、正南。在这种模式下 ARKit 内部会根据设备偏航角的朝向与地磁真北（非地磁北）方向的夹角不断地做出调整，以确保 ARKit 坐标系中 -Z 方向与我们真实世界的正北方向吻合。有了这个前提条件，真实世界位置坐标才能够正确地映射到虚拟世界中。显然，ARWorldAlignmentGravityAndHeading 才是我们需要的。</p>\n <h3 id=\"商家坐标\">商家坐标</h3>\n <p>商家坐标的确定，包含水平坐标和垂直坐标两部分：</p>\n <h4 id=\"水平坐标\">水平坐标</h4>\n <p>商家的水平位置只是一组经纬度值，那么如何将它对应到 ARKit 当中呢？我们通过下图来说明：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/0b42b2a3243b7e46645b2d847c8d1ad1195794.png\" alt=\"图6 经纬度转换为坐标\"></p>\n <p>借助 CLLocation 中的 <code>distanceFromLocation:location</code> 方法，可以计算出两个经纬度坐标之间的距离，返回值单位是米。我们可以以用户的经度 lng1、商家的纬度 lat2 作一个辅助点（lng1, lat2），然后分别计算出辅助点距离商家的距离 x、辅助点距离用户的距离 z。ARKit 坐标系同样以米为单位，因而可以直接确定商家的水平坐标（x, -z）。</p>\n <h4 id=\"垂直坐标\">垂直坐标</h4>\n <p>对商家地址进行中文分词可以提取出商户所在楼层数，再乘以一层楼大概的高度，以此确定商家的垂直坐标 y 值：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/7c8022b0ce36f0c087d89877bc617a6934905.png\" alt=\"图7 高度信息提取\"></p>\n <h2 id=\"卡片渲染\">卡片渲染</h2>\n <p>通常我们想展示的信息，都是通过 UIView 及其子类来实现。但是 ARKit 只负责建立真实世界与虚拟世界的桥梁，渲染的部分还是要交给渲染引擎来处理。Apple 给我们提供了三种可选的引擎：</p>\n <ul>\n  <li>Metal</li>\n  <li>SpriteKit</li>\n  <li>SceneKit</li>\n </ul>\n <p>强大的 Metal 引擎包含了 MetalKit、Metal 着色器以及标准库等等工具，可以更高效地利用 GPU，适用于高度定制化的渲染要求。不过 Metal 对于当前需求来说，有些大材小用。</p>\n <p>SpriteKit 是 2D 渲染引擎，它提供了动画、事件处理、物理碰撞等接口，通常用于制作 2D 游戏。SceneKit 是 3D 渲染引擎，它建立在 OpenGL 之上，支持多通道渲染。除了可以处理 3D 物体的物理碰撞和动画，还可以呈现逼真的纹理和粒子特效。SceneKit 可以用于制作 3D 游戏，或者在 App 中加入 3D 内容。</p>\n <p>虽然我们可以用 SpriteKit 把 2D 的卡片放置到 3D 的 AR 世界中，但是考虑到扩展性，方便之后为 AR 页面添加新的功能，这里我们选用 3D 渲染引擎 SceneKit。</p>\n <p>我们可以直接通过创建 ARSCNView 来使用 SceneKit。ARSCNView 是 SCNView 的子类，它做了三件事：</p>\n <ul>\n  <li>将设备摄像头捕捉的每一帧的图像信息作为 3D 场景的背景。</li>\n  <li>将设备摄像头的位置作为 3D 场景的摄像头（观察点）位置。</li>\n  <li>将 ARKit 追踪的真实世界坐标轴与 3D 场景坐标轴重合。</li>\n </ul>\n <h3 id=\"卡片信息\">卡片信息</h3>\n <p>SceneKit 中使用 SCNNode 来管理 3D 物体。设置 SCNNode 的 geometry 属性可以改变物体的外观。系统已经给我们提供了例如 SCNBox、SCNPlane、SCNSphere 等等一些常见的形状，其中 SCNPlane 正是我们所需要的卡片形状。借助 UIGraphics 中的一些方法可以将绘制好的 UIView 渲染成一个 UIImage 对象。根据这张图片创建 SCNPlane，以作为 SCNNode 的外观。</p>\n <h3 id=\"卡片大小\">卡片大小</h3>\n <p>ARKit 中的物体都是近大远小。只要固定好 SCNPlane 的宽高，ARKit 会自动根据距离的远近设置 SCNPlane 的大小。这里列出一个在屏幕上具体的像素数与距离的粗略计算公式，为笔者在开发过程中摸索的经验值：</p>\n <p><img src=\"https://p1.meituan.net/travelcube/193b16ea06f43ab69bed95bf5d85935659444.png\" alt></p>\n <p>也就是说，假如 SCNPlane 的宽度为 30，距离用户 100 米，那么在屏幕上看到这个 SCNPlane 的宽度大约为 \\(530 / 100 \\times 30 = 159\\) pt。</p>\n <h3 id=\"卡片位置\">卡片位置</h3>\n <p>对于距离用户过近的商家卡片，会出现两个问题：</p>\n <ul>\n  <li>由于 ARKit 自动将卡片展现得近大远小，身边的卡片会大到遮住了视野</li>\n  <li>前文提到的 ARSession 使用 AROrientationTrackingConfiguration 追踪模式，由于没有追踪设备的水平位移，当用户走向商家时，并不会发觉商家卡片越来越近</li>\n </ul>\n <p>这里我们将距离用户过近的卡片映射到稍远的位置。如下图所示，距离用户的距离小于 d 的卡片，会被映射到 d-k ~ d 的区间内。</p>\n <p><img src=\"https://p0.meituan.net/travelcube/38b8f33b8dbabecbbaf6cf89d446853429493.png\" alt=\"图8 过近卡片位置映射\"></p>\n <p>假设某商家距离用户的真实距离为 x，映射后的距离为 y，映射关系如下：</p>\n <p><img src=\"https://p1.meituan.net/travelcube/df9a0f3a6ff52ab4f2415029921cb73229002.png\" alt></p>\n <p>这样既解决了距离过近的问题，又可以保持卡片之间的远近关系。用户位置发生位移到达一定阈值后，会触发一次新的网络请求，根据新的用户位置来重新计算商家的位置。这样随着用户的移动，卡片的位置也会持续地更新。</p>\n <h3 id=\"卡片朝向\">卡片朝向</h3>\n <p>SceneKit 会在渲染每一帧之前，根据 SCNNode 的约束自动调整卡片的各种行为，比如碰撞、位置、速度、朝向等等。SCNConstraint 的子类中 SCNLookAtConstraint 和 SCNBillboardConstraint 可以约束卡片的朝向。</p>\n <p>SCNLookAtConstraint 可以让卡片始终朝向空间中某一个点。这样相邻的卡片会出现交叉现象，用户看到的卡片信息很可能是不完整的。使用 SCNBillboardConstraint 可以解决这个问题，让卡片的朝向始终与摄像头的朝向平行。</p>\n <p><img src=\"https://p1.meituan.net/travelcube/c5a922fe433d6d397e95874735685c1e127309.png\" alt=\"图9 卡片朝向的两种约束\"></p>\n <p>下面是创建卡片的示例代码：</p>\n <pre><code class=\"language-objc\">\n// 位置\nSCNVector nodePosition = SCNVectorMake(-200, 5, -80);\n    \n// 外观\nSCNPlane *plane = [SCNPlane planeWithWidth:image.size.width\n                                    height:image.size.height];\nplane.firstMaterial.diffuse.contents = image;\n    \n// 约束\nSCNBillboardConstraint *constraint = [SCNBillboardConstraint billboardConstraint];\nconstraint.freeAxes = SCNBillboardAxisY;\n\nSCNNode *node = [SCNNode nodeWithGeometry:plane];\nnode.position = nodePosition;\nnode.constraints = @[constraint];\n\n</code></pre>\n <h2 id=\"优化\">优化</h2>\n <h3 id=\"遮挡问题\">遮挡问题</h3>\n <p>如果同一个方向的商家数量有很多，那么卡片会出现互相重叠的现象，这会导致用户只能看到离自己近的卡片。这是个比较棘手的问题，如果在屏幕上平铺卡片的话，既牺牲了对商家高度的感知，又无法体现商家距离用户的远近关系。</p>\n <h4 id=\"点击散开的交互方式\">点击散开的交互方式</h4>\n <p>经过漫长的讨论，我们最终决定采取点击重叠区域后，卡片向四周分散的交互方式来解决重叠问题，效果如下：</p>\n <p><img src=\"https://p1.meituan.net/travelcube/d6fecfd839c90c23180c16dc5a2dbfdf1023934.gif\" alt=\"图10 卡片散开的效果\"></p>\n <p>下面围绕点击和投射两个部分，介绍该效果的实现原理。</p>\n <h5 id=\"点击\">点击</h5>\n <p>熟悉 Cocoa Touch 的朋友都了解，UIView 的层级结构是通过 hit-testing 来判断哪个视图响应事件的，在 ARKit 中也不例外。</p>\n <p>ARSCNView 可以使用两种 hit-testing：</p>\n <ul>\n  <li>来自 ARSCNView 的 <code>hitTest:types:</code> 方法：查找点击的位置所对应的<strong>真实世界</strong>中的物体或位置</li>\n  <li>来自 SCNSceneRenderer 协议的 <code>hitTest:options:</code> 方法：查找点击位置所对应的<strong>虚拟世界</strong>中的内容。</li>\n </ul>\n <p>显然，<code>hitTest:options:</code> 才是我们需要的。在 3D 世界中的 hit-testing 就像一束激光一样，向点击位置的方向发射，<code>hitTest:options:</code> 的返回值就是被激光穿透的所有卡片的数组。这样就可以检测到用户点击的位置有哪些卡片发生了重叠。</p>\n <h5 id=\"投射\">投射</h5>\n <p>这里简单介绍一下散开的实现原理。SCNSceneRenderer 协议有两个方法用来投射坐标：</p>\n <ul>\n  <li><code>projectPoint:</code>：将三维坐标系中点的坐标，投射到屏幕坐标系中</li>\n  <li><code>unprojectPoint:</code>：将屏幕坐标系中的点的坐标，投射到三维坐标系中</li>\n </ul>\n <p>其中屏幕坐标系中的点也是个 SCNVector3，其 z 坐标代表着深度，从 0.0（近裁面）到 1.0（远裁面）。散开的整体过程如下:</p>\n <p><img src=\"https://p1.meituan.net/travelcube/9b8b6a6d51567b2d00ce4e8440fa0a09125496.png\" alt=\"图11 投射过程\"></p>\n <p>散开后，点击空白处会恢复散开的状态，回到初始位置。未参与散开的卡片会被淡化，以突出重点，减少视觉压力。</p>\n <h3 id=\"后台聚类\">后台聚类</h3>\n <p>对于排布比较密集的商家，卡片的重叠现象会很严重。点击散开的卡片数量太多对用户不是很友好。后台在返回用户附近的商家数据时，按照商家的经纬度坐标，使用 K-Means 聚类算法进行二维聚类，将距离很近的商家聚合为一个卡片。由于这些商家的位置大体相同，可以采用一个带有数字的卡片来代表几个商家的位置：</p>\n <p><img src=\"https://p1.meituan.net/travelcube/c6ddabb687659dd974288575b07129e21242263.gif\" alt=\"图12 聚合卡片\"></p>\n <h3 id=\"闪烁问题\">闪烁问题</h3>\n <p>实测中发现，距离较近的卡片在重叠区域会发生闪烁的现象：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/f2a96e68e02f7893038085c12bb729221350513.gif\" alt=\"图13 闪烁\"></p>\n <p>这里要引入一个 3D 渲染引擎普遍要面对的问题——可见性问题。简单来说就是屏幕上哪些物体应该被展示，哪些物体应该被遮挡。GPU 最终应该在屏幕上渲染出所有应该被展示的像素。</p>\n <p>可见性问题的一个典型的解决方案就是<a href=\"https://en.wikipedia.org/wiki/Painter%27s_algorithm\">画家算法</a>，它像一个头脑简单的画家一样，先绘制最远的物体，然后一层层的绘制到最近的物体。可想而知，画家算法的效率很低，绘制较精细场景会很消耗资源。</p>\n <h4 id=\"深度缓冲\">深度缓冲</h4>\n <p><a href=\"https://en.wikipedia.org/wiki/Z-buffering\">深度缓冲</a></p>\n <p>弥补了画家算法的缺陷，它使用一个二维数组来存储当前屏幕中每个像素的深度。如下图所示，某个像素点渲染了深度为 0.5 的像素，并储存该像素的深度：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/be2944a2f197ecedfe8c6dc5cf8d5a1762143.png\" alt=\"图14 深度缓冲区\"></p>\n <p>下一帧时，当另外一个物体的某个像素也在这个像素点渲染时，GPU 会对该像素的深度与缓冲区中的深度进行比较，深度小者被保留并被存入缓冲区，深度大者不被渲染。如下图所示，该像素点下一帧要渲染的像素深度为 0.2，比缓冲区存储的 0.5 小，其深度被存储，并且该像素被渲染在屏幕上：</p>\n <p><img src=\"https://p1.meituan.net/travelcube/186b6dfe1b6b5e1c882fa535dd2fa10856360.png\" alt=\"图15 深度小的像素被保留\"></p>\n <p>显然，深度缓冲技术相比画家算法，可以极大地提升渲染效率。但是它也会带来深度冲突的问题。</p>\n <h3 id=\"深度冲突\">深度冲突</h3>\n <p>深度缓冲技术在处理具有相同深度的像素点时，会出现深度冲突（<a href=\"https://en.wikipedia.org/wiki/Z-fighting\">Z-fighting</a>）现象。这些具有相同深度的像素点在竞争中只有一个“胜出”，显示在屏幕上。如下图所示：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/dc337677a5838995f3b4858cd9ec2f5862575.png\" alt=\"图16 深度冲突\"></p>\n <p>如果这两个像素点交替“胜出”，就会出现我们视觉上的闪烁效果。由于每个卡片都被设置了 SCNBillboardConstraint 约束，始终朝向摄像头方向。摄像头轻微的角度变化，都会引起卡片之间出现部分重合。与有厚度的物体不同，卡片之间的深度关系变化很快，很容易出现多个卡片在屏幕同一个位置渲染的情况。所以经常会出现闪烁的现象：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/f2af050f210789267f63b2c59f2a3a4b384869.gif\" alt=\"图17 角度变化引起的深度冲突\"></p>\n <p>为了解决这 Bug 般的体验，最终决定牺牲深度缓冲带来的渲染效率。SceneKit 为我们暴露了深度是否写入、读取缓冲区的接口，我们将其禁用即可：</p>\n <pre><code class=\"language-objc\">\n    plane.firstMaterial.writesToDepthBuffer = NO;\n    plane.firstMaterial.readsFromDepthBuffer = NO;\n    \n</code></pre>\n <p>由于卡片内容内容相对简单，禁用缓冲区对帧率几乎没什么影响。</p>\n <h2 id=\"总结\">总结</h2>\n <p>在到餐业务场景中，以 AR+LBS 的方式展现商家信息，可以给用户带来沉浸式的体验。本文介绍了 ARKit 的一些使用细节，总结了在开发过程中遇到的问题以及解决方案，希望可以给其他开发者带来一点参考价值。</p>\n <h2 id=\"作者简介\">作者简介</h2>\n <ul>\n  <li>曹宇，美团 iOS 开发工程师。2017年加入美团到店餐饮事业群，参与美团客户端美食频道开发工作。</li>\n </ul>\n <h2 id=\"招聘信息\">招聘信息</h2>\n <p>到店餐饮技术部，负责美团和点评两个平台的美食频道相关业务，服务于数以亿计用户，通过更好的榜单、真实的评价和完善的信息为用户提供更好的决策支持，致力于提升用户体验。我们同时承载所有餐饮商户端线上流量，为餐饮商户提供多种营销工具，提升餐饮商户营销效率，最终达到让国人“Eat Better、Live Better”的美好愿景！我们的团队需要经验丰富的FE方向高级/资深工程师和技术专家，欢迎有兴趣的同学投递简历至wangying49#meituan.com。</p>\n</div>', '2019-07-24 15:09:52', 'JavaScript', '9400', 'ARKit：增强现实技术在美团到餐业务的实践0.9090052418808793', 'ARKit：增强现实技术在美团到餐业务的实践', '2019-07-24 15:09:52', ' 曹宇');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d09c3e0169', '<div class=\"content\">\n <h2 id=\"前言\">前言</h2>\n <p>增强现实（Augmented Reality）是一种在视觉上呈现虚拟物体与现实场景结合的技术。Apple 公司在 2017 年 6 月正式推出了 ARKit，iOS 开发者可以在这个平台上使用简单便捷的 API 来开发 AR 应用程序。</p>\n <p>本文将结合美团到餐业务场景，介绍一种基于位置服务（LBS）的 AR 应用。使用 AR 的方式展现商家相对用户的位置，这会给用户带来身临其境的沉浸式体验。下面是实现效果：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/732a753f62e16fad5f3a25b62ef0fb5f3141236.gif\" alt=\"图1 实现效果图\"></p>\n <h2 id=\"项目实现\">项目实现</h2>\n <p>iOS 平台的 AR 应用通常由 ARKit 和渲染引擎两部分构成：</p>\n <p><img src=\"https://p1.meituan.net/travelcube/53e453c1c4b51661304e67e86b732fa554579.png\" alt=\"图2 AR 应用的整体架构\"></p>\n <p>ARKit 是连接真实世界与虚拟世界的桥梁，而渲染引擎是把虚拟世界的内容渲染到屏幕上。本部分会围绕这两个方面展开介绍。</p>\n <h2 id=\"arkit\">ARKit</h2>\n <p>ARKit 的 ARSession 负责管理每一帧的信息。ARSession 做了两件事：拍摄图像并获取传感器数据；对数据进行分析处理后逐帧输出。如下图：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/67ac56552e4facfc2b043d07bce35c92123099.png\" alt=\"图3 ARKit 结构图\"></p>\n <h3 id=\"设备追踪\">设备追踪</h3>\n <p>设备追踪确保了虚拟物体的位置不受设备移动的影响。在启动 ARSession 时需要传入一个 ARSessionConfiguration 的子类对象，以区别三种追踪模式：</p>\n <ul>\n  <li>ARFaceTrackingConfiguration</li>\n  <li>ARWorldTrackingConfiguration</li>\n  <li>AROrientationTrackingConfiguration</li>\n </ul>\n <p>其中 ARFaceTrackingConfiguration 可以识别人脸的位置、方向以及获取拓扑结构。此外，还可以探测到预设的 52 种丰富的面部动作，如眨眼、微笑、皱眉等等。ARFaceTrackingConfiguration 需要调用支持 TrueDepth 的前置摄像头进行追踪，显然不能满足我们的需求，这里就不做过多的介绍。下面只针对使用后置摄像头的另外两种类型进行对比。</p>\n <h4 id=\"arworldtrackingconfiguration\">ARWorldTrackingConfiguration</h4>\n <p>ARWorldTrackingConfiguration 提供 6DoF（Six Degree of Freedom）的设备追踪。包括三个姿态角 Yaw（偏航角）、Pitch（俯仰角）和 Roll（翻滚角），以及沿笛卡尔坐标系中 X、Y 和 Z 三轴的偏移量：</p>\n <p><img src=\"https://p1.meituan.net/travelcube/4a7aab5b6336c60e0ce2242d4a63b263245819.png\" alt=\"图4 6DoF\"></p>\n <p>不仅如此，ARKit 还使用了 VIO（Visual-Inertial Odometry）来提高设备运动追踪的精度。在使用惯性测量单元(<a href=\"https://en.wikipedia.org/wiki/Inertial_measurement_unit\">IMU</a>)检测运动轨迹的同时，对运动过程中摄像头拍摄到的图片进行图像处理。将图像中的一些特征点的变化轨迹与传感器的结果进行比对后，输出最终的高精度结果。</p>\n <p>从追踪的维度和准确度来看，ARWorldTrackingConfiguration 非常强悍。但如<a href=\"https://developer.apple.com/documentation/arkit/understanding_world_tracking_in_arkit?language=objc\">官方文档</a>所言，它也有两个致命的缺点：</p>\n <ul>\n  <li>受环境光线质量影响</li>\n  <li>受剧烈运动影响</li>\n </ul>\n <p>由于在追踪过程中要通过采集图像来提取特征点，所以图像的质量会影响追踪的结果。在光线较差的环境下（比如夜晚或者强光），拍摄的图像无法提供正确的参考，追踪的质量也会随之下降。</p>\n <p>追踪过程中会逐帧比对图像与传感器结果，如果设备在短时间内剧烈的移动，会很大程度上干扰追踪结果。追踪的结果与真实的运动轨迹有偏差，那么用户看到的商家位置就不准确。</p>\n <h4 id=\"arorientationtrackingconfiguration\">AROrientationTrackingConfiguration</h4>\n <p>AROrientationTrackingConfiguration 只提供对三个姿态角的追踪（3DoF），并且不会开启 VIO。</p>\n <blockquote>\n  <p>Because 3DOF tracking creates limited AR experiences, you should generally not use the AROrientationTrackingConfiguration class directly. Instead, use the subclass ARWorldTrackingConfiguration for tracking with six degrees of freedom (6DOF), plane detection, and hit testing. Use 3DOF tracking only as a fallback in situations where 6DOF tracking is temporarily unavailable.</p>\n </blockquote>\n <p>通常来讲，因为 AROrientationTrackingConfiguration 的追踪能力受限，<a href=\"https://developer.apple.com/documentation/arkit/arorientationtrackingconfiguration?language=objc\">官方文档</a>不推荐直接使用。但是鉴于：</p>\n <ol>\n  <li>对三个姿态角的追踪，已经足以正确的展现商家相对用户的位置了。</li>\n  <li>ARWorldTrackingConfiguration 的高精度追踪，更适合于距离较近的追踪。比如设备相对桌面、地面的位移。但是商家和用户的距离动辄几百米，过于精确的位移追踪意义不大。</li>\n  <li>ARWorldTrackingConfiguration 需要规范用户的操作、确保环境光线良好。这对用户来说很不友好。</li>\n </ol>\n <p>最终我们决定使用 AROrientationTrackingConfiguration。这样的话，即便是在夜晚，甚至遮住摄像头，商家的位置也能够正确的进行展现。而且剧烈晃动带来的影响很小，商家位置虽然会出现短暂的角度偏差，但是在传感器数值稳定下来后就会得到校准。</p>\n <h3 id=\"坐标轴\">坐标轴</h3>\n <p>ARKit 使用笛卡尔坐标系度量真实世界。ARSession 开启时的设备位置即是坐标轴的原点。而 ARSessionConfiguration 的 worldAlignment 属性决定了三个坐标轴的方向，该属性有三个枚举值：</p>\n <ul>\n  <li>ARWorldAlignmentCamera</li>\n  <li>ARWorldAlignmentGravity</li>\n  <li>ARWorldAlignmentGravityAndHeading</li>\n </ul>\n <p>三种枚举值对应的坐标轴如下图所示：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/5cc5cfe79c9907f466bcbd440cd38f38390194.png\" alt=\"图5 三种枚举值对应的坐标轴\"></p>\n <p>对于 ARWorldAlignmentCamera 来说，设备的姿态决定了三个坐标轴的方向。这种坐标设定适用于以设备作为参考系的坐标计算，与真实地理环境无关，比如用 AR 技术丈量真实世界物体的尺寸。</p>\n <p>对于 ARWorldAlignmentGravity 来说，Y 轴方向始终与重力方向平行，而其 X、Z 轴方向仍然由设备的姿态确定。这种坐标设定适用于计算拥有重力属性的物体坐标，比如放置一排氢气球，或者执行一段篮球下落的动画。</p>\n <p>对于 ARWorldAlignmentGravityAndHeading 来说，X、Y、Z 三轴固定朝向正东、正上、正南。在这种模式下 ARKit 内部会根据设备偏航角的朝向与地磁真北（非地磁北）方向的夹角不断地做出调整，以确保 ARKit 坐标系中 -Z 方向与我们真实世界的正北方向吻合。有了这个前提条件，真实世界位置坐标才能够正确地映射到虚拟世界中。显然，ARWorldAlignmentGravityAndHeading 才是我们需要的。</p>\n <h3 id=\"商家坐标\">商家坐标</h3>\n <p>商家坐标的确定，包含水平坐标和垂直坐标两部分：</p>\n <h4 id=\"水平坐标\">水平坐标</h4>\n <p>商家的水平位置只是一组经纬度值，那么如何将它对应到 ARKit 当中呢？我们通过下图来说明：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/0b42b2a3243b7e46645b2d847c8d1ad1195794.png\" alt=\"图6 经纬度转换为坐标\"></p>\n <p>借助 CLLocation 中的 <code>distanceFromLocation:location</code> 方法，可以计算出两个经纬度坐标之间的距离，返回值单位是米。我们可以以用户的经度 lng1、商家的纬度 lat2 作一个辅助点（lng1, lat2），然后分别计算出辅助点距离商家的距离 x、辅助点距离用户的距离 z。ARKit 坐标系同样以米为单位，因而可以直接确定商家的水平坐标（x, -z）。</p>\n <h4 id=\"垂直坐标\">垂直坐标</h4>\n <p>对商家地址进行中文分词可以提取出商户所在楼层数，再乘以一层楼大概的高度，以此确定商家的垂直坐标 y 值：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/7c8022b0ce36f0c087d89877bc617a6934905.png\" alt=\"图7 高度信息提取\"></p>\n <h2 id=\"卡片渲染\">卡片渲染</h2>\n <p>通常我们想展示的信息，都是通过 UIView 及其子类来实现。但是 ARKit 只负责建立真实世界与虚拟世界的桥梁，渲染的部分还是要交给渲染引擎来处理。Apple 给我们提供了三种可选的引擎：</p>\n <ul>\n  <li>Metal</li>\n  <li>SpriteKit</li>\n  <li>SceneKit</li>\n </ul>\n <p>强大的 Metal 引擎包含了 MetalKit、Metal 着色器以及标准库等等工具，可以更高效地利用 GPU，适用于高度定制化的渲染要求。不过 Metal 对于当前需求来说，有些大材小用。</p>\n <p>SpriteKit 是 2D 渲染引擎，它提供了动画、事件处理、物理碰撞等接口，通常用于制作 2D 游戏。SceneKit 是 3D 渲染引擎，它建立在 OpenGL 之上，支持多通道渲染。除了可以处理 3D 物体的物理碰撞和动画，还可以呈现逼真的纹理和粒子特效。SceneKit 可以用于制作 3D 游戏，或者在 App 中加入 3D 内容。</p>\n <p>虽然我们可以用 SpriteKit 把 2D 的卡片放置到 3D 的 AR 世界中，但是考虑到扩展性，方便之后为 AR 页面添加新的功能，这里我们选用 3D 渲染引擎 SceneKit。</p>\n <p>我们可以直接通过创建 ARSCNView 来使用 SceneKit。ARSCNView 是 SCNView 的子类，它做了三件事：</p>\n <ul>\n  <li>将设备摄像头捕捉的每一帧的图像信息作为 3D 场景的背景。</li>\n  <li>将设备摄像头的位置作为 3D 场景的摄像头（观察点）位置。</li>\n  <li>将 ARKit 追踪的真实世界坐标轴与 3D 场景坐标轴重合。</li>\n </ul>\n <h3 id=\"卡片信息\">卡片信息</h3>\n <p>SceneKit 中使用 SCNNode 来管理 3D 物体。设置 SCNNode 的 geometry 属性可以改变物体的外观。系统已经给我们提供了例如 SCNBox、SCNPlane、SCNSphere 等等一些常见的形状，其中 SCNPlane 正是我们所需要的卡片形状。借助 UIGraphics 中的一些方法可以将绘制好的 UIView 渲染成一个 UIImage 对象。根据这张图片创建 SCNPlane，以作为 SCNNode 的外观。</p>\n <h3 id=\"卡片大小\">卡片大小</h3>\n <p>ARKit 中的物体都是近大远小。只要固定好 SCNPlane 的宽高，ARKit 会自动根据距离的远近设置 SCNPlane 的大小。这里列出一个在屏幕上具体的像素数与距离的粗略计算公式，为笔者在开发过程中摸索的经验值：</p>\n <p><img src=\"https://p1.meituan.net/travelcube/193b16ea06f43ab69bed95bf5d85935659444.png\" alt></p>\n <p>也就是说，假如 SCNPlane 的宽度为 30，距离用户 100 米，那么在屏幕上看到这个 SCNPlane 的宽度大约为 \\(530 / 100 \\times 30 = 159\\) pt。</p>\n <h3 id=\"卡片位置\">卡片位置</h3>\n <p>对于距离用户过近的商家卡片，会出现两个问题：</p>\n <ul>\n  <li>由于 ARKit 自动将卡片展现得近大远小，身边的卡片会大到遮住了视野</li>\n  <li>前文提到的 ARSession 使用 AROrientationTrackingConfiguration 追踪模式，由于没有追踪设备的水平位移，当用户走向商家时，并不会发觉商家卡片越来越近</li>\n </ul>\n <p>这里我们将距离用户过近的卡片映射到稍远的位置。如下图所示，距离用户的距离小于 d 的卡片，会被映射到 d-k ~ d 的区间内。</p>\n <p><img src=\"https://p0.meituan.net/travelcube/38b8f33b8dbabecbbaf6cf89d446853429493.png\" alt=\"图8 过近卡片位置映射\"></p>\n <p>假设某商家距离用户的真实距离为 x，映射后的距离为 y，映射关系如下：</p>\n <p><img src=\"https://p1.meituan.net/travelcube/df9a0f3a6ff52ab4f2415029921cb73229002.png\" alt></p>\n <p>这样既解决了距离过近的问题，又可以保持卡片之间的远近关系。用户位置发生位移到达一定阈值后，会触发一次新的网络请求，根据新的用户位置来重新计算商家的位置。这样随着用户的移动，卡片的位置也会持续地更新。</p>\n <h3 id=\"卡片朝向\">卡片朝向</h3>\n <p>SceneKit 会在渲染每一帧之前，根据 SCNNode 的约束自动调整卡片的各种行为，比如碰撞、位置、速度、朝向等等。SCNConstraint 的子类中 SCNLookAtConstraint 和 SCNBillboardConstraint 可以约束卡片的朝向。</p>\n <p>SCNLookAtConstraint 可以让卡片始终朝向空间中某一个点。这样相邻的卡片会出现交叉现象，用户看到的卡片信息很可能是不完整的。使用 SCNBillboardConstraint 可以解决这个问题，让卡片的朝向始终与摄像头的朝向平行。</p>\n <p><img src=\"https://p1.meituan.net/travelcube/c5a922fe433d6d397e95874735685c1e127309.png\" alt=\"图9 卡片朝向的两种约束\"></p>\n <p>下面是创建卡片的示例代码：</p>\n <pre><code class=\"language-objc\">\n// 位置\nSCNVector nodePosition = SCNVectorMake(-200, 5, -80);\n    \n// 外观\nSCNPlane *plane = [SCNPlane planeWithWidth:image.size.width\n                                    height:image.size.height];\nplane.firstMaterial.diffuse.contents = image;\n    \n// 约束\nSCNBillboardConstraint *constraint = [SCNBillboardConstraint billboardConstraint];\nconstraint.freeAxes = SCNBillboardAxisY;\n\nSCNNode *node = [SCNNode nodeWithGeometry:plane];\nnode.position = nodePosition;\nnode.constraints = @[constraint];\n\n</code></pre>\n <h2 id=\"优化\">优化</h2>\n <h3 id=\"遮挡问题\">遮挡问题</h3>\n <p>如果同一个方向的商家数量有很多，那么卡片会出现互相重叠的现象，这会导致用户只能看到离自己近的卡片。这是个比较棘手的问题，如果在屏幕上平铺卡片的话，既牺牲了对商家高度的感知，又无法体现商家距离用户的远近关系。</p>\n <h4 id=\"点击散开的交互方式\">点击散开的交互方式</h4>\n <p>经过漫长的讨论，我们最终决定采取点击重叠区域后，卡片向四周分散的交互方式来解决重叠问题，效果如下：</p>\n <p><img src=\"https://p1.meituan.net/travelcube/d6fecfd839c90c23180c16dc5a2dbfdf1023934.gif\" alt=\"图10 卡片散开的效果\"></p>\n <p>下面围绕点击和投射两个部分，介绍该效果的实现原理。</p>\n <h5 id=\"点击\">点击</h5>\n <p>熟悉 Cocoa Touch 的朋友都了解，UIView 的层级结构是通过 hit-testing 来判断哪个视图响应事件的，在 ARKit 中也不例外。</p>\n <p>ARSCNView 可以使用两种 hit-testing：</p>\n <ul>\n  <li>来自 ARSCNView 的 <code>hitTest:types:</code> 方法：查找点击的位置所对应的<strong>真实世界</strong>中的物体或位置</li>\n  <li>来自 SCNSceneRenderer 协议的 <code>hitTest:options:</code> 方法：查找点击位置所对应的<strong>虚拟世界</strong>中的内容。</li>\n </ul>\n <p>显然，<code>hitTest:options:</code> 才是我们需要的。在 3D 世界中的 hit-testing 就像一束激光一样，向点击位置的方向发射，<code>hitTest:options:</code> 的返回值就是被激光穿透的所有卡片的数组。这样就可以检测到用户点击的位置有哪些卡片发生了重叠。</p>\n <h5 id=\"投射\">投射</h5>\n <p>这里简单介绍一下散开的实现原理。SCNSceneRenderer 协议有两个方法用来投射坐标：</p>\n <ul>\n  <li><code>projectPoint:</code>：将三维坐标系中点的坐标，投射到屏幕坐标系中</li>\n  <li><code>unprojectPoint:</code>：将屏幕坐标系中的点的坐标，投射到三维坐标系中</li>\n </ul>\n <p>其中屏幕坐标系中的点也是个 SCNVector3，其 z 坐标代表着深度，从 0.0（近裁面）到 1.0（远裁面）。散开的整体过程如下:</p>\n <p><img src=\"https://p1.meituan.net/travelcube/9b8b6a6d51567b2d00ce4e8440fa0a09125496.png\" alt=\"图11 投射过程\"></p>\n <p>散开后，点击空白处会恢复散开的状态，回到初始位置。未参与散开的卡片会被淡化，以突出重点，减少视觉压力。</p>\n <h3 id=\"后台聚类\">后台聚类</h3>\n <p>对于排布比较密集的商家，卡片的重叠现象会很严重。点击散开的卡片数量太多对用户不是很友好。后台在返回用户附近的商家数据时，按照商家的经纬度坐标，使用 K-Means 聚类算法进行二维聚类，将距离很近的商家聚合为一个卡片。由于这些商家的位置大体相同，可以采用一个带有数字的卡片来代表几个商家的位置：</p>\n <p><img src=\"https://p1.meituan.net/travelcube/c6ddabb687659dd974288575b07129e21242263.gif\" alt=\"图12 聚合卡片\"></p>\n <h3 id=\"闪烁问题\">闪烁问题</h3>\n <p>实测中发现，距离较近的卡片在重叠区域会发生闪烁的现象：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/f2a96e68e02f7893038085c12bb729221350513.gif\" alt=\"图13 闪烁\"></p>\n <p>这里要引入一个 3D 渲染引擎普遍要面对的问题——可见性问题。简单来说就是屏幕上哪些物体应该被展示，哪些物体应该被遮挡。GPU 最终应该在屏幕上渲染出所有应该被展示的像素。</p>\n <p>可见性问题的一个典型的解决方案就是<a href=\"https://en.wikipedia.org/wiki/Painter%27s_algorithm\">画家算法</a>，它像一个头脑简单的画家一样，先绘制最远的物体，然后一层层的绘制到最近的物体。可想而知，画家算法的效率很低，绘制较精细场景会很消耗资源。</p>\n <h4 id=\"深度缓冲\">深度缓冲</h4>\n <p><a href=\"https://en.wikipedia.org/wiki/Z-buffering\">深度缓冲</a></p>\n <p>弥补了画家算法的缺陷，它使用一个二维数组来存储当前屏幕中每个像素的深度。如下图所示，某个像素点渲染了深度为 0.5 的像素，并储存该像素的深度：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/be2944a2f197ecedfe8c6dc5cf8d5a1762143.png\" alt=\"图14 深度缓冲区\"></p>\n <p>下一帧时，当另外一个物体的某个像素也在这个像素点渲染时，GPU 会对该像素的深度与缓冲区中的深度进行比较，深度小者被保留并被存入缓冲区，深度大者不被渲染。如下图所示，该像素点下一帧要渲染的像素深度为 0.2，比缓冲区存储的 0.5 小，其深度被存储，并且该像素被渲染在屏幕上：</p>\n <p><img src=\"https://p1.meituan.net/travelcube/186b6dfe1b6b5e1c882fa535dd2fa10856360.png\" alt=\"图15 深度小的像素被保留\"></p>\n <p>显然，深度缓冲技术相比画家算法，可以极大地提升渲染效率。但是它也会带来深度冲突的问题。</p>\n <h3 id=\"深度冲突\">深度冲突</h3>\n <p>深度缓冲技术在处理具有相同深度的像素点时，会出现深度冲突（<a href=\"https://en.wikipedia.org/wiki/Z-fighting\">Z-fighting</a>）现象。这些具有相同深度的像素点在竞争中只有一个“胜出”，显示在屏幕上。如下图所示：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/dc337677a5838995f3b4858cd9ec2f5862575.png\" alt=\"图16 深度冲突\"></p>\n <p>如果这两个像素点交替“胜出”，就会出现我们视觉上的闪烁效果。由于每个卡片都被设置了 SCNBillboardConstraint 约束，始终朝向摄像头方向。摄像头轻微的角度变化，都会引起卡片之间出现部分重合。与有厚度的物体不同，卡片之间的深度关系变化很快，很容易出现多个卡片在屏幕同一个位置渲染的情况。所以经常会出现闪烁的现象：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/f2af050f210789267f63b2c59f2a3a4b384869.gif\" alt=\"图17 角度变化引起的深度冲突\"></p>\n <p>为了解决这 Bug 般的体验，最终决定牺牲深度缓冲带来的渲染效率。SceneKit 为我们暴露了深度是否写入、读取缓冲区的接口，我们将其禁用即可：</p>\n <pre><code class=\"language-objc\">\n    plane.firstMaterial.writesToDepthBuffer = NO;\n    plane.firstMaterial.readsFromDepthBuffer = NO;\n    \n</code></pre>\n <p>由于卡片内容内容相对简单，禁用缓冲区对帧率几乎没什么影响。</p>\n <h2 id=\"总结\">总结</h2>\n <p>在到餐业务场景中，以 AR+LBS 的方式展现商家信息，可以给用户带来沉浸式的体验。本文介绍了 ARKit 的一些使用细节，总结了在开发过程中遇到的问题以及解决方案，希望可以给其他开发者带来一点参考价值。</p>\n <h2 id=\"作者简介\">作者简介</h2>\n <ul>\n  <li>曹宇，美团 iOS 开发工程师。2017年加入美团到店餐饮事业群，参与美团客户端美食频道开发工作。</li>\n </ul>\n <h2 id=\"招聘信息\">招聘信息</h2>\n <p>到店餐饮技术部，负责美团和点评两个平台的美食频道相关业务，服务于数以亿计用户，通过更好的榜单、真实的评价和完善的信息为用户提供更好的决策支持，致力于提升用户体验。我们同时承载所有餐饮商户端线上流量，为餐饮商户提供多种营销工具，提升餐饮商户营销效率，最终达到让国人“Eat Better、Live Better”的美好愿景！我们的团队需要经验丰富的FE方向高级/资深工程师和技术专家，欢迎有兴趣的同学投递简历至wangying49#meituan.com。</p>\n</div>', '2019-07-24 15:09:53', 'Java', '9400', 'ARKit：增强现实技术在美团到餐业务的实践0.37809615860500567', 'ARKit：增强现实技术在美团到餐业务的实践', '2019-07-24 15:09:53', ' 曹宇');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d09ca7016a', '<div class=\"content\">\n <h2 id=\"前言\">前言</h2>\n <p>增强现实（Augmented Reality）是一种在视觉上呈现虚拟物体与现实场景结合的技术。Apple 公司在 2017 年 6 月正式推出了 ARKit，iOS 开发者可以在这个平台上使用简单便捷的 API 来开发 AR 应用程序。</p>\n <p>本文将结合美团到餐业务场景，介绍一种基于位置服务（LBS）的 AR 应用。使用 AR 的方式展现商家相对用户的位置，这会给用户带来身临其境的沉浸式体验。下面是实现效果：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/732a753f62e16fad5f3a25b62ef0fb5f3141236.gif\" alt=\"图1 实现效果图\"></p>\n <h2 id=\"项目实现\">项目实现</h2>\n <p>iOS 平台的 AR 应用通常由 ARKit 和渲染引擎两部分构成：</p>\n <p><img src=\"https://p1.meituan.net/travelcube/53e453c1c4b51661304e67e86b732fa554579.png\" alt=\"图2 AR 应用的整体架构\"></p>\n <p>ARKit 是连接真实世界与虚拟世界的桥梁，而渲染引擎是把虚拟世界的内容渲染到屏幕上。本部分会围绕这两个方面展开介绍。</p>\n <h2 id=\"arkit\">ARKit</h2>\n <p>ARKit 的 ARSession 负责管理每一帧的信息。ARSession 做了两件事：拍摄图像并获取传感器数据；对数据进行分析处理后逐帧输出。如下图：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/67ac56552e4facfc2b043d07bce35c92123099.png\" alt=\"图3 ARKit 结构图\"></p>\n <h3 id=\"设备追踪\">设备追踪</h3>\n <p>设备追踪确保了虚拟物体的位置不受设备移动的影响。在启动 ARSession 时需要传入一个 ARSessionConfiguration 的子类对象，以区别三种追踪模式：</p>\n <ul>\n  <li>ARFaceTrackingConfiguration</li>\n  <li>ARWorldTrackingConfiguration</li>\n  <li>AROrientationTrackingConfiguration</li>\n </ul>\n <p>其中 ARFaceTrackingConfiguration 可以识别人脸的位置、方向以及获取拓扑结构。此外，还可以探测到预设的 52 种丰富的面部动作，如眨眼、微笑、皱眉等等。ARFaceTrackingConfiguration 需要调用支持 TrueDepth 的前置摄像头进行追踪，显然不能满足我们的需求，这里就不做过多的介绍。下面只针对使用后置摄像头的另外两种类型进行对比。</p>\n <h4 id=\"arworldtrackingconfiguration\">ARWorldTrackingConfiguration</h4>\n <p>ARWorldTrackingConfiguration 提供 6DoF（Six Degree of Freedom）的设备追踪。包括三个姿态角 Yaw（偏航角）、Pitch（俯仰角）和 Roll（翻滚角），以及沿笛卡尔坐标系中 X、Y 和 Z 三轴的偏移量：</p>\n <p><img src=\"https://p1.meituan.net/travelcube/4a7aab5b6336c60e0ce2242d4a63b263245819.png\" alt=\"图4 6DoF\"></p>\n <p>不仅如此，ARKit 还使用了 VIO（Visual-Inertial Odometry）来提高设备运动追踪的精度。在使用惯性测量单元(<a href=\"https://en.wikipedia.org/wiki/Inertial_measurement_unit\">IMU</a>)检测运动轨迹的同时，对运动过程中摄像头拍摄到的图片进行图像处理。将图像中的一些特征点的变化轨迹与传感器的结果进行比对后，输出最终的高精度结果。</p>\n <p>从追踪的维度和准确度来看，ARWorldTrackingConfiguration 非常强悍。但如<a href=\"https://developer.apple.com/documentation/arkit/understanding_world_tracking_in_arkit?language=objc\">官方文档</a>所言，它也有两个致命的缺点：</p>\n <ul>\n  <li>受环境光线质量影响</li>\n  <li>受剧烈运动影响</li>\n </ul>\n <p>由于在追踪过程中要通过采集图像来提取特征点，所以图像的质量会影响追踪的结果。在光线较差的环境下（比如夜晚或者强光），拍摄的图像无法提供正确的参考，追踪的质量也会随之下降。</p>\n <p>追踪过程中会逐帧比对图像与传感器结果，如果设备在短时间内剧烈的移动，会很大程度上干扰追踪结果。追踪的结果与真实的运动轨迹有偏差，那么用户看到的商家位置就不准确。</p>\n <h4 id=\"arorientationtrackingconfiguration\">AROrientationTrackingConfiguration</h4>\n <p>AROrientationTrackingConfiguration 只提供对三个姿态角的追踪（3DoF），并且不会开启 VIO。</p>\n <blockquote>\n  <p>Because 3DOF tracking creates limited AR experiences, you should generally not use the AROrientationTrackingConfiguration class directly. Instead, use the subclass ARWorldTrackingConfiguration for tracking with six degrees of freedom (6DOF), plane detection, and hit testing. Use 3DOF tracking only as a fallback in situations where 6DOF tracking is temporarily unavailable.</p>\n </blockquote>\n <p>通常来讲，因为 AROrientationTrackingConfiguration 的追踪能力受限，<a href=\"https://developer.apple.com/documentation/arkit/arorientationtrackingconfiguration?language=objc\">官方文档</a>不推荐直接使用。但是鉴于：</p>\n <ol>\n  <li>对三个姿态角的追踪，已经足以正确的展现商家相对用户的位置了。</li>\n  <li>ARWorldTrackingConfiguration 的高精度追踪，更适合于距离较近的追踪。比如设备相对桌面、地面的位移。但是商家和用户的距离动辄几百米，过于精确的位移追踪意义不大。</li>\n  <li>ARWorldTrackingConfiguration 需要规范用户的操作、确保环境光线良好。这对用户来说很不友好。</li>\n </ol>\n <p>最终我们决定使用 AROrientationTrackingConfiguration。这样的话，即便是在夜晚，甚至遮住摄像头，商家的位置也能够正确的进行展现。而且剧烈晃动带来的影响很小，商家位置虽然会出现短暂的角度偏差，但是在传感器数值稳定下来后就会得到校准。</p>\n <h3 id=\"坐标轴\">坐标轴</h3>\n <p>ARKit 使用笛卡尔坐标系度量真实世界。ARSession 开启时的设备位置即是坐标轴的原点。而 ARSessionConfiguration 的 worldAlignment 属性决定了三个坐标轴的方向，该属性有三个枚举值：</p>\n <ul>\n  <li>ARWorldAlignmentCamera</li>\n  <li>ARWorldAlignmentGravity</li>\n  <li>ARWorldAlignmentGravityAndHeading</li>\n </ul>\n <p>三种枚举值对应的坐标轴如下图所示：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/5cc5cfe79c9907f466bcbd440cd38f38390194.png\" alt=\"图5 三种枚举值对应的坐标轴\"></p>\n <p>对于 ARWorldAlignmentCamera 来说，设备的姿态决定了三个坐标轴的方向。这种坐标设定适用于以设备作为参考系的坐标计算，与真实地理环境无关，比如用 AR 技术丈量真实世界物体的尺寸。</p>\n <p>对于 ARWorldAlignmentGravity 来说，Y 轴方向始终与重力方向平行，而其 X、Z 轴方向仍然由设备的姿态确定。这种坐标设定适用于计算拥有重力属性的物体坐标，比如放置一排氢气球，或者执行一段篮球下落的动画。</p>\n <p>对于 ARWorldAlignmentGravityAndHeading 来说，X、Y、Z 三轴固定朝向正东、正上、正南。在这种模式下 ARKit 内部会根据设备偏航角的朝向与地磁真北（非地磁北）方向的夹角不断地做出调整，以确保 ARKit 坐标系中 -Z 方向与我们真实世界的正北方向吻合。有了这个前提条件，真实世界位置坐标才能够正确地映射到虚拟世界中。显然，ARWorldAlignmentGravityAndHeading 才是我们需要的。</p>\n <h3 id=\"商家坐标\">商家坐标</h3>\n <p>商家坐标的确定，包含水平坐标和垂直坐标两部分：</p>\n <h4 id=\"水平坐标\">水平坐标</h4>\n <p>商家的水平位置只是一组经纬度值，那么如何将它对应到 ARKit 当中呢？我们通过下图来说明：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/0b42b2a3243b7e46645b2d847c8d1ad1195794.png\" alt=\"图6 经纬度转换为坐标\"></p>\n <p>借助 CLLocation 中的 <code>distanceFromLocation:location</code> 方法，可以计算出两个经纬度坐标之间的距离，返回值单位是米。我们可以以用户的经度 lng1、商家的纬度 lat2 作一个辅助点（lng1, lat2），然后分别计算出辅助点距离商家的距离 x、辅助点距离用户的距离 z。ARKit 坐标系同样以米为单位，因而可以直接确定商家的水平坐标（x, -z）。</p>\n <h4 id=\"垂直坐标\">垂直坐标</h4>\n <p>对商家地址进行中文分词可以提取出商户所在楼层数，再乘以一层楼大概的高度，以此确定商家的垂直坐标 y 值：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/7c8022b0ce36f0c087d89877bc617a6934905.png\" alt=\"图7 高度信息提取\"></p>\n <h2 id=\"卡片渲染\">卡片渲染</h2>\n <p>通常我们想展示的信息，都是通过 UIView 及其子类来实现。但是 ARKit 只负责建立真实世界与虚拟世界的桥梁，渲染的部分还是要交给渲染引擎来处理。Apple 给我们提供了三种可选的引擎：</p>\n <ul>\n  <li>Metal</li>\n  <li>SpriteKit</li>\n  <li>SceneKit</li>\n </ul>\n <p>强大的 Metal 引擎包含了 MetalKit、Metal 着色器以及标准库等等工具，可以更高效地利用 GPU，适用于高度定制化的渲染要求。不过 Metal 对于当前需求来说，有些大材小用。</p>\n <p>SpriteKit 是 2D 渲染引擎，它提供了动画、事件处理、物理碰撞等接口，通常用于制作 2D 游戏。SceneKit 是 3D 渲染引擎，它建立在 OpenGL 之上，支持多通道渲染。除了可以处理 3D 物体的物理碰撞和动画，还可以呈现逼真的纹理和粒子特效。SceneKit 可以用于制作 3D 游戏，或者在 App 中加入 3D 内容。</p>\n <p>虽然我们可以用 SpriteKit 把 2D 的卡片放置到 3D 的 AR 世界中，但是考虑到扩展性，方便之后为 AR 页面添加新的功能，这里我们选用 3D 渲染引擎 SceneKit。</p>\n <p>我们可以直接通过创建 ARSCNView 来使用 SceneKit。ARSCNView 是 SCNView 的子类，它做了三件事：</p>\n <ul>\n  <li>将设备摄像头捕捉的每一帧的图像信息作为 3D 场景的背景。</li>\n  <li>将设备摄像头的位置作为 3D 场景的摄像头（观察点）位置。</li>\n  <li>将 ARKit 追踪的真实世界坐标轴与 3D 场景坐标轴重合。</li>\n </ul>\n <h3 id=\"卡片信息\">卡片信息</h3>\n <p>SceneKit 中使用 SCNNode 来管理 3D 物体。设置 SCNNode 的 geometry 属性可以改变物体的外观。系统已经给我们提供了例如 SCNBox、SCNPlane、SCNSphere 等等一些常见的形状，其中 SCNPlane 正是我们所需要的卡片形状。借助 UIGraphics 中的一些方法可以将绘制好的 UIView 渲染成一个 UIImage 对象。根据这张图片创建 SCNPlane，以作为 SCNNode 的外观。</p>\n <h3 id=\"卡片大小\">卡片大小</h3>\n <p>ARKit 中的物体都是近大远小。只要固定好 SCNPlane 的宽高，ARKit 会自动根据距离的远近设置 SCNPlane 的大小。这里列出一个在屏幕上具体的像素数与距离的粗略计算公式，为笔者在开发过程中摸索的经验值：</p>\n <p><img src=\"https://p1.meituan.net/travelcube/193b16ea06f43ab69bed95bf5d85935659444.png\" alt></p>\n <p>也就是说，假如 SCNPlane 的宽度为 30，距离用户 100 米，那么在屏幕上看到这个 SCNPlane 的宽度大约为 \\(530 / 100 \\times 30 = 159\\) pt。</p>\n <h3 id=\"卡片位置\">卡片位置</h3>\n <p>对于距离用户过近的商家卡片，会出现两个问题：</p>\n <ul>\n  <li>由于 ARKit 自动将卡片展现得近大远小，身边的卡片会大到遮住了视野</li>\n  <li>前文提到的 ARSession 使用 AROrientationTrackingConfiguration 追踪模式，由于没有追踪设备的水平位移，当用户走向商家时，并不会发觉商家卡片越来越近</li>\n </ul>\n <p>这里我们将距离用户过近的卡片映射到稍远的位置。如下图所示，距离用户的距离小于 d 的卡片，会被映射到 d-k ~ d 的区间内。</p>\n <p><img src=\"https://p0.meituan.net/travelcube/38b8f33b8dbabecbbaf6cf89d446853429493.png\" alt=\"图8 过近卡片位置映射\"></p>\n <p>假设某商家距离用户的真实距离为 x，映射后的距离为 y，映射关系如下：</p>\n <p><img src=\"https://p1.meituan.net/travelcube/df9a0f3a6ff52ab4f2415029921cb73229002.png\" alt></p>\n <p>这样既解决了距离过近的问题，又可以保持卡片之间的远近关系。用户位置发生位移到达一定阈值后，会触发一次新的网络请求，根据新的用户位置来重新计算商家的位置。这样随着用户的移动，卡片的位置也会持续地更新。</p>\n <h3 id=\"卡片朝向\">卡片朝向</h3>\n <p>SceneKit 会在渲染每一帧之前，根据 SCNNode 的约束自动调整卡片的各种行为，比如碰撞、位置、速度、朝向等等。SCNConstraint 的子类中 SCNLookAtConstraint 和 SCNBillboardConstraint 可以约束卡片的朝向。</p>\n <p>SCNLookAtConstraint 可以让卡片始终朝向空间中某一个点。这样相邻的卡片会出现交叉现象，用户看到的卡片信息很可能是不完整的。使用 SCNBillboardConstraint 可以解决这个问题，让卡片的朝向始终与摄像头的朝向平行。</p>\n <p><img src=\"https://p1.meituan.net/travelcube/c5a922fe433d6d397e95874735685c1e127309.png\" alt=\"图9 卡片朝向的两种约束\"></p>\n <p>下面是创建卡片的示例代码：</p>\n <pre><code class=\"language-objc\">\n// 位置\nSCNVector nodePosition = SCNVectorMake(-200, 5, -80);\n    \n// 外观\nSCNPlane *plane = [SCNPlane planeWithWidth:image.size.width\n                                    height:image.size.height];\nplane.firstMaterial.diffuse.contents = image;\n    \n// 约束\nSCNBillboardConstraint *constraint = [SCNBillboardConstraint billboardConstraint];\nconstraint.freeAxes = SCNBillboardAxisY;\n\nSCNNode *node = [SCNNode nodeWithGeometry:plane];\nnode.position = nodePosition;\nnode.constraints = @[constraint];\n\n</code></pre>\n <h2 id=\"优化\">优化</h2>\n <h3 id=\"遮挡问题\">遮挡问题</h3>\n <p>如果同一个方向的商家数量有很多，那么卡片会出现互相重叠的现象，这会导致用户只能看到离自己近的卡片。这是个比较棘手的问题，如果在屏幕上平铺卡片的话，既牺牲了对商家高度的感知，又无法体现商家距离用户的远近关系。</p>\n <h4 id=\"点击散开的交互方式\">点击散开的交互方式</h4>\n <p>经过漫长的讨论，我们最终决定采取点击重叠区域后，卡片向四周分散的交互方式来解决重叠问题，效果如下：</p>\n <p><img src=\"https://p1.meituan.net/travelcube/d6fecfd839c90c23180c16dc5a2dbfdf1023934.gif\" alt=\"图10 卡片散开的效果\"></p>\n <p>下面围绕点击和投射两个部分，介绍该效果的实现原理。</p>\n <h5 id=\"点击\">点击</h5>\n <p>熟悉 Cocoa Touch 的朋友都了解，UIView 的层级结构是通过 hit-testing 来判断哪个视图响应事件的，在 ARKit 中也不例外。</p>\n <p>ARSCNView 可以使用两种 hit-testing：</p>\n <ul>\n  <li>来自 ARSCNView 的 <code>hitTest:types:</code> 方法：查找点击的位置所对应的<strong>真实世界</strong>中的物体或位置</li>\n  <li>来自 SCNSceneRenderer 协议的 <code>hitTest:options:</code> 方法：查找点击位置所对应的<strong>虚拟世界</strong>中的内容。</li>\n </ul>\n <p>显然，<code>hitTest:options:</code> 才是我们需要的。在 3D 世界中的 hit-testing 就像一束激光一样，向点击位置的方向发射，<code>hitTest:options:</code> 的返回值就是被激光穿透的所有卡片的数组。这样就可以检测到用户点击的位置有哪些卡片发生了重叠。</p>\n <h5 id=\"投射\">投射</h5>\n <p>这里简单介绍一下散开的实现原理。SCNSceneRenderer 协议有两个方法用来投射坐标：</p>\n <ul>\n  <li><code>projectPoint:</code>：将三维坐标系中点的坐标，投射到屏幕坐标系中</li>\n  <li><code>unprojectPoint:</code>：将屏幕坐标系中的点的坐标，投射到三维坐标系中</li>\n </ul>\n <p>其中屏幕坐标系中的点也是个 SCNVector3，其 z 坐标代表着深度，从 0.0（近裁面）到 1.0（远裁面）。散开的整体过程如下:</p>\n <p><img src=\"https://p1.meituan.net/travelcube/9b8b6a6d51567b2d00ce4e8440fa0a09125496.png\" alt=\"图11 投射过程\"></p>\n <p>散开后，点击空白处会恢复散开的状态，回到初始位置。未参与散开的卡片会被淡化，以突出重点，减少视觉压力。</p>\n <h3 id=\"后台聚类\">后台聚类</h3>\n <p>对于排布比较密集的商家，卡片的重叠现象会很严重。点击散开的卡片数量太多对用户不是很友好。后台在返回用户附近的商家数据时，按照商家的经纬度坐标，使用 K-Means 聚类算法进行二维聚类，将距离很近的商家聚合为一个卡片。由于这些商家的位置大体相同，可以采用一个带有数字的卡片来代表几个商家的位置：</p>\n <p><img src=\"https://p1.meituan.net/travelcube/c6ddabb687659dd974288575b07129e21242263.gif\" alt=\"图12 聚合卡片\"></p>\n <h3 id=\"闪烁问题\">闪烁问题</h3>\n <p>实测中发现，距离较近的卡片在重叠区域会发生闪烁的现象：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/f2a96e68e02f7893038085c12bb729221350513.gif\" alt=\"图13 闪烁\"></p>\n <p>这里要引入一个 3D 渲染引擎普遍要面对的问题——可见性问题。简单来说就是屏幕上哪些物体应该被展示，哪些物体应该被遮挡。GPU 最终应该在屏幕上渲染出所有应该被展示的像素。</p>\n <p>可见性问题的一个典型的解决方案就是<a href=\"https://en.wikipedia.org/wiki/Painter%27s_algorithm\">画家算法</a>，它像一个头脑简单的画家一样，先绘制最远的物体，然后一层层的绘制到最近的物体。可想而知，画家算法的效率很低，绘制较精细场景会很消耗资源。</p>\n <h4 id=\"深度缓冲\">深度缓冲</h4>\n <p><a href=\"https://en.wikipedia.org/wiki/Z-buffering\">深度缓冲</a></p>\n <p>弥补了画家算法的缺陷，它使用一个二维数组来存储当前屏幕中每个像素的深度。如下图所示，某个像素点渲染了深度为 0.5 的像素，并储存该像素的深度：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/be2944a2f197ecedfe8c6dc5cf8d5a1762143.png\" alt=\"图14 深度缓冲区\"></p>\n <p>下一帧时，当另外一个物体的某个像素也在这个像素点渲染时，GPU 会对该像素的深度与缓冲区中的深度进行比较，深度小者被保留并被存入缓冲区，深度大者不被渲染。如下图所示，该像素点下一帧要渲染的像素深度为 0.2，比缓冲区存储的 0.5 小，其深度被存储，并且该像素被渲染在屏幕上：</p>\n <p><img src=\"https://p1.meituan.net/travelcube/186b6dfe1b6b5e1c882fa535dd2fa10856360.png\" alt=\"图15 深度小的像素被保留\"></p>\n <p>显然，深度缓冲技术相比画家算法，可以极大地提升渲染效率。但是它也会带来深度冲突的问题。</p>\n <h3 id=\"深度冲突\">深度冲突</h3>\n <p>深度缓冲技术在处理具有相同深度的像素点时，会出现深度冲突（<a href=\"https://en.wikipedia.org/wiki/Z-fighting\">Z-fighting</a>）现象。这些具有相同深度的像素点在竞争中只有一个“胜出”，显示在屏幕上。如下图所示：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/dc337677a5838995f3b4858cd9ec2f5862575.png\" alt=\"图16 深度冲突\"></p>\n <p>如果这两个像素点交替“胜出”，就会出现我们视觉上的闪烁效果。由于每个卡片都被设置了 SCNBillboardConstraint 约束，始终朝向摄像头方向。摄像头轻微的角度变化，都会引起卡片之间出现部分重合。与有厚度的物体不同，卡片之间的深度关系变化很快，很容易出现多个卡片在屏幕同一个位置渲染的情况。所以经常会出现闪烁的现象：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/f2af050f210789267f63b2c59f2a3a4b384869.gif\" alt=\"图17 角度变化引起的深度冲突\"></p>\n <p>为了解决这 Bug 般的体验，最终决定牺牲深度缓冲带来的渲染效率。SceneKit 为我们暴露了深度是否写入、读取缓冲区的接口，我们将其禁用即可：</p>\n <pre><code class=\"language-objc\">\n    plane.firstMaterial.writesToDepthBuffer = NO;\n    plane.firstMaterial.readsFromDepthBuffer = NO;\n    \n</code></pre>\n <p>由于卡片内容内容相对简单，禁用缓冲区对帧率几乎没什么影响。</p>\n <h2 id=\"总结\">总结</h2>\n <p>在到餐业务场景中，以 AR+LBS 的方式展现商家信息，可以给用户带来沉浸式的体验。本文介绍了 ARKit 的一些使用细节，总结了在开发过程中遇到的问题以及解决方案，希望可以给其他开发者带来一点参考价值。</p>\n <h2 id=\"作者简介\">作者简介</h2>\n <ul>\n  <li>曹宇，美团 iOS 开发工程师。2017年加入美团到店餐饮事业群，参与美团客户端美食频道开发工作。</li>\n </ul>\n <h2 id=\"招聘信息\">招聘信息</h2>\n <p>到店餐饮技术部，负责美团和点评两个平台的美食频道相关业务，服务于数以亿计用户，通过更好的榜单、真实的评价和完善的信息为用户提供更好的决策支持，致力于提升用户体验。我们同时承载所有餐饮商户端线上流量，为餐饮商户提供多种营销工具，提升餐饮商户营销效率，最终达到让国人“Eat Better、Live Better”的美好愿景！我们的团队需要经验丰富的FE方向高级/资深工程师和技术专家，欢迎有兴趣的同学投递简历至wangying49#meituan.com。</p>\n</div>', '2019-07-24 15:09:53', '数据库', '9400', 'ARKit：增强现实技术在美团到餐业务的实践0.2993911441454815', 'ARKit：增强现实技术在美团到餐业务的实践', '2019-07-24 15:09:53', ' 曹宇');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d09d07016b', '<div class=\"content\">\n <h2 id=\"前言\">前言</h2>\n <p>增强现实（Augmented Reality）是一种在视觉上呈现虚拟物体与现实场景结合的技术。Apple 公司在 2017 年 6 月正式推出了 ARKit，iOS 开发者可以在这个平台上使用简单便捷的 API 来开发 AR 应用程序。</p>\n <p>本文将结合美团到餐业务场景，介绍一种基于位置服务（LBS）的 AR 应用。使用 AR 的方式展现商家相对用户的位置，这会给用户带来身临其境的沉浸式体验。下面是实现效果：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/732a753f62e16fad5f3a25b62ef0fb5f3141236.gif\" alt=\"图1 实现效果图\"></p>\n <h2 id=\"项目实现\">项目实现</h2>\n <p>iOS 平台的 AR 应用通常由 ARKit 和渲染引擎两部分构成：</p>\n <p><img src=\"https://p1.meituan.net/travelcube/53e453c1c4b51661304e67e86b732fa554579.png\" alt=\"图2 AR 应用的整体架构\"></p>\n <p>ARKit 是连接真实世界与虚拟世界的桥梁，而渲染引擎是把虚拟世界的内容渲染到屏幕上。本部分会围绕这两个方面展开介绍。</p>\n <h2 id=\"arkit\">ARKit</h2>\n <p>ARKit 的 ARSession 负责管理每一帧的信息。ARSession 做了两件事：拍摄图像并获取传感器数据；对数据进行分析处理后逐帧输出。如下图：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/67ac56552e4facfc2b043d07bce35c92123099.png\" alt=\"图3 ARKit 结构图\"></p>\n <h3 id=\"设备追踪\">设备追踪</h3>\n <p>设备追踪确保了虚拟物体的位置不受设备移动的影响。在启动 ARSession 时需要传入一个 ARSessionConfiguration 的子类对象，以区别三种追踪模式：</p>\n <ul>\n  <li>ARFaceTrackingConfiguration</li>\n  <li>ARWorldTrackingConfiguration</li>\n  <li>AROrientationTrackingConfiguration</li>\n </ul>\n <p>其中 ARFaceTrackingConfiguration 可以识别人脸的位置、方向以及获取拓扑结构。此外，还可以探测到预设的 52 种丰富的面部动作，如眨眼、微笑、皱眉等等。ARFaceTrackingConfiguration 需要调用支持 TrueDepth 的前置摄像头进行追踪，显然不能满足我们的需求，这里就不做过多的介绍。下面只针对使用后置摄像头的另外两种类型进行对比。</p>\n <h4 id=\"arworldtrackingconfiguration\">ARWorldTrackingConfiguration</h4>\n <p>ARWorldTrackingConfiguration 提供 6DoF（Six Degree of Freedom）的设备追踪。包括三个姿态角 Yaw（偏航角）、Pitch（俯仰角）和 Roll（翻滚角），以及沿笛卡尔坐标系中 X、Y 和 Z 三轴的偏移量：</p>\n <p><img src=\"https://p1.meituan.net/travelcube/4a7aab5b6336c60e0ce2242d4a63b263245819.png\" alt=\"图4 6DoF\"></p>\n <p>不仅如此，ARKit 还使用了 VIO（Visual-Inertial Odometry）来提高设备运动追踪的精度。在使用惯性测量单元(<a href=\"https://en.wikipedia.org/wiki/Inertial_measurement_unit\">IMU</a>)检测运动轨迹的同时，对运动过程中摄像头拍摄到的图片进行图像处理。将图像中的一些特征点的变化轨迹与传感器的结果进行比对后，输出最终的高精度结果。</p>\n <p>从追踪的维度和准确度来看，ARWorldTrackingConfiguration 非常强悍。但如<a href=\"https://developer.apple.com/documentation/arkit/understanding_world_tracking_in_arkit?language=objc\">官方文档</a>所言，它也有两个致命的缺点：</p>\n <ul>\n  <li>受环境光线质量影响</li>\n  <li>受剧烈运动影响</li>\n </ul>\n <p>由于在追踪过程中要通过采集图像来提取特征点，所以图像的质量会影响追踪的结果。在光线较差的环境下（比如夜晚或者强光），拍摄的图像无法提供正确的参考，追踪的质量也会随之下降。</p>\n <p>追踪过程中会逐帧比对图像与传感器结果，如果设备在短时间内剧烈的移动，会很大程度上干扰追踪结果。追踪的结果与真实的运动轨迹有偏差，那么用户看到的商家位置就不准确。</p>\n <h4 id=\"arorientationtrackingconfiguration\">AROrientationTrackingConfiguration</h4>\n <p>AROrientationTrackingConfiguration 只提供对三个姿态角的追踪（3DoF），并且不会开启 VIO。</p>\n <blockquote>\n  <p>Because 3DOF tracking creates limited AR experiences, you should generally not use the AROrientationTrackingConfiguration class directly. Instead, use the subclass ARWorldTrackingConfiguration for tracking with six degrees of freedom (6DOF), plane detection, and hit testing. Use 3DOF tracking only as a fallback in situations where 6DOF tracking is temporarily unavailable.</p>\n </blockquote>\n <p>通常来讲，因为 AROrientationTrackingConfiguration 的追踪能力受限，<a href=\"https://developer.apple.com/documentation/arkit/arorientationtrackingconfiguration?language=objc\">官方文档</a>不推荐直接使用。但是鉴于：</p>\n <ol>\n  <li>对三个姿态角的追踪，已经足以正确的展现商家相对用户的位置了。</li>\n  <li>ARWorldTrackingConfiguration 的高精度追踪，更适合于距离较近的追踪。比如设备相对桌面、地面的位移。但是商家和用户的距离动辄几百米，过于精确的位移追踪意义不大。</li>\n  <li>ARWorldTrackingConfiguration 需要规范用户的操作、确保环境光线良好。这对用户来说很不友好。</li>\n </ol>\n <p>最终我们决定使用 AROrientationTrackingConfiguration。这样的话，即便是在夜晚，甚至遮住摄像头，商家的位置也能够正确的进行展现。而且剧烈晃动带来的影响很小，商家位置虽然会出现短暂的角度偏差，但是在传感器数值稳定下来后就会得到校准。</p>\n <h3 id=\"坐标轴\">坐标轴</h3>\n <p>ARKit 使用笛卡尔坐标系度量真实世界。ARSession 开启时的设备位置即是坐标轴的原点。而 ARSessionConfiguration 的 worldAlignment 属性决定了三个坐标轴的方向，该属性有三个枚举值：</p>\n <ul>\n  <li>ARWorldAlignmentCamera</li>\n  <li>ARWorldAlignmentGravity</li>\n  <li>ARWorldAlignmentGravityAndHeading</li>\n </ul>\n <p>三种枚举值对应的坐标轴如下图所示：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/5cc5cfe79c9907f466bcbd440cd38f38390194.png\" alt=\"图5 三种枚举值对应的坐标轴\"></p>\n <p>对于 ARWorldAlignmentCamera 来说，设备的姿态决定了三个坐标轴的方向。这种坐标设定适用于以设备作为参考系的坐标计算，与真实地理环境无关，比如用 AR 技术丈量真实世界物体的尺寸。</p>\n <p>对于 ARWorldAlignmentGravity 来说，Y 轴方向始终与重力方向平行，而其 X、Z 轴方向仍然由设备的姿态确定。这种坐标设定适用于计算拥有重力属性的物体坐标，比如放置一排氢气球，或者执行一段篮球下落的动画。</p>\n <p>对于 ARWorldAlignmentGravityAndHeading 来说，X、Y、Z 三轴固定朝向正东、正上、正南。在这种模式下 ARKit 内部会根据设备偏航角的朝向与地磁真北（非地磁北）方向的夹角不断地做出调整，以确保 ARKit 坐标系中 -Z 方向与我们真实世界的正北方向吻合。有了这个前提条件，真实世界位置坐标才能够正确地映射到虚拟世界中。显然，ARWorldAlignmentGravityAndHeading 才是我们需要的。</p>\n <h3 id=\"商家坐标\">商家坐标</h3>\n <p>商家坐标的确定，包含水平坐标和垂直坐标两部分：</p>\n <h4 id=\"水平坐标\">水平坐标</h4>\n <p>商家的水平位置只是一组经纬度值，那么如何将它对应到 ARKit 当中呢？我们通过下图来说明：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/0b42b2a3243b7e46645b2d847c8d1ad1195794.png\" alt=\"图6 经纬度转换为坐标\"></p>\n <p>借助 CLLocation 中的 <code>distanceFromLocation:location</code> 方法，可以计算出两个经纬度坐标之间的距离，返回值单位是米。我们可以以用户的经度 lng1、商家的纬度 lat2 作一个辅助点（lng1, lat2），然后分别计算出辅助点距离商家的距离 x、辅助点距离用户的距离 z。ARKit 坐标系同样以米为单位，因而可以直接确定商家的水平坐标（x, -z）。</p>\n <h4 id=\"垂直坐标\">垂直坐标</h4>\n <p>对商家地址进行中文分词可以提取出商户所在楼层数，再乘以一层楼大概的高度，以此确定商家的垂直坐标 y 值：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/7c8022b0ce36f0c087d89877bc617a6934905.png\" alt=\"图7 高度信息提取\"></p>\n <h2 id=\"卡片渲染\">卡片渲染</h2>\n <p>通常我们想展示的信息，都是通过 UIView 及其子类来实现。但是 ARKit 只负责建立真实世界与虚拟世界的桥梁，渲染的部分还是要交给渲染引擎来处理。Apple 给我们提供了三种可选的引擎：</p>\n <ul>\n  <li>Metal</li>\n  <li>SpriteKit</li>\n  <li>SceneKit</li>\n </ul>\n <p>强大的 Metal 引擎包含了 MetalKit、Metal 着色器以及标准库等等工具，可以更高效地利用 GPU，适用于高度定制化的渲染要求。不过 Metal 对于当前需求来说，有些大材小用。</p>\n <p>SpriteKit 是 2D 渲染引擎，它提供了动画、事件处理、物理碰撞等接口，通常用于制作 2D 游戏。SceneKit 是 3D 渲染引擎，它建立在 OpenGL 之上，支持多通道渲染。除了可以处理 3D 物体的物理碰撞和动画，还可以呈现逼真的纹理和粒子特效。SceneKit 可以用于制作 3D 游戏，或者在 App 中加入 3D 内容。</p>\n <p>虽然我们可以用 SpriteKit 把 2D 的卡片放置到 3D 的 AR 世界中，但是考虑到扩展性，方便之后为 AR 页面添加新的功能，这里我们选用 3D 渲染引擎 SceneKit。</p>\n <p>我们可以直接通过创建 ARSCNView 来使用 SceneKit。ARSCNView 是 SCNView 的子类，它做了三件事：</p>\n <ul>\n  <li>将设备摄像头捕捉的每一帧的图像信息作为 3D 场景的背景。</li>\n  <li>将设备摄像头的位置作为 3D 场景的摄像头（观察点）位置。</li>\n  <li>将 ARKit 追踪的真实世界坐标轴与 3D 场景坐标轴重合。</li>\n </ul>\n <h3 id=\"卡片信息\">卡片信息</h3>\n <p>SceneKit 中使用 SCNNode 来管理 3D 物体。设置 SCNNode 的 geometry 属性可以改变物体的外观。系统已经给我们提供了例如 SCNBox、SCNPlane、SCNSphere 等等一些常见的形状，其中 SCNPlane 正是我们所需要的卡片形状。借助 UIGraphics 中的一些方法可以将绘制好的 UIView 渲染成一个 UIImage 对象。根据这张图片创建 SCNPlane，以作为 SCNNode 的外观。</p>\n <h3 id=\"卡片大小\">卡片大小</h3>\n <p>ARKit 中的物体都是近大远小。只要固定好 SCNPlane 的宽高，ARKit 会自动根据距离的远近设置 SCNPlane 的大小。这里列出一个在屏幕上具体的像素数与距离的粗略计算公式，为笔者在开发过程中摸索的经验值：</p>\n <p><img src=\"https://p1.meituan.net/travelcube/193b16ea06f43ab69bed95bf5d85935659444.png\" alt></p>\n <p>也就是说，假如 SCNPlane 的宽度为 30，距离用户 100 米，那么在屏幕上看到这个 SCNPlane 的宽度大约为 \\(530 / 100 \\times 30 = 159\\) pt。</p>\n <h3 id=\"卡片位置\">卡片位置</h3>\n <p>对于距离用户过近的商家卡片，会出现两个问题：</p>\n <ul>\n  <li>由于 ARKit 自动将卡片展现得近大远小，身边的卡片会大到遮住了视野</li>\n  <li>前文提到的 ARSession 使用 AROrientationTrackingConfiguration 追踪模式，由于没有追踪设备的水平位移，当用户走向商家时，并不会发觉商家卡片越来越近</li>\n </ul>\n <p>这里我们将距离用户过近的卡片映射到稍远的位置。如下图所示，距离用户的距离小于 d 的卡片，会被映射到 d-k ~ d 的区间内。</p>\n <p><img src=\"https://p0.meituan.net/travelcube/38b8f33b8dbabecbbaf6cf89d446853429493.png\" alt=\"图8 过近卡片位置映射\"></p>\n <p>假设某商家距离用户的真实距离为 x，映射后的距离为 y，映射关系如下：</p>\n <p><img src=\"https://p1.meituan.net/travelcube/df9a0f3a6ff52ab4f2415029921cb73229002.png\" alt></p>\n <p>这样既解决了距离过近的问题，又可以保持卡片之间的远近关系。用户位置发生位移到达一定阈值后，会触发一次新的网络请求，根据新的用户位置来重新计算商家的位置。这样随着用户的移动，卡片的位置也会持续地更新。</p>\n <h3 id=\"卡片朝向\">卡片朝向</h3>\n <p>SceneKit 会在渲染每一帧之前，根据 SCNNode 的约束自动调整卡片的各种行为，比如碰撞、位置、速度、朝向等等。SCNConstraint 的子类中 SCNLookAtConstraint 和 SCNBillboardConstraint 可以约束卡片的朝向。</p>\n <p>SCNLookAtConstraint 可以让卡片始终朝向空间中某一个点。这样相邻的卡片会出现交叉现象，用户看到的卡片信息很可能是不完整的。使用 SCNBillboardConstraint 可以解决这个问题，让卡片的朝向始终与摄像头的朝向平行。</p>\n <p><img src=\"https://p1.meituan.net/travelcube/c5a922fe433d6d397e95874735685c1e127309.png\" alt=\"图9 卡片朝向的两种约束\"></p>\n <p>下面是创建卡片的示例代码：</p>\n <pre><code class=\"language-objc\">\n// 位置\nSCNVector nodePosition = SCNVectorMake(-200, 5, -80);\n    \n// 外观\nSCNPlane *plane = [SCNPlane planeWithWidth:image.size.width\n                                    height:image.size.height];\nplane.firstMaterial.diffuse.contents = image;\n    \n// 约束\nSCNBillboardConstraint *constraint = [SCNBillboardConstraint billboardConstraint];\nconstraint.freeAxes = SCNBillboardAxisY;\n\nSCNNode *node = [SCNNode nodeWithGeometry:plane];\nnode.position = nodePosition;\nnode.constraints = @[constraint];\n\n</code></pre>\n <h2 id=\"优化\">优化</h2>\n <h3 id=\"遮挡问题\">遮挡问题</h3>\n <p>如果同一个方向的商家数量有很多，那么卡片会出现互相重叠的现象，这会导致用户只能看到离自己近的卡片。这是个比较棘手的问题，如果在屏幕上平铺卡片的话，既牺牲了对商家高度的感知，又无法体现商家距离用户的远近关系。</p>\n <h4 id=\"点击散开的交互方式\">点击散开的交互方式</h4>\n <p>经过漫长的讨论，我们最终决定采取点击重叠区域后，卡片向四周分散的交互方式来解决重叠问题，效果如下：</p>\n <p><img src=\"https://p1.meituan.net/travelcube/d6fecfd839c90c23180c16dc5a2dbfdf1023934.gif\" alt=\"图10 卡片散开的效果\"></p>\n <p>下面围绕点击和投射两个部分，介绍该效果的实现原理。</p>\n <h5 id=\"点击\">点击</h5>\n <p>熟悉 Cocoa Touch 的朋友都了解，UIView 的层级结构是通过 hit-testing 来判断哪个视图响应事件的，在 ARKit 中也不例外。</p>\n <p>ARSCNView 可以使用两种 hit-testing：</p>\n <ul>\n  <li>来自 ARSCNView 的 <code>hitTest:types:</code> 方法：查找点击的位置所对应的<strong>真实世界</strong>中的物体或位置</li>\n  <li>来自 SCNSceneRenderer 协议的 <code>hitTest:options:</code> 方法：查找点击位置所对应的<strong>虚拟世界</strong>中的内容。</li>\n </ul>\n <p>显然，<code>hitTest:options:</code> 才是我们需要的。在 3D 世界中的 hit-testing 就像一束激光一样，向点击位置的方向发射，<code>hitTest:options:</code> 的返回值就是被激光穿透的所有卡片的数组。这样就可以检测到用户点击的位置有哪些卡片发生了重叠。</p>\n <h5 id=\"投射\">投射</h5>\n <p>这里简单介绍一下散开的实现原理。SCNSceneRenderer 协议有两个方法用来投射坐标：</p>\n <ul>\n  <li><code>projectPoint:</code>：将三维坐标系中点的坐标，投射到屏幕坐标系中</li>\n  <li><code>unprojectPoint:</code>：将屏幕坐标系中的点的坐标，投射到三维坐标系中</li>\n </ul>\n <p>其中屏幕坐标系中的点也是个 SCNVector3，其 z 坐标代表着深度，从 0.0（近裁面）到 1.0（远裁面）。散开的整体过程如下:</p>\n <p><img src=\"https://p1.meituan.net/travelcube/9b8b6a6d51567b2d00ce4e8440fa0a09125496.png\" alt=\"图11 投射过程\"></p>\n <p>散开后，点击空白处会恢复散开的状态，回到初始位置。未参与散开的卡片会被淡化，以突出重点，减少视觉压力。</p>\n <h3 id=\"后台聚类\">后台聚类</h3>\n <p>对于排布比较密集的商家，卡片的重叠现象会很严重。点击散开的卡片数量太多对用户不是很友好。后台在返回用户附近的商家数据时，按照商家的经纬度坐标，使用 K-Means 聚类算法进行二维聚类，将距离很近的商家聚合为一个卡片。由于这些商家的位置大体相同，可以采用一个带有数字的卡片来代表几个商家的位置：</p>\n <p><img src=\"https://p1.meituan.net/travelcube/c6ddabb687659dd974288575b07129e21242263.gif\" alt=\"图12 聚合卡片\"></p>\n <h3 id=\"闪烁问题\">闪烁问题</h3>\n <p>实测中发现，距离较近的卡片在重叠区域会发生闪烁的现象：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/f2a96e68e02f7893038085c12bb729221350513.gif\" alt=\"图13 闪烁\"></p>\n <p>这里要引入一个 3D 渲染引擎普遍要面对的问题——可见性问题。简单来说就是屏幕上哪些物体应该被展示，哪些物体应该被遮挡。GPU 最终应该在屏幕上渲染出所有应该被展示的像素。</p>\n <p>可见性问题的一个典型的解决方案就是<a href=\"https://en.wikipedia.org/wiki/Painter%27s_algorithm\">画家算法</a>，它像一个头脑简单的画家一样，先绘制最远的物体，然后一层层的绘制到最近的物体。可想而知，画家算法的效率很低，绘制较精细场景会很消耗资源。</p>\n <h4 id=\"深度缓冲\">深度缓冲</h4>\n <p><a href=\"https://en.wikipedia.org/wiki/Z-buffering\">深度缓冲</a></p>\n <p>弥补了画家算法的缺陷，它使用一个二维数组来存储当前屏幕中每个像素的深度。如下图所示，某个像素点渲染了深度为 0.5 的像素，并储存该像素的深度：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/be2944a2f197ecedfe8c6dc5cf8d5a1762143.png\" alt=\"图14 深度缓冲区\"></p>\n <p>下一帧时，当另外一个物体的某个像素也在这个像素点渲染时，GPU 会对该像素的深度与缓冲区中的深度进行比较，深度小者被保留并被存入缓冲区，深度大者不被渲染。如下图所示，该像素点下一帧要渲染的像素深度为 0.2，比缓冲区存储的 0.5 小，其深度被存储，并且该像素被渲染在屏幕上：</p>\n <p><img src=\"https://p1.meituan.net/travelcube/186b6dfe1b6b5e1c882fa535dd2fa10856360.png\" alt=\"图15 深度小的像素被保留\"></p>\n <p>显然，深度缓冲技术相比画家算法，可以极大地提升渲染效率。但是它也会带来深度冲突的问题。</p>\n <h3 id=\"深度冲突\">深度冲突</h3>\n <p>深度缓冲技术在处理具有相同深度的像素点时，会出现深度冲突（<a href=\"https://en.wikipedia.org/wiki/Z-fighting\">Z-fighting</a>）现象。这些具有相同深度的像素点在竞争中只有一个“胜出”，显示在屏幕上。如下图所示：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/dc337677a5838995f3b4858cd9ec2f5862575.png\" alt=\"图16 深度冲突\"></p>\n <p>如果这两个像素点交替“胜出”，就会出现我们视觉上的闪烁效果。由于每个卡片都被设置了 SCNBillboardConstraint 约束，始终朝向摄像头方向。摄像头轻微的角度变化，都会引起卡片之间出现部分重合。与有厚度的物体不同，卡片之间的深度关系变化很快，很容易出现多个卡片在屏幕同一个位置渲染的情况。所以经常会出现闪烁的现象：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/f2af050f210789267f63b2c59f2a3a4b384869.gif\" alt=\"图17 角度变化引起的深度冲突\"></p>\n <p>为了解决这 Bug 般的体验，最终决定牺牲深度缓冲带来的渲染效率。SceneKit 为我们暴露了深度是否写入、读取缓冲区的接口，我们将其禁用即可：</p>\n <pre><code class=\"language-objc\">\n    plane.firstMaterial.writesToDepthBuffer = NO;\n    plane.firstMaterial.readsFromDepthBuffer = NO;\n    \n</code></pre>\n <p>由于卡片内容内容相对简单，禁用缓冲区对帧率几乎没什么影响。</p>\n <h2 id=\"总结\">总结</h2>\n <p>在到餐业务场景中，以 AR+LBS 的方式展现商家信息，可以给用户带来沉浸式的体验。本文介绍了 ARKit 的一些使用细节，总结了在开发过程中遇到的问题以及解决方案，希望可以给其他开发者带来一点参考价值。</p>\n <h2 id=\"作者简介\">作者简介</h2>\n <ul>\n  <li>曹宇，美团 iOS 开发工程师。2017年加入美团到店餐饮事业群，参与美团客户端美食频道开发工作。</li>\n </ul>\n <h2 id=\"招聘信息\">招聘信息</h2>\n <p>到店餐饮技术部，负责美团和点评两个平台的美食频道相关业务，服务于数以亿计用户，通过更好的榜单、真实的评价和完善的信息为用户提供更好的决策支持，致力于提升用户体验。我们同时承载所有餐饮商户端线上流量，为餐饮商户提供多种营销工具，提升餐饮商户营销效率，最终达到让国人“Eat Better、Live Better”的美好愿景！我们的团队需要经验丰富的FE方向高级/资深工程师和技术专家，欢迎有兴趣的同学投递简历至wangying49#meituan.com。</p>\n</div>', '2019-07-24 15:09:53', 'Vuex', '9400', 'ARKit：增强现实技术在美团到餐业务的实践0.9715621291900998', 'ARKit：增强现实技术在美团到餐业务的实践', '2019-07-24 15:09:53', ' 曹宇');
INSERT INTO `blog` VALUES ('40281a816c22cc25016c22d09d4f016c', '<div class=\"content\">\n <h2 id=\"前言\">前言</h2>\n <p>增强现实（Augmented Reality）是一种在视觉上呈现虚拟物体与现实场景结合的技术。Apple 公司在 2017 年 6 月正式推出了 ARKit，iOS 开发者可以在这个平台上使用简单便捷的 API 来开发 AR 应用程序。</p>\n <p>本文将结合美团到餐业务场景，介绍一种基于位置服务（LBS）的 AR 应用。使用 AR 的方式展现商家相对用户的位置，这会给用户带来身临其境的沉浸式体验。下面是实现效果：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/732a753f62e16fad5f3a25b62ef0fb5f3141236.gif\" alt=\"图1 实现效果图\"></p>\n <h2 id=\"项目实现\">项目实现</h2>\n <p>iOS 平台的 AR 应用通常由 ARKit 和渲染引擎两部分构成：</p>\n <p><img src=\"https://p1.meituan.net/travelcube/53e453c1c4b51661304e67e86b732fa554579.png\" alt=\"图2 AR 应用的整体架构\"></p>\n <p>ARKit 是连接真实世界与虚拟世界的桥梁，而渲染引擎是把虚拟世界的内容渲染到屏幕上。本部分会围绕这两个方面展开介绍。</p>\n <h2 id=\"arkit\">ARKit</h2>\n <p>ARKit 的 ARSession 负责管理每一帧的信息。ARSession 做了两件事：拍摄图像并获取传感器数据；对数据进行分析处理后逐帧输出。如下图：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/67ac56552e4facfc2b043d07bce35c92123099.png\" alt=\"图3 ARKit 结构图\"></p>\n <h3 id=\"设备追踪\">设备追踪</h3>\n <p>设备追踪确保了虚拟物体的位置不受设备移动的影响。在启动 ARSession 时需要传入一个 ARSessionConfiguration 的子类对象，以区别三种追踪模式：</p>\n <ul>\n  <li>ARFaceTrackingConfiguration</li>\n  <li>ARWorldTrackingConfiguration</li>\n  <li>AROrientationTrackingConfiguration</li>\n </ul>\n <p>其中 ARFaceTrackingConfiguration 可以识别人脸的位置、方向以及获取拓扑结构。此外，还可以探测到预设的 52 种丰富的面部动作，如眨眼、微笑、皱眉等等。ARFaceTrackingConfiguration 需要调用支持 TrueDepth 的前置摄像头进行追踪，显然不能满足我们的需求，这里就不做过多的介绍。下面只针对使用后置摄像头的另外两种类型进行对比。</p>\n <h4 id=\"arworldtrackingconfiguration\">ARWorldTrackingConfiguration</h4>\n <p>ARWorldTrackingConfiguration 提供 6DoF（Six Degree of Freedom）的设备追踪。包括三个姿态角 Yaw（偏航角）、Pitch（俯仰角）和 Roll（翻滚角），以及沿笛卡尔坐标系中 X、Y 和 Z 三轴的偏移量：</p>\n <p><img src=\"https://p1.meituan.net/travelcube/4a7aab5b6336c60e0ce2242d4a63b263245819.png\" alt=\"图4 6DoF\"></p>\n <p>不仅如此，ARKit 还使用了 VIO（Visual-Inertial Odometry）来提高设备运动追踪的精度。在使用惯性测量单元(<a href=\"https://en.wikipedia.org/wiki/Inertial_measurement_unit\">IMU</a>)检测运动轨迹的同时，对运动过程中摄像头拍摄到的图片进行图像处理。将图像中的一些特征点的变化轨迹与传感器的结果进行比对后，输出最终的高精度结果。</p>\n <p>从追踪的维度和准确度来看，ARWorldTrackingConfiguration 非常强悍。但如<a href=\"https://developer.apple.com/documentation/arkit/understanding_world_tracking_in_arkit?language=objc\">官方文档</a>所言，它也有两个致命的缺点：</p>\n <ul>\n  <li>受环境光线质量影响</li>\n  <li>受剧烈运动影响</li>\n </ul>\n <p>由于在追踪过程中要通过采集图像来提取特征点，所以图像的质量会影响追踪的结果。在光线较差的环境下（比如夜晚或者强光），拍摄的图像无法提供正确的参考，追踪的质量也会随之下降。</p>\n <p>追踪过程中会逐帧比对图像与传感器结果，如果设备在短时间内剧烈的移动，会很大程度上干扰追踪结果。追踪的结果与真实的运动轨迹有偏差，那么用户看到的商家位置就不准确。</p>\n <h4 id=\"arorientationtrackingconfiguration\">AROrientationTrackingConfiguration</h4>\n <p>AROrientationTrackingConfiguration 只提供对三个姿态角的追踪（3DoF），并且不会开启 VIO。</p>\n <blockquote>\n  <p>Because 3DOF tracking creates limited AR experiences, you should generally not use the AROrientationTrackingConfiguration class directly. Instead, use the subclass ARWorldTrackingConfiguration for tracking with six degrees of freedom (6DOF), plane detection, and hit testing. Use 3DOF tracking only as a fallback in situations where 6DOF tracking is temporarily unavailable.</p>\n </blockquote>\n <p>通常来讲，因为 AROrientationTrackingConfiguration 的追踪能力受限，<a href=\"https://developer.apple.com/documentation/arkit/arorientationtrackingconfiguration?language=objc\">官方文档</a>不推荐直接使用。但是鉴于：</p>\n <ol>\n  <li>对三个姿态角的追踪，已经足以正确的展现商家相对用户的位置了。</li>\n  <li>ARWorldTrackingConfiguration 的高精度追踪，更适合于距离较近的追踪。比如设备相对桌面、地面的位移。但是商家和用户的距离动辄几百米，过于精确的位移追踪意义不大。</li>\n  <li>ARWorldTrackingConfiguration 需要规范用户的操作、确保环境光线良好。这对用户来说很不友好。</li>\n </ol>\n <p>最终我们决定使用 AROrientationTrackingConfiguration。这样的话，即便是在夜晚，甚至遮住摄像头，商家的位置也能够正确的进行展现。而且剧烈晃动带来的影响很小，商家位置虽然会出现短暂的角度偏差，但是在传感器数值稳定下来后就会得到校准。</p>\n <h3 id=\"坐标轴\">坐标轴</h3>\n <p>ARKit 使用笛卡尔坐标系度量真实世界。ARSession 开启时的设备位置即是坐标轴的原点。而 ARSessionConfiguration 的 worldAlignment 属性决定了三个坐标轴的方向，该属性有三个枚举值：</p>\n <ul>\n  <li>ARWorldAlignmentCamera</li>\n  <li>ARWorldAlignmentGravity</li>\n  <li>ARWorldAlignmentGravityAndHeading</li>\n </ul>\n <p>三种枚举值对应的坐标轴如下图所示：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/5cc5cfe79c9907f466bcbd440cd38f38390194.png\" alt=\"图5 三种枚举值对应的坐标轴\"></p>\n <p>对于 ARWorldAlignmentCamera 来说，设备的姿态决定了三个坐标轴的方向。这种坐标设定适用于以设备作为参考系的坐标计算，与真实地理环境无关，比如用 AR 技术丈量真实世界物体的尺寸。</p>\n <p>对于 ARWorldAlignmentGravity 来说，Y 轴方向始终与重力方向平行，而其 X、Z 轴方向仍然由设备的姿态确定。这种坐标设定适用于计算拥有重力属性的物体坐标，比如放置一排氢气球，或者执行一段篮球下落的动画。</p>\n <p>对于 ARWorldAlignmentGravityAndHeading 来说，X、Y、Z 三轴固定朝向正东、正上、正南。在这种模式下 ARKit 内部会根据设备偏航角的朝向与地磁真北（非地磁北）方向的夹角不断地做出调整，以确保 ARKit 坐标系中 -Z 方向与我们真实世界的正北方向吻合。有了这个前提条件，真实世界位置坐标才能够正确地映射到虚拟世界中。显然，ARWorldAlignmentGravityAndHeading 才是我们需要的。</p>\n <h3 id=\"商家坐标\">商家坐标</h3>\n <p>商家坐标的确定，包含水平坐标和垂直坐标两部分：</p>\n <h4 id=\"水平坐标\">水平坐标</h4>\n <p>商家的水平位置只是一组经纬度值，那么如何将它对应到 ARKit 当中呢？我们通过下图来说明：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/0b42b2a3243b7e46645b2d847c8d1ad1195794.png\" alt=\"图6 经纬度转换为坐标\"></p>\n <p>借助 CLLocation 中的 <code>distanceFromLocation:location</code> 方法，可以计算出两个经纬度坐标之间的距离，返回值单位是米。我们可以以用户的经度 lng1、商家的纬度 lat2 作一个辅助点（lng1, lat2），然后分别计算出辅助点距离商家的距离 x、辅助点距离用户的距离 z。ARKit 坐标系同样以米为单位，因而可以直接确定商家的水平坐标（x, -z）。</p>\n <h4 id=\"垂直坐标\">垂直坐标</h4>\n <p>对商家地址进行中文分词可以提取出商户所在楼层数，再乘以一层楼大概的高度，以此确定商家的垂直坐标 y 值：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/7c8022b0ce36f0c087d89877bc617a6934905.png\" alt=\"图7 高度信息提取\"></p>\n <h2 id=\"卡片渲染\">卡片渲染</h2>\n <p>通常我们想展示的信息，都是通过 UIView 及其子类来实现。但是 ARKit 只负责建立真实世界与虚拟世界的桥梁，渲染的部分还是要交给渲染引擎来处理。Apple 给我们提供了三种可选的引擎：</p>\n <ul>\n  <li>Metal</li>\n  <li>SpriteKit</li>\n  <li>SceneKit</li>\n </ul>\n <p>强大的 Metal 引擎包含了 MetalKit、Metal 着色器以及标准库等等工具，可以更高效地利用 GPU，适用于高度定制化的渲染要求。不过 Metal 对于当前需求来说，有些大材小用。</p>\n <p>SpriteKit 是 2D 渲染引擎，它提供了动画、事件处理、物理碰撞等接口，通常用于制作 2D 游戏。SceneKit 是 3D 渲染引擎，它建立在 OpenGL 之上，支持多通道渲染。除了可以处理 3D 物体的物理碰撞和动画，还可以呈现逼真的纹理和粒子特效。SceneKit 可以用于制作 3D 游戏，或者在 App 中加入 3D 内容。</p>\n <p>虽然我们可以用 SpriteKit 把 2D 的卡片放置到 3D 的 AR 世界中，但是考虑到扩展性，方便之后为 AR 页面添加新的功能，这里我们选用 3D 渲染引擎 SceneKit。</p>\n <p>我们可以直接通过创建 ARSCNView 来使用 SceneKit。ARSCNView 是 SCNView 的子类，它做了三件事：</p>\n <ul>\n  <li>将设备摄像头捕捉的每一帧的图像信息作为 3D 场景的背景。</li>\n  <li>将设备摄像头的位置作为 3D 场景的摄像头（观察点）位置。</li>\n  <li>将 ARKit 追踪的真实世界坐标轴与 3D 场景坐标轴重合。</li>\n </ul>\n <h3 id=\"卡片信息\">卡片信息</h3>\n <p>SceneKit 中使用 SCNNode 来管理 3D 物体。设置 SCNNode 的 geometry 属性可以改变物体的外观。系统已经给我们提供了例如 SCNBox、SCNPlane、SCNSphere 等等一些常见的形状，其中 SCNPlane 正是我们所需要的卡片形状。借助 UIGraphics 中的一些方法可以将绘制好的 UIView 渲染成一个 UIImage 对象。根据这张图片创建 SCNPlane，以作为 SCNNode 的外观。</p>\n <h3 id=\"卡片大小\">卡片大小</h3>\n <p>ARKit 中的物体都是近大远小。只要固定好 SCNPlane 的宽高，ARKit 会自动根据距离的远近设置 SCNPlane 的大小。这里列出一个在屏幕上具体的像素数与距离的粗略计算公式，为笔者在开发过程中摸索的经验值：</p>\n <p><img src=\"https://p1.meituan.net/travelcube/193b16ea06f43ab69bed95bf5d85935659444.png\" alt></p>\n <p>也就是说，假如 SCNPlane 的宽度为 30，距离用户 100 米，那么在屏幕上看到这个 SCNPlane 的宽度大约为 \\(530 / 100 \\times 30 = 159\\) pt。</p>\n <h3 id=\"卡片位置\">卡片位置</h3>\n <p>对于距离用户过近的商家卡片，会出现两个问题：</p>\n <ul>\n  <li>由于 ARKit 自动将卡片展现得近大远小，身边的卡片会大到遮住了视野</li>\n  <li>前文提到的 ARSession 使用 AROrientationTrackingConfiguration 追踪模式，由于没有追踪设备的水平位移，当用户走向商家时，并不会发觉商家卡片越来越近</li>\n </ul>\n <p>这里我们将距离用户过近的卡片映射到稍远的位置。如下图所示，距离用户的距离小于 d 的卡片，会被映射到 d-k ~ d 的区间内。</p>\n <p><img src=\"https://p0.meituan.net/travelcube/38b8f33b8dbabecbbaf6cf89d446853429493.png\" alt=\"图8 过近卡片位置映射\"></p>\n <p>假设某商家距离用户的真实距离为 x，映射后的距离为 y，映射关系如下：</p>\n <p><img src=\"https://p1.meituan.net/travelcube/df9a0f3a6ff52ab4f2415029921cb73229002.png\" alt></p>\n <p>这样既解决了距离过近的问题，又可以保持卡片之间的远近关系。用户位置发生位移到达一定阈值后，会触发一次新的网络请求，根据新的用户位置来重新计算商家的位置。这样随着用户的移动，卡片的位置也会持续地更新。</p>\n <h3 id=\"卡片朝向\">卡片朝向</h3>\n <p>SceneKit 会在渲染每一帧之前，根据 SCNNode 的约束自动调整卡片的各种行为，比如碰撞、位置、速度、朝向等等。SCNConstraint 的子类中 SCNLookAtConstraint 和 SCNBillboardConstraint 可以约束卡片的朝向。</p>\n <p>SCNLookAtConstraint 可以让卡片始终朝向空间中某一个点。这样相邻的卡片会出现交叉现象，用户看到的卡片信息很可能是不完整的。使用 SCNBillboardConstraint 可以解决这个问题，让卡片的朝向始终与摄像头的朝向平行。</p>\n <p><img src=\"https://p1.meituan.net/travelcube/c5a922fe433d6d397e95874735685c1e127309.png\" alt=\"图9 卡片朝向的两种约束\"></p>\n <p>下面是创建卡片的示例代码：</p>\n <pre><code class=\"language-objc\">\n// 位置\nSCNVector nodePosition = SCNVectorMake(-200, 5, -80);\n    \n// 外观\nSCNPlane *plane = [SCNPlane planeWithWidth:image.size.width\n                                    height:image.size.height];\nplane.firstMaterial.diffuse.contents = image;\n    \n// 约束\nSCNBillboardConstraint *constraint = [SCNBillboardConstraint billboardConstraint];\nconstraint.freeAxes = SCNBillboardAxisY;\n\nSCNNode *node = [SCNNode nodeWithGeometry:plane];\nnode.position = nodePosition;\nnode.constraints = @[constraint];\n\n</code></pre>\n <h2 id=\"优化\">优化</h2>\n <h3 id=\"遮挡问题\">遮挡问题</h3>\n <p>如果同一个方向的商家数量有很多，那么卡片会出现互相重叠的现象，这会导致用户只能看到离自己近的卡片。这是个比较棘手的问题，如果在屏幕上平铺卡片的话，既牺牲了对商家高度的感知，又无法体现商家距离用户的远近关系。</p>\n <h4 id=\"点击散开的交互方式\">点击散开的交互方式</h4>\n <p>经过漫长的讨论，我们最终决定采取点击重叠区域后，卡片向四周分散的交互方式来解决重叠问题，效果如下：</p>\n <p><img src=\"https://p1.meituan.net/travelcube/d6fecfd839c90c23180c16dc5a2dbfdf1023934.gif\" alt=\"图10 卡片散开的效果\"></p>\n <p>下面围绕点击和投射两个部分，介绍该效果的实现原理。</p>\n <h5 id=\"点击\">点击</h5>\n <p>熟悉 Cocoa Touch 的朋友都了解，UIView 的层级结构是通过 hit-testing 来判断哪个视图响应事件的，在 ARKit 中也不例外。</p>\n <p>ARSCNView 可以使用两种 hit-testing：</p>\n <ul>\n  <li>来自 ARSCNView 的 <code>hitTest:types:</code> 方法：查找点击的位置所对应的<strong>真实世界</strong>中的物体或位置</li>\n  <li>来自 SCNSceneRenderer 协议的 <code>hitTest:options:</code> 方法：查找点击位置所对应的<strong>虚拟世界</strong>中的内容。</li>\n </ul>\n <p>显然，<code>hitTest:options:</code> 才是我们需要的。在 3D 世界中的 hit-testing 就像一束激光一样，向点击位置的方向发射，<code>hitTest:options:</code> 的返回值就是被激光穿透的所有卡片的数组。这样就可以检测到用户点击的位置有哪些卡片发生了重叠。</p>\n <h5 id=\"投射\">投射</h5>\n <p>这里简单介绍一下散开的实现原理。SCNSceneRenderer 协议有两个方法用来投射坐标：</p>\n <ul>\n  <li><code>projectPoint:</code>：将三维坐标系中点的坐标，投射到屏幕坐标系中</li>\n  <li><code>unprojectPoint:</code>：将屏幕坐标系中的点的坐标，投射到三维坐标系中</li>\n </ul>\n <p>其中屏幕坐标系中的点也是个 SCNVector3，其 z 坐标代表着深度，从 0.0（近裁面）到 1.0（远裁面）。散开的整体过程如下:</p>\n <p><img src=\"https://p1.meituan.net/travelcube/9b8b6a6d51567b2d00ce4e8440fa0a09125496.png\" alt=\"图11 投射过程\"></p>\n <p>散开后，点击空白处会恢复散开的状态，回到初始位置。未参与散开的卡片会被淡化，以突出重点，减少视觉压力。</p>\n <h3 id=\"后台聚类\">后台聚类</h3>\n <p>对于排布比较密集的商家，卡片的重叠现象会很严重。点击散开的卡片数量太多对用户不是很友好。后台在返回用户附近的商家数据时，按照商家的经纬度坐标，使用 K-Means 聚类算法进行二维聚类，将距离很近的商家聚合为一个卡片。由于这些商家的位置大体相同，可以采用一个带有数字的卡片来代表几个商家的位置：</p>\n <p><img src=\"https://p1.meituan.net/travelcube/c6ddabb687659dd974288575b07129e21242263.gif\" alt=\"图12 聚合卡片\"></p>\n <h3 id=\"闪烁问题\">闪烁问题</h3>\n <p>实测中发现，距离较近的卡片在重叠区域会发生闪烁的现象：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/f2a96e68e02f7893038085c12bb729221350513.gif\" alt=\"图13 闪烁\"></p>\n <p>这里要引入一个 3D 渲染引擎普遍要面对的问题——可见性问题。简单来说就是屏幕上哪些物体应该被展示，哪些物体应该被遮挡。GPU 最终应该在屏幕上渲染出所有应该被展示的像素。</p>\n <p>可见性问题的一个典型的解决方案就是<a href=\"https://en.wikipedia.org/wiki/Painter%27s_algorithm\">画家算法</a>，它像一个头脑简单的画家一样，先绘制最远的物体，然后一层层的绘制到最近的物体。可想而知，画家算法的效率很低，绘制较精细场景会很消耗资源。</p>\n <h4 id=\"深度缓冲\">深度缓冲</h4>\n <p><a href=\"https://en.wikipedia.org/wiki/Z-buffering\">深度缓冲</a></p>\n <p>弥补了画家算法的缺陷，它使用一个二维数组来存储当前屏幕中每个像素的深度。如下图所示，某个像素点渲染了深度为 0.5 的像素，并储存该像素的深度：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/be2944a2f197ecedfe8c6dc5cf8d5a1762143.png\" alt=\"图14 深度缓冲区\"></p>\n <p>下一帧时，当另外一个物体的某个像素也在这个像素点渲染时，GPU 会对该像素的深度与缓冲区中的深度进行比较，深度小者被保留并被存入缓冲区，深度大者不被渲染。如下图所示，该像素点下一帧要渲染的像素深度为 0.2，比缓冲区存储的 0.5 小，其深度被存储，并且该像素被渲染在屏幕上：</p>\n <p><img src=\"https://p1.meituan.net/travelcube/186b6dfe1b6b5e1c882fa535dd2fa10856360.png\" alt=\"图15 深度小的像素被保留\"></p>\n <p>显然，深度缓冲技术相比画家算法，可以极大地提升渲染效率。但是它也会带来深度冲突的问题。</p>\n <h3 id=\"深度冲突\">深度冲突</h3>\n <p>深度缓冲技术在处理具有相同深度的像素点时，会出现深度冲突（<a href=\"https://en.wikipedia.org/wiki/Z-fighting\">Z-fighting</a>）现象。这些具有相同深度的像素点在竞争中只有一个“胜出”，显示在屏幕上。如下图所示：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/dc337677a5838995f3b4858cd9ec2f5862575.png\" alt=\"图16 深度冲突\"></p>\n <p>如果这两个像素点交替“胜出”，就会出现我们视觉上的闪烁效果。由于每个卡片都被设置了 SCNBillboardConstraint 约束，始终朝向摄像头方向。摄像头轻微的角度变化，都会引起卡片之间出现部分重合。与有厚度的物体不同，卡片之间的深度关系变化很快，很容易出现多个卡片在屏幕同一个位置渲染的情况。所以经常会出现闪烁的现象：</p>\n <p><img src=\"https://p0.meituan.net/travelcube/f2af050f210789267f63b2c59f2a3a4b384869.gif\" alt=\"图17 角度变化引起的深度冲突\"></p>\n <p>为了解决这 Bug 般的体验，最终决定牺牲深度缓冲带来的渲染效率。SceneKit 为我们暴露了深度是否写入、读取缓冲区的接口，我们将其禁用即可：</p>\n <pre><code class=\"language-objc\">\n    plane.firstMaterial.writesToDepthBuffer = NO;\n    plane.firstMaterial.readsFromDepthBuffer = NO;\n    \n</code></pre>\n <p>由于卡片内容内容相对简单，禁用缓冲区对帧率几乎没什么影响。</p>\n <h2 id=\"总结\">总结</h2>\n <p>在到餐业务场景中，以 AR+LBS 的方式展现商家信息，可以给用户带来沉浸式的体验。本文介绍了 ARKit 的一些使用细节，总结了在开发过程中遇到的问题以及解决方案，希望可以给其他开发者带来一点参考价值。</p>\n <h2 id=\"作者简介\">作者简介</h2>\n <ul>\n  <li>曹宇，美团 iOS 开发工程师。2017年加入美团到店餐饮事业群，参与美团客户端美食频道开发工作。</li>\n </ul>\n <h2 id=\"招聘信息\">招聘信息</h2>\n <p>到店餐饮技术部，负责美团和点评两个平台的美食频道相关业务，服务于数以亿计用户，通过更好的榜单、真实的评价和完善的信息为用户提供更好的决策支持，致力于提升用户体验。我们同时承载所有餐饮商户端线上流量，为餐饮商户提供多种营销工具，提升餐饮商户营销效率，最终达到让国人“Eat Better、Live Better”的美好愿景！我们的团队需要经验丰富的FE方向高级/资深工程师和技术专家，欢迎有兴趣的同学投递简历至wangying49#meituan.com。</p>\n</div>', '2019-07-24 15:09:53', 'jQuery', '9400', 'ARKit：增强现实技术在美团到餐业务的实践0.07364568742707378', 'ARKit：增强现实技术在美团到餐业务的实践', '2019-07-24 15:09:53', ' 曹宇');

INSERT INTO `label_group` VALUES ('40281a816c644c24016c644c55d30000', '代码人生', 'codeLife');
INSERT INTO `label_group` VALUES ('40281a816c644c24016c644c55ff0001', '人工智能', 'AI');
INSERT INTO `label_group` VALUES ('40281a816c644c24016c644c56000002', '设计', 'design');
INSERT INTO `label_group` VALUES ('40281a816c644c24016c644c56000003', '学科', 'discipline');
INSERT INTO `label_group` VALUES ('40281a816c644c24016c644c56000004', '编程语言', 'language');
INSERT INTO `label_group` VALUES ('40281a816c644c24016c644c56010005', '浏览器', 'browser');
INSERT INTO `label_group` VALUES ('40281a816c644c24016c644c56010006', '网络', 'network');
INSERT INTO `label_group` VALUES ('40281a816c644c24016c644c56040007', '数据库', 'database');
INSERT INTO `label_group` VALUES ('40281a816c64558a016c6461add60013', '操作系统', 'system');

INSERT INTO `label_relation` VALUES ('40281a816c64558a016c64602a2e0000', 'discipline', 'WebSocket');
INSERT INTO `label_relation` VALUES ('40281a816c64558a016c64602a3a0001', 'discipline', 'Vuex');
INSERT INTO `label_relation` VALUES ('40281a816c64558a016c64602a3a0002', 'browser', 'Chrome');
INSERT INTO `label_relation` VALUES ('40281a816c64558a016c64602a3a0003', 'discipline', 'jQuery');
INSERT INTO `label_relation` VALUES ('40281a816c64558a016c64602a3a0004', 'discipline', '正则表达式');
INSERT INTO `label_relation` VALUES ('40281a816c64558a016c64602a3a0005', 'network', 'HTTP');
INSERT INTO `label_relation` VALUES ('40281a816c64558a016c64602a3a0006', 'database', 'MySQL');
INSERT INTO `label_relation` VALUES ('40281a816c64558a016c64602a3b0007', 'discipline', 'ECMAScript 6');
INSERT INTO `label_relation` VALUES ('40281a816c64558a016c64602a3b0008', 'discipline', 'Git');
INSERT INTO `label_relation` VALUES ('40281a816c64558a016c64602a3b0009', 'language', 'HTML');
INSERT INTO `label_relation` VALUES ('40281a816c64558a016c64602a3b000a', 'discipline', '设计模式');
INSERT INTO `label_relation` VALUES ('40281a816c64558a016c64602a3b000b', 'codeLife', '代码规范');
INSERT INTO `label_relation` VALUES ('40281a816c64558a016c64602a3b000c', 'design', '图片资源');
INSERT INTO `label_relation` VALUES ('40281a816c64558a016c64602a3c000d', 'system', 'Linux');
INSERT INTO `label_relation` VALUES ('40281a816c64558a016c64602a3c000e', 'AI', '机器学习');
INSERT INTO `label_relation` VALUES ('40281a816c64558a016c64602a3c000f', 'system', 'Android');
INSERT INTO `label_relation` VALUES ('40281a816c64558a016c64602a3c0010', 'system', 'iOS');
INSERT INTO `label_relation` VALUES ('40281a816c64558a016c64602a3c0011', 'language', 'Java');
INSERT INTO `label_relation` VALUES ('40281a816c64558a016c64602a3c0012', 'language', 'JavaScript');
